{"version":3,"sources":["webpack:///node_modules/@ionic/core/dist/esm/ion-checkbox-md.entry.js"],"names":["checkboxIosCss","checkboxMdCss","Checkbox","hostRef","inputId","checkboxIds","name","checked","indeterminate","disabled","value","onClick","setFocus","onFocus","ionFocus","emit","onBlur","ionBlur","ionChange","ionStyle","emitStyle","isChecked","buttonEl","focus","color","el","labelId","mode","label","id","path","d","part","role","Object","assign","viewBox","type","ref","btnEl","style","ios","md"],"mappings":"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","file":"17-es5.js","sourcesContent":["import { r as registerInstance, c as createEvent, h, H as Host, e as getElement } from './index-29df6f59.js';\nimport { b as getIonMode } from './ionic-global-08f4fb8a.js';\nimport { f as findItemLabel, a as renderHiddenInput } from './helpers-5c745fbd.js';\nimport { c as createColorClasses, h as hostContext } from './theme-3f0b0c04.js';\n\nconst checkboxIosCss = \":host{--background-checked:var(--ion-color-primary, #3880ff);--border-color-checked:var(--ion-color-primary, #3880ff);--checkmark-color:var(--ion-color-primary-contrast, #fff);--checkmark-width:1;--transition:none;display:inline-block;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:2}:host(.ion-color){--background-checked:var(--ion-color-base);--border-color-checked:var(--ion-color-base);--checkmark-color:var(--ion-color-contrast)}button{left:0;top:0;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;position:absolute;width:100%;height:100%;border:0;background:transparent;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;outline:none}[dir=rtl] button,:host-context([dir=rtl]) button{left:unset;right:unset;right:0}button::-moz-focus-inner{border:0}.checkbox-icon{border-radius:var(--border-radius);display:block;position:relative;width:100%;height:100%;-webkit-transition:var(--transition);transition:var(--transition);border-width:var(--border-width);border-style:var(--border-style);border-color:var(--border-color);background:var(--background);-webkit-box-sizing:border-box;box-sizing:border-box}.checkbox-icon path{fill:none;stroke:var(--checkmark-color);stroke-width:var(--checkmark-width);opacity:0}:host(.checkbox-checked) .checkbox-icon,:host(.checkbox-indeterminate) .checkbox-icon{border-color:var(--border-color-checked);background:var(--background-checked)}:host(.checkbox-checked) .checkbox-icon path,:host(.checkbox-indeterminate) .checkbox-icon path{opacity:1}:host(.checkbox-disabled){pointer-events:none}:host{--border-radius:50%;--border-width:1px;--border-style:solid;--border-color:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.23);--background:var(--ion-item-background, var(--ion-background-color, #fff));--size:26px;width:var(--size);height:var(--size)}:host(.checkbox-disabled){opacity:0.3}:host(.in-item){margin-left:0;margin-right:8px;margin-top:10px;margin-bottom:9px;display:block;position:static}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.in-item){margin-left:unset;margin-right:unset;-webkit-margin-start:0;margin-inline-start:0;-webkit-margin-end:8px;margin-inline-end:8px}}:host(.in-item[slot=start]){margin-left:2px;margin-right:20px;margin-top:8px;margin-bottom:8px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.in-item[slot=start]){margin-left:unset;margin-right:unset;-webkit-margin-start:2px;margin-inline-start:2px;-webkit-margin-end:20px;margin-inline-end:20px}}\";\n\nconst checkboxMdCss = \":host{--background-checked:var(--ion-color-primary, #3880ff);--border-color-checked:var(--ion-color-primary, #3880ff);--checkmark-color:var(--ion-color-primary-contrast, #fff);--checkmark-width:1;--transition:none;display:inline-block;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:2}:host(.ion-color){--background-checked:var(--ion-color-base);--border-color-checked:var(--ion-color-base);--checkmark-color:var(--ion-color-contrast)}button{left:0;top:0;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;position:absolute;width:100%;height:100%;border:0;background:transparent;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;outline:none}[dir=rtl] button,:host-context([dir=rtl]) button{left:unset;right:unset;right:0}button::-moz-focus-inner{border:0}.checkbox-icon{border-radius:var(--border-radius);display:block;position:relative;width:100%;height:100%;-webkit-transition:var(--transition);transition:var(--transition);border-width:var(--border-width);border-style:var(--border-style);border-color:var(--border-color);background:var(--background);-webkit-box-sizing:border-box;box-sizing:border-box}.checkbox-icon path{fill:none;stroke:var(--checkmark-color);stroke-width:var(--checkmark-width);opacity:0}:host(.checkbox-checked) .checkbox-icon,:host(.checkbox-indeterminate) .checkbox-icon{border-color:var(--border-color-checked);background:var(--background-checked)}:host(.checkbox-checked) .checkbox-icon path,:host(.checkbox-indeterminate) .checkbox-icon path{opacity:1}:host(.checkbox-disabled){pointer-events:none}:host{--border-radius:calc(var(--size) * .125);--border-width:2px;--border-style:solid;--border-color:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.51);--checkmark-width:3;--background:var(--ion-item-background, var(--ion-background-color, #fff));--transition:background 180ms cubic-bezier(0.4, 0, 0.2, 1);--size:18px;width:var(--size);height:var(--size)}.checkbox-icon path{stroke-dasharray:30;stroke-dashoffset:30}:host(.checkbox-checked) .checkbox-icon path,:host(.checkbox-indeterminate) .checkbox-icon path{stroke-dashoffset:0;-webkit-transition:stroke-dashoffset 90ms linear 90ms;transition:stroke-dashoffset 90ms linear 90ms}:host(.checkbox-disabled){opacity:0.3}:host(.in-item){margin-left:0;margin-right:0;margin-top:18px;margin-bottom:18px;display:block;position:static}:host(.in-item[slot=start]){margin-left:4px;margin-right:36px;margin-top:18px;margin-bottom:18px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.in-item[slot=start]){margin-left:unset;margin-right:unset;-webkit-margin-start:4px;margin-inline-start:4px;-webkit-margin-end:36px;margin-inline-end:36px}}\";\n\n/**\n * @virtualProp {\"ios\" | \"md\"} mode - The mode determines which platform styles to use.\n *\n * @part container - The container for the checkbox mark.\n * @part mark - The checkmark used to indicate the checked state.\n */\nclass Checkbox {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.inputId = `ion-cb-${checkboxIds++}`;\n        /**\n         * The name of the control, which is submitted with the form data.\n         */\n        this.name = this.inputId;\n        /**\n         * If `true`, the checkbox is selected.\n         */\n        this.checked = false;\n        /**\n         * If `true`, the checkbox will visually appear as indeterminate.\n         */\n        this.indeterminate = false;\n        /**\n         * If `true`, the user cannot interact with the checkbox.\n         */\n        this.disabled = false;\n        /**\n         * The value of the toggle does not mean if it's checked or not, use the `checked`\n         * property for that.\n         *\n         * The value of a toggle is analogous to the value of a `<input type=\"checkbox\">`,\n         * it's only used when the toggle participates in a native `<form>`.\n         */\n        this.value = 'on';\n        this.onClick = () => {\n            this.setFocus();\n            this.checked = !this.checked;\n            this.indeterminate = false;\n        };\n        this.onFocus = () => {\n            this.ionFocus.emit();\n        };\n        this.onBlur = () => {\n            this.ionBlur.emit();\n        };\n        this.ionChange = createEvent(this, \"ionChange\", 7);\n        this.ionFocus = createEvent(this, \"ionFocus\", 7);\n        this.ionBlur = createEvent(this, \"ionBlur\", 7);\n        this.ionStyle = createEvent(this, \"ionStyle\", 7);\n    }\n    componentWillLoad() {\n        this.emitStyle();\n    }\n    checkedChanged(isChecked) {\n        this.ionChange.emit({\n            checked: isChecked,\n            value: this.value\n        });\n        this.emitStyle();\n    }\n    disabledChanged() {\n        this.emitStyle();\n    }\n    emitStyle() {\n        this.ionStyle.emit({\n            'checkbox-checked': this.checked,\n            'interactive-disabled': this.disabled,\n        });\n    }\n    setFocus() {\n        if (this.buttonEl) {\n            this.buttonEl.focus();\n        }\n    }\n    render() {\n        const { inputId, indeterminate, disabled, checked, value, color, el } = this;\n        const labelId = inputId + '-lbl';\n        const mode = getIonMode(this);\n        const label = findItemLabel(el);\n        if (label) {\n            label.id = labelId;\n        }\n        renderHiddenInput(true, el, this.name, (checked ? value : ''), disabled);\n        let path = indeterminate\n            ? h(\"path\", { d: \"M6 12L18 12\", part: \"mark\" })\n            : h(\"path\", { d: \"M5.9,12.5l3.8,3.8l8.8-8.8\", part: \"mark\" });\n        if (mode === 'md') {\n            path = indeterminate\n                ? h(\"path\", { d: \"M2 12H22\", part: \"mark\" })\n                : h(\"path\", { d: \"M1.73,12.91 8.1,19.28 22.79,4.59\", part: \"mark\" });\n        }\n        return (h(Host, { onClick: this.onClick, role: \"checkbox\", \"aria-disabled\": disabled ? 'true' : null, \"aria-checked\": `${checked}`, \"aria-labelledby\": labelId, class: Object.assign(Object.assign({}, createColorClasses(color)), { [mode]: true, 'in-item': hostContext('ion-item', el), 'checkbox-checked': checked, 'checkbox-disabled': disabled, 'checkbox-indeterminate': indeterminate, 'interactive': true }) }, h(\"svg\", { class: \"checkbox-icon\", viewBox: \"0 0 24 24\", part: \"container\" }, path), h(\"button\", { type: \"button\", onFocus: this.onFocus, onBlur: this.onBlur, disabled: this.disabled, ref: btnEl => this.buttonEl = btnEl })));\n    }\n    get el() { return getElement(this); }\n    static get watchers() { return {\n        \"checked\": [\"checkedChanged\"],\n        \"disabled\": [\"disabledChanged\"]\n    }; }\n}\nlet checkboxIds = 0;\nCheckbox.style = {\n    /*STENCIL:MODE:ios*/ ios: checkboxIosCss,\n    /*STENCIL:MODE:md*/ md: checkboxMdCss\n};\n\nexport { Checkbox as ion_checkbox };\n"]}