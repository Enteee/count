{"version":3,"sources":["webpack:///node_modules/@ionic/core/dist/esm/ion-virtual-scroll.entry.js"],"names":["CELL_TYPE_ITEM","CELL_TYPE_HEADER","CELL_TYPE_FOOTER","NODE_CHANGE_NONE","NODE_CHANGE_POSITION","NODE_CHANGE_CELL","MIN_READS","updateVDom","dom","heightIndex","cells","range","node","change","d","toMutate","end","offset","length","i","cell","find","n","top","push","pool","filter","type","index","visible","forEach","doRender","el","nodeRender","updateCellHeight","children","Array","from","tagName","childrenNu","child","newChild","createNode","classList","add","appendChild","style","transform","remove","reads","template","getTemplate","ownerDocument","importNode","content","querySelector","getViewport","scrollTop","vierportHeight","margin","Math","max","bottom","getRange","viewport","buffer","topPos","bottomPos","min","getShouldUpdate","dirtyIndex","currentRange","findCellIndex","findIndex","c","inplaceUpdate","dst","src","calcCells","items","itemHeight","headerHeight","footerHeight","headerFn","footerFn","approxHeaderHeight","approxFooterHeight","approxItemHeight","j","len","item","value","height","calcHeightIndex","buf","acum","resizeBuffer","Uint32Array","newBuf","set","subarray","positionForIndex","virtualScrollCss","VirtualScroll","hostRef","viewportHeight","virtualDom","isEnabled","viewportOffset","currentScrollTop","indexDirty","lastItemLen","totalHeight","onScroll","updateVirtualScroll","contentEl","closest","console","error","getScrollElement","scrollEl","updateState","undefined","Promise","resolve","getHeightIndex","cellIndex","scheduleUpdate","checkRange","timerUpdate","clearTimeout","readVS","bind","writeVS","topOffset","offsetTop","parentElement","offsetHeight","shouldUpdate","domRender","renderItem","update","window","getComputedStyle","parseFloat","getPropertyValue","setCellHeight","componentOnReady","then","setTimeout","shouldEnable","enableScrollEvents","Infinity","shouldListen","rmEvent","addEventListener","removeEventListener","renderHeader","renderFooter","VirtualProxy","map","renderVirtualNode","utils","vattrs","classes","Object","assign"],"mappings":"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","file":"76-es5.js","sourcesContent":["import { r as registerInstance, d as readTask, w as writeTask, f as forceUpdate, h, H as Host, e as getElement } from './index-29df6f59.js';\n\nconst CELL_TYPE_ITEM = 'item';\nconst CELL_TYPE_HEADER = 'header';\nconst CELL_TYPE_FOOTER = 'footer';\nconst NODE_CHANGE_NONE = 0;\nconst NODE_CHANGE_POSITION = 1;\nconst NODE_CHANGE_CELL = 2;\n\nconst MIN_READS = 2;\nconst updateVDom = (dom, heightIndex, cells, range) => {\n    // reset dom\n    for (const node of dom) {\n        node.change = NODE_CHANGE_NONE;\n        node.d = true;\n    }\n    // try to match into exisiting dom\n    const toMutate = [];\n    const end = range.offset + range.length;\n    for (let i = range.offset; i < end; i++) {\n        const cell = cells[i];\n        const node = dom.find(n => n.d && n.cell === cell);\n        if (node) {\n            const top = heightIndex[i];\n            if (top !== node.top) {\n                node.top = top;\n                node.change = NODE_CHANGE_POSITION;\n            }\n            node.d = false;\n        }\n        else {\n            toMutate.push(cell);\n        }\n    }\n    // needs to append\n    const pool = dom.filter(n => n.d);\n    for (const cell of toMutate) {\n        const node = pool.find(n => n.d && n.cell.type === cell.type);\n        const index = cell.i;\n        if (node) {\n            node.d = false;\n            node.change = NODE_CHANGE_CELL;\n            node.cell = cell;\n            node.top = heightIndex[index];\n        }\n        else {\n            dom.push({\n                d: false,\n                cell,\n                visible: true,\n                change: NODE_CHANGE_CELL,\n                top: heightIndex[index],\n            });\n        }\n    }\n    dom\n        .filter(n => n.d && n.top !== -9999)\n        .forEach(n => {\n        n.change = NODE_CHANGE_POSITION;\n        n.top = -9999;\n    });\n};\nconst doRender = (el, nodeRender, dom, updateCellHeight) => {\n    const children = Array.from(el.children).filter(n => n.tagName !== 'TEMPLATE');\n    const childrenNu = children.length;\n    let child;\n    for (let i = 0; i < dom.length; i++) {\n        const node = dom[i];\n        const cell = node.cell;\n        // the cell change, the content must be updated\n        if (node.change === NODE_CHANGE_CELL) {\n            if (i < childrenNu) {\n                child = children[i];\n                nodeRender(child, cell, i);\n            }\n            else {\n                const newChild = createNode(el, cell.type);\n                child = nodeRender(newChild, cell, i) || newChild;\n                child.classList.add('virtual-item');\n                el.appendChild(child);\n            }\n            child['$ionCell'] = cell;\n        }\n        else {\n            child = children[i];\n        }\n        // only update position when it changes\n        if (node.change !== NODE_CHANGE_NONE) {\n            child.style.transform = `translate3d(0,${node.top}px,0)`;\n        }\n        // update visibility\n        const visible = cell.visible;\n        if (node.visible !== visible) {\n            if (visible) {\n                child.classList.remove('virtual-loading');\n            }\n            else {\n                child.classList.add('virtual-loading');\n            }\n            node.visible = visible;\n        }\n        // dynamic height\n        if (cell.reads > 0) {\n            updateCellHeight(cell, child);\n            cell.reads--;\n        }\n    }\n};\nconst createNode = (el, type) => {\n    const template = getTemplate(el, type);\n    if (template && el.ownerDocument) {\n        return el.ownerDocument.importNode(template.content, true).children[0];\n    }\n    return null;\n};\nconst getTemplate = (el, type) => {\n    switch (type) {\n        case CELL_TYPE_ITEM: return el.querySelector('template:not([name])');\n        case CELL_TYPE_HEADER: return el.querySelector('template[name=header]');\n        case CELL_TYPE_FOOTER: return el.querySelector('template[name=footer]');\n    }\n};\nconst getViewport = (scrollTop, vierportHeight, margin) => {\n    return {\n        top: Math.max(scrollTop - margin, 0),\n        bottom: scrollTop + vierportHeight + margin\n    };\n};\nconst getRange = (heightIndex, viewport, buffer) => {\n    const topPos = viewport.top;\n    const bottomPos = viewport.bottom;\n    // find top index\n    let i = 0;\n    for (; i < heightIndex.length; i++) {\n        if (heightIndex[i] > topPos) {\n            break;\n        }\n    }\n    const offset = Math.max(i - buffer - 1, 0);\n    // find bottom index\n    for (; i < heightIndex.length; i++) {\n        if (heightIndex[i] >= bottomPos) {\n            break;\n        }\n    }\n    const end = Math.min(i + buffer, heightIndex.length);\n    const length = end - offset;\n    return { offset, length };\n};\nconst getShouldUpdate = (dirtyIndex, currentRange, range) => {\n    const end = range.offset + range.length;\n    return (dirtyIndex <= end ||\n        currentRange.offset !== range.offset ||\n        currentRange.length !== range.length);\n};\nconst findCellIndex = (cells, index) => {\n    const max = cells.length > 0 ? cells[cells.length - 1].index : 0;\n    if (index === 0) {\n        return 0;\n    }\n    else if (index === max + 1) {\n        return cells.length;\n    }\n    else {\n        return cells.findIndex(c => c.index === index);\n    }\n};\nconst inplaceUpdate = (dst, src, offset) => {\n    if (offset === 0 && src.length >= dst.length) {\n        return src;\n    }\n    for (let i = 0; i < src.length; i++) {\n        dst[i + offset] = src[i];\n    }\n    return dst;\n};\nconst calcCells = (items, itemHeight, headerHeight, footerHeight, headerFn, footerFn, approxHeaderHeight, approxFooterHeight, approxItemHeight, j, offset, len) => {\n    const cells = [];\n    const end = len + offset;\n    for (let i = offset; i < end; i++) {\n        const item = items[i];\n        if (headerFn) {\n            const value = headerFn(item, i, items);\n            if (value != null) {\n                cells.push({\n                    i: j++,\n                    type: CELL_TYPE_HEADER,\n                    value,\n                    index: i,\n                    height: headerHeight ? headerHeight(value, i) : approxHeaderHeight,\n                    reads: headerHeight ? 0 : MIN_READS,\n                    visible: !!headerHeight,\n                });\n            }\n        }\n        cells.push({\n            i: j++,\n            type: CELL_TYPE_ITEM,\n            value: item,\n            index: i,\n            height: itemHeight ? itemHeight(item, i) : approxItemHeight,\n            reads: itemHeight ? 0 : MIN_READS,\n            visible: !!itemHeight,\n        });\n        if (footerFn) {\n            const value = footerFn(item, i, items);\n            if (value != null) {\n                cells.push({\n                    i: j++,\n                    type: CELL_TYPE_FOOTER,\n                    value,\n                    index: i,\n                    height: footerHeight ? footerHeight(value, i) : approxFooterHeight,\n                    reads: footerHeight ? 0 : MIN_READS,\n                    visible: !!footerHeight,\n                });\n            }\n        }\n    }\n    return cells;\n};\nconst calcHeightIndex = (buf, cells, index) => {\n    let acum = buf[index];\n    for (let i = index; i < buf.length; i++) {\n        buf[i] = acum;\n        acum += cells[i].height;\n    }\n    return acum;\n};\nconst resizeBuffer = (buf, len) => {\n    if (!buf) {\n        return new Uint32Array(len);\n    }\n    if (buf.length === len) {\n        return buf;\n    }\n    else if (len > buf.length) {\n        const newBuf = new Uint32Array(len);\n        newBuf.set(buf);\n        return newBuf;\n    }\n    else {\n        return buf.subarray(0, len);\n    }\n};\nconst positionForIndex = (index, cells, heightIndex) => {\n    const cell = cells.find(c => c.type === CELL_TYPE_ITEM && c.index === index);\n    if (cell) {\n        return heightIndex[cell.i];\n    }\n    return -1;\n};\n\nconst virtualScrollCss = \"ion-virtual-scroll{display:block;position:relative;width:100%;contain:strict;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}ion-virtual-scroll>.virtual-loading{opacity:0}ion-virtual-scroll>.virtual-item{position:absolute !important;top:0 !important;right:0 !important;left:0 !important;-webkit-transition-duration:0ms;transition-duration:0ms;will-change:transform}\";\n\nclass VirtualScroll {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.range = { offset: 0, length: 0 };\n        this.viewportHeight = 0;\n        this.cells = [];\n        this.virtualDom = [];\n        this.isEnabled = false;\n        this.viewportOffset = 0;\n        this.currentScrollTop = 0;\n        this.indexDirty = 0;\n        this.lastItemLen = 0;\n        this.totalHeight = 0;\n        /**\n         * It is important to provide this\n         * if virtual item height will be significantly larger than the default\n         * The approximate height of each virtual item template's cell.\n         * This dimension is used to help determine how many cells should\n         * be created when initialized, and to help calculate the height of\n         * the scrollable area. This height value can only use `px` units.\n         * Note that the actual rendered size of each cell comes from the\n         * app's CSS, whereas this approximation is used to help calculate\n         * initial dimensions before the item has been rendered.\n         */\n        this.approxItemHeight = 45;\n        /**\n         * The approximate height of each header template's cell.\n         * This dimension is used to help determine how many cells should\n         * be created when initialized, and to help calculate the height of\n         * the scrollable area. This height value can only use `px` units.\n         * Note that the actual rendered size of each cell comes from the\n         * app's CSS, whereas this approximation is used to help calculate\n         * initial dimensions before the item has been rendered.\n         */\n        this.approxHeaderHeight = 30;\n        /**\n         * The approximate width of each footer template's cell.\n         * This dimension is used to help determine how many cells should\n         * be created when initialized, and to help calculate the height of\n         * the scrollable area. This height value can only use `px` units.\n         * Note that the actual rendered size of each cell comes from the\n         * app's CSS, whereas this approximation is used to help calculate\n         * initial dimensions before the item has been rendered.\n         */\n        this.approxFooterHeight = 30;\n        this.onScroll = () => {\n            this.updateVirtualScroll();\n        };\n    }\n    itemsChanged() {\n        this.calcCells();\n        this.updateVirtualScroll();\n    }\n    async connectedCallback() {\n        const contentEl = this.el.closest('ion-content');\n        if (!contentEl) {\n            console.error('<ion-virtual-scroll> must be used inside an <ion-content>');\n            return;\n        }\n        this.scrollEl = await contentEl.getScrollElement();\n        this.contentEl = contentEl;\n        this.calcCells();\n        this.updateState();\n    }\n    componentDidUpdate() {\n        this.updateState();\n    }\n    disconnectedCallback() {\n        this.scrollEl = undefined;\n    }\n    onResize() {\n        this.calcCells();\n        this.updateVirtualScroll();\n    }\n    /**\n     * Returns the position of the virtual item at the given index.\n     */\n    positionForItem(index) {\n        return Promise.resolve(positionForIndex(index, this.cells, this.getHeightIndex()));\n    }\n    /**\n     * This method marks a subset of items as dirty, so they can be re-rendered. Items should be marked as\n     * dirty any time the content or their style changes.\n     *\n     * The subset of items to be updated can are specifing by an offset and a length.\n     */\n    async checkRange(offset, len = -1) {\n        // TODO: kind of hacky how we do in-place updated of the cells\n        // array. this part needs a complete refactor\n        if (!this.items) {\n            return;\n        }\n        const length = (len === -1)\n            ? this.items.length - offset\n            : len;\n        const cellIndex = findCellIndex(this.cells, offset);\n        const cells = calcCells(this.items, this.itemHeight, this.headerHeight, this.footerHeight, this.headerFn, this.footerFn, this.approxHeaderHeight, this.approxFooterHeight, this.approxItemHeight, cellIndex, offset, length);\n        this.cells = inplaceUpdate(this.cells, cells, cellIndex);\n        this.lastItemLen = this.items.length;\n        this.indexDirty = Math.max(offset - 1, 0);\n        this.scheduleUpdate();\n    }\n    /**\n     * This method marks the tail the items array as dirty, so they can be re-rendered.\n     *\n     * It's equivalent to calling:\n     *\n     * ```js\n     * virtualScroll.checkRange(lastItemLen);\n     * ```\n     */\n    async checkEnd() {\n        if (this.items) {\n            this.checkRange(this.lastItemLen);\n        }\n    }\n    updateVirtualScroll() {\n        // do nothing if virtual-scroll is disabled\n        if (!this.isEnabled || !this.scrollEl) {\n            return;\n        }\n        // unschedule future updates\n        if (this.timerUpdate) {\n            clearTimeout(this.timerUpdate);\n            this.timerUpdate = undefined;\n        }\n        // schedule DOM operations into the stencil queue\n        readTask(this.readVS.bind(this));\n        writeTask(this.writeVS.bind(this));\n    }\n    readVS() {\n        const { contentEl, scrollEl, el } = this;\n        let topOffset = 0;\n        let node = el;\n        while (node && node !== contentEl) {\n            topOffset += node.offsetTop;\n            node = node.parentElement;\n        }\n        this.viewportOffset = topOffset;\n        if (scrollEl) {\n            this.viewportHeight = scrollEl.offsetHeight;\n            this.currentScrollTop = scrollEl.scrollTop;\n        }\n    }\n    writeVS() {\n        const dirtyIndex = this.indexDirty;\n        // get visible viewport\n        const scrollTop = this.currentScrollTop - this.viewportOffset;\n        const viewport = getViewport(scrollTop, this.viewportHeight, 100);\n        // compute lazily the height index\n        const heightIndex = this.getHeightIndex();\n        // get array bounds of visible cells base in the viewport\n        const range = getRange(heightIndex, viewport, 2);\n        // fast path, do nothing\n        const shouldUpdate = getShouldUpdate(dirtyIndex, this.range, range);\n        if (!shouldUpdate) {\n            return;\n        }\n        this.range = range;\n        // in place mutation of the virtual DOM\n        updateVDom(this.virtualDom, heightIndex, this.cells, range);\n        // Write DOM\n        // Different code paths taken depending of the render API used\n        if (this.nodeRender) {\n            doRender(this.el, this.nodeRender, this.virtualDom, this.updateCellHeight.bind(this));\n        }\n        else if (this.domRender) {\n            this.domRender(this.virtualDom);\n        }\n        else if (this.renderItem) {\n            forceUpdate(this);\n        }\n    }\n    updateCellHeight(cell, node) {\n        const update = () => {\n            if (node['$ionCell'] === cell) {\n                const style = window.getComputedStyle(node);\n                const height = node.offsetHeight + parseFloat(style.getPropertyValue('margin-bottom'));\n                this.setCellHeight(cell, height);\n            }\n        };\n        if (node && node.componentOnReady) {\n            node.componentOnReady().then(update);\n        }\n        else {\n            update();\n        }\n    }\n    setCellHeight(cell, height) {\n        const index = cell.i;\n        // the cell might changed since the height update was scheduled\n        if (cell !== this.cells[index]) {\n            return;\n        }\n        if (cell.height !== height || cell.visible !== true) {\n            cell.visible = true;\n            cell.height = height;\n            this.indexDirty = Math.min(this.indexDirty, index);\n            this.scheduleUpdate();\n        }\n    }\n    scheduleUpdate() {\n        clearTimeout(this.timerUpdate);\n        this.timerUpdate = setTimeout(() => this.updateVirtualScroll(), 100);\n    }\n    updateState() {\n        const shouldEnable = !!(this.scrollEl &&\n            this.cells);\n        if (shouldEnable !== this.isEnabled) {\n            this.enableScrollEvents(shouldEnable);\n            if (shouldEnable) {\n                this.updateVirtualScroll();\n            }\n        }\n    }\n    calcCells() {\n        if (!this.items) {\n            return;\n        }\n        this.lastItemLen = this.items.length;\n        this.cells = calcCells(this.items, this.itemHeight, this.headerHeight, this.footerHeight, this.headerFn, this.footerFn, this.approxHeaderHeight, this.approxFooterHeight, this.approxItemHeight, 0, 0, this.lastItemLen);\n        this.indexDirty = 0;\n    }\n    getHeightIndex() {\n        if (this.indexDirty !== Infinity) {\n            this.calcHeightIndex(this.indexDirty);\n        }\n        return this.heightIndex;\n    }\n    calcHeightIndex(index = 0) {\n        // TODO: optimize, we don't need to calculate all the cells\n        this.heightIndex = resizeBuffer(this.heightIndex, this.cells.length);\n        this.totalHeight = calcHeightIndex(this.heightIndex, this.cells, index);\n        this.indexDirty = Infinity;\n    }\n    enableScrollEvents(shouldListen) {\n        if (this.rmEvent) {\n            this.rmEvent();\n            this.rmEvent = undefined;\n        }\n        const scrollEl = this.scrollEl;\n        if (scrollEl) {\n            this.isEnabled = shouldListen;\n            scrollEl.addEventListener('scroll', this.onScroll);\n            this.rmEvent = () => {\n                scrollEl.removeEventListener('scroll', this.onScroll);\n            };\n        }\n    }\n    renderVirtualNode(node) {\n        const { type, value, index } = node.cell;\n        switch (type) {\n            case CELL_TYPE_ITEM: return this.renderItem(value, index);\n            case CELL_TYPE_HEADER: return this.renderHeader(value, index);\n            case CELL_TYPE_FOOTER: return this.renderFooter(value, index);\n        }\n    }\n    render() {\n        return (h(Host, { style: {\n                height: `${this.totalHeight}px`\n            } }, this.renderItem && (h(VirtualProxy, { dom: this.virtualDom }, this.virtualDom.map(node => this.renderVirtualNode(node))))));\n    }\n    get el() { return getElement(this); }\n    static get watchers() { return {\n        \"itemHeight\": [\"itemsChanged\"],\n        \"headerHeight\": [\"itemsChanged\"],\n        \"footerHeight\": [\"itemsChanged\"],\n        \"items\": [\"itemsChanged\"]\n    }; }\n}\nconst VirtualProxy = ({ dom }, children, utils) => {\n    return utils.map(children, (child, i) => {\n        const node = dom[i];\n        const vattrs = child.vattrs || {};\n        let classes = vattrs.class || '';\n        classes += 'virtual-item ';\n        if (!node.visible) {\n            classes += 'virtual-loading';\n        }\n        return Object.assign(Object.assign({}, child), { vattrs: Object.assign(Object.assign({}, vattrs), { class: classes, style: Object.assign(Object.assign({}, vattrs.style), { transform: `translate3d(0,${node.top}px,0)` }) }) });\n    });\n};\nVirtualScroll.style = virtualScrollCss;\n\nexport { VirtualScroll as ion_virtual_scroll };\n"]}