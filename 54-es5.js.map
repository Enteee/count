{"version":3,"sources":["webpack:///node_modules/@ionic/core/dist/esm/ion-route_4.entry.js"],"names":["Route","hostRef","url","ionRouteDataChanged","newValue","emit","oldValue","keys1","Object","keys","keys2","length","onUpdate","key","RouteRedirect","ionRouteRedirectChanged","ROUTER_INTENT_NONE","ROUTER_INTENT_FORWARD","ROUTER_INTENT_BACK","generatePath","segments","path","filter","s","join","chainToPath","chain","route","segment","param","params","slice","push","writePath","history","root","useHash","direction","state","queryString","parsePath","undefined","pushState","replaceState","removePrefix","prefix","i","readPath","loc","pathname","hash","removeQueryString","split","map","trim","printRoutes","routes","console","group","forEach","r","ids","id","debug","groupEnd","printRedirects","redirects","redirect","to","from","writeNavState","index","changed","animation","outlet","searchNavNode","componentOnReady","setRouteId","result","element","markVisible","error","readNavState","node","getRouteId","waitUntilNavNode","document","body","Promise","resolve","window","addEventListener","once","QUERY","matches","querySelector","matchesRedirect","input","expected","routeRedirect","find","matchesIDs","len","Math","min","toLowerCase","matchesPath","inputPath","RouterSegments","matchesDefault","allparams","data","next","mergeParams","a","b","assign","routerIDsToChain","chains","match","maxMatches","plainIDs","score","routerPathToChain","matchedChain","computePriority","level","pow","shift","readRedirects","Array","children","el","tagName","readProp","readRoutes","flattenRouterTree","readRouteNodes","component","Error","componentProps","prop","hasAttribute","getAttribute","nodes","flattenNode","sub","Router","previousPath","busy","lastState","ionRouteWillChange","ionRouteDidChange","onRoutesChanged","onRedirectChanged","bind","historyDirection","getPath","writeNavStateRoot","ev","detail","register","processNextHandler","back","startsWith","URL","location","href","setPath","waitPromise","warn","safeWriteNavState","win","title","redirectFrom","lock","unlock","p","routeEvent","routeChangeEvent","redirectFromPath","redirectedFrom","routerLinkCss","RouterLink","routerDirection","onClick","routerAnimation","mode","attrs","rel","target","color","style"],"mappings":"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","file":"54-es5.js","sourcesContent":["import { r as registerInstance, c as createEvent, e as getElement, h, H as Host } from './index-29df6f59.js';\nimport { b as getIonMode } from './ionic-global-08f4fb8a.js';\nimport { e as debounce } from './helpers-5c745fbd.js';\nimport { o as openURL, c as createColorClasses } from './theme-3f0b0c04.js';\n\nclass Route {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        /**\n         * Relative path that needs to match in order for this route to apply.\n         *\n         * Accepts paths similar to expressjs so that you can define parameters\n         * in the url /foo/:bar where bar would be available in incoming props.\n         */\n        this.url = '';\n        this.ionRouteDataChanged = createEvent(this, \"ionRouteDataChanged\", 7);\n    }\n    onUpdate(newValue) {\n        this.ionRouteDataChanged.emit(newValue);\n    }\n    onComponentProps(newValue, oldValue) {\n        if (newValue === oldValue) {\n            return;\n        }\n        const keys1 = newValue ? Object.keys(newValue) : [];\n        const keys2 = oldValue ? Object.keys(oldValue) : [];\n        if (keys1.length !== keys2.length) {\n            this.onUpdate(newValue);\n            return;\n        }\n        for (const key of keys1) {\n            if (newValue[key] !== oldValue[key]) {\n                this.onUpdate(newValue);\n                return;\n            }\n        }\n    }\n    connectedCallback() {\n        this.ionRouteDataChanged.emit();\n    }\n    static get watchers() { return {\n        \"url\": [\"onUpdate\"],\n        \"component\": [\"onUpdate\"],\n        \"componentProps\": [\"onComponentProps\"]\n    }; }\n}\n\nclass RouteRedirect {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.ionRouteRedirectChanged = createEvent(this, \"ionRouteRedirectChanged\", 7);\n    }\n    propDidChange() {\n        this.ionRouteRedirectChanged.emit();\n    }\n    connectedCallback() {\n        this.ionRouteRedirectChanged.emit();\n    }\n    static get watchers() { return {\n        \"from\": [\"propDidChange\"],\n        \"to\": [\"propDidChange\"]\n    }; }\n}\n\nconst ROUTER_INTENT_NONE = 'root';\nconst ROUTER_INTENT_FORWARD = 'forward';\nconst ROUTER_INTENT_BACK = 'back';\n\nconst generatePath = (segments) => {\n    const path = segments\n        .filter(s => s.length > 0)\n        .join('/');\n    return '/' + path;\n};\nconst chainToPath = (chain) => {\n    const path = [];\n    for (const route of chain) {\n        for (const segment of route.path) {\n            if (segment[0] === ':') {\n                const param = route.params && route.params[segment.slice(1)];\n                if (!param) {\n                    return null;\n                }\n                path.push(param);\n            }\n            else if (segment !== '') {\n                path.push(segment);\n            }\n        }\n    }\n    return path;\n};\nconst writePath = (history, root, useHash, path, direction, state, queryString) => {\n    let url = generatePath([\n        ...parsePath(root),\n        ...path\n    ]);\n    if (useHash) {\n        url = '#' + url;\n    }\n    if (queryString !== undefined) {\n        url = url + '?' + queryString;\n    }\n    if (direction === ROUTER_INTENT_FORWARD) {\n        history.pushState(state, '', url);\n    }\n    else {\n        history.replaceState(state, '', url);\n    }\n};\nconst removePrefix = (prefix, path) => {\n    if (prefix.length > path.length) {\n        return null;\n    }\n    if (prefix.length <= 1 && prefix[0] === '') {\n        return path;\n    }\n    for (let i = 0; i < prefix.length; i++) {\n        if (prefix[i].length > 0 && prefix[i] !== path[i]) {\n            return null;\n        }\n    }\n    if (path.length === prefix.length) {\n        return [''];\n    }\n    return path.slice(prefix.length);\n};\nconst readPath = (loc, root, useHash) => {\n    let pathname = loc.pathname;\n    if (useHash) {\n        const hash = loc.hash;\n        pathname = (hash[0] === '#')\n            ? hash.slice(1)\n            : '';\n    }\n    const prefix = parsePath(root);\n    const path = parsePath(pathname);\n    return removePrefix(prefix, path);\n};\nconst parsePath = (path) => {\n    if (path == null) {\n        return [''];\n    }\n    const removeQueryString = path.split('?')[0];\n    const segments = removeQueryString.split('/')\n        .map(s => s.trim())\n        .filter(s => s.length > 0);\n    if (segments.length === 0) {\n        return [''];\n    }\n    else {\n        return segments;\n    }\n};\n\nconst printRoutes = (routes) => {\n    console.group(`[ion-core] ROUTES[${routes.length}]`);\n    for (const chain of routes) {\n        const path = [];\n        chain.forEach(r => path.push(...r.path));\n        const ids = chain.map(r => r.id);\n        console.debug(`%c ${generatePath(path)}`, 'font-weight: bold; padding-left: 20px', '=>\\t', `(${ids.join(', ')})`);\n    }\n    console.groupEnd();\n};\nconst printRedirects = (redirects) => {\n    console.group(`[ion-core] REDIRECTS[${redirects.length}]`);\n    for (const redirect of redirects) {\n        if (redirect.to) {\n            console.debug('FROM: ', `$c ${generatePath(redirect.from)}`, 'font-weight: bold', ' TO: ', `$c ${generatePath(redirect.to)}`, 'font-weight: bold');\n        }\n    }\n    console.groupEnd();\n};\n\nconst writeNavState = async (root, chain, direction, index, changed = false, animation) => {\n    try {\n        // find next navigation outlet in the DOM\n        const outlet = searchNavNode(root);\n        // make sure we can continue interacting the DOM, otherwise abort\n        if (index >= chain.length || !outlet) {\n            return changed;\n        }\n        await outlet.componentOnReady();\n        const route = chain[index];\n        const result = await outlet.setRouteId(route.id, route.params, direction, animation);\n        // if the outlet changed the page, reset navigation to neutral (no direction)\n        // this means nested outlets will not animate\n        if (result.changed) {\n            direction = ROUTER_INTENT_NONE;\n            changed = true;\n        }\n        // recursively set nested outlets\n        changed = await writeNavState(result.element, chain, direction, index + 1, changed, animation);\n        // once all nested outlets are visible let's make the parent visible too,\n        // using markVisible prevents flickering\n        if (result.markVisible) {\n            await result.markVisible();\n        }\n        return changed;\n    }\n    catch (e) {\n        console.error(e);\n        return false;\n    }\n};\nconst readNavState = async (root) => {\n    const ids = [];\n    let outlet;\n    let node = root;\n    // tslint:disable-next-line:no-constant-condition\n    while (true) {\n        outlet = searchNavNode(node);\n        if (outlet) {\n            const id = await outlet.getRouteId();\n            if (id) {\n                node = id.element;\n                id.element = undefined;\n                ids.push(id);\n            }\n            else {\n                break;\n            }\n        }\n        else {\n            break;\n        }\n    }\n    return { ids, outlet };\n};\nconst waitUntilNavNode = () => {\n    if (searchNavNode(document.body)) {\n        return Promise.resolve();\n    }\n    return new Promise(resolve => {\n        window.addEventListener('ionNavWillLoad', resolve, { once: true });\n    });\n};\nconst QUERY = ':not([no-router]) ion-nav, :not([no-router]) ion-tabs, :not([no-router]) ion-router-outlet';\nconst searchNavNode = (root) => {\n    if (!root) {\n        return undefined;\n    }\n    if (root.matches(QUERY)) {\n        return root;\n    }\n    const outlet = root.querySelector(QUERY);\n    return outlet ? outlet : undefined;\n};\n\nconst matchesRedirect = (input, route) => {\n    const { from, to } = route;\n    if (to === undefined) {\n        return false;\n    }\n    if (from.length > input.length) {\n        return false;\n    }\n    for (let i = 0; i < from.length; i++) {\n        const expected = from[i];\n        if (expected === '*') {\n            return true;\n        }\n        if (expected !== input[i]) {\n            return false;\n        }\n    }\n    return from.length === input.length;\n};\nconst routeRedirect = (path, routes) => {\n    return routes.find(route => matchesRedirect(path, route));\n};\nconst matchesIDs = (ids, chain) => {\n    const len = Math.min(ids.length, chain.length);\n    let i = 0;\n    for (; i < len; i++) {\n        if (ids[i].toLowerCase() !== chain[i].id) {\n            break;\n        }\n    }\n    return i;\n};\nconst matchesPath = (inputPath, chain) => {\n    const segments = new RouterSegments(inputPath);\n    let matchesDefault = false;\n    let allparams;\n    for (let i = 0; i < chain.length; i++) {\n        const path = chain[i].path;\n        if (path[0] === '') {\n            matchesDefault = true;\n        }\n        else {\n            for (const segment of path) {\n                const data = segments.next();\n                // data param\n                if (segment[0] === ':') {\n                    if (data === '') {\n                        return null;\n                    }\n                    allparams = allparams || [];\n                    const params = allparams[i] || (allparams[i] = {});\n                    params[segment.slice(1)] = data;\n                }\n                else if (data !== segment) {\n                    return null;\n                }\n            }\n            matchesDefault = false;\n        }\n    }\n    const matches = (matchesDefault)\n        ? matchesDefault === (segments.next() === '')\n        : true;\n    if (!matches) {\n        return null;\n    }\n    if (allparams) {\n        return chain.map((route, i) => ({\n            id: route.id,\n            path: route.path,\n            params: mergeParams(route.params, allparams[i])\n        }));\n    }\n    return chain;\n};\nconst mergeParams = (a, b) => {\n    if (!a && b) {\n        return b;\n    }\n    else if (a && !b) {\n        return a;\n    }\n    else if (a && b) {\n        return Object.assign(Object.assign({}, a), b);\n    }\n    return undefined;\n};\nconst routerIDsToChain = (ids, chains) => {\n    let match = null;\n    let maxMatches = 0;\n    const plainIDs = ids.map(i => i.id);\n    for (const chain of chains) {\n        const score = matchesIDs(plainIDs, chain);\n        if (score > maxMatches) {\n            match = chain;\n            maxMatches = score;\n        }\n    }\n    if (match) {\n        return match.map((route, i) => ({\n            id: route.id,\n            path: route.path,\n            params: mergeParams(route.params, ids[i] && ids[i].params)\n        }));\n    }\n    return null;\n};\nconst routerPathToChain = (path, chains) => {\n    let match = null;\n    let matches = 0;\n    for (const chain of chains) {\n        const matchedChain = matchesPath(path, chain);\n        if (matchedChain !== null) {\n            const score = computePriority(matchedChain);\n            if (score > matches) {\n                matches = score;\n                match = matchedChain;\n            }\n        }\n    }\n    return match;\n};\nconst computePriority = (chain) => {\n    let score = 1;\n    let level = 1;\n    for (const route of chain) {\n        for (const path of route.path) {\n            if (path[0] === ':') {\n                score += Math.pow(1, level);\n            }\n            else if (path !== '') {\n                score += Math.pow(2, level);\n            }\n            level++;\n        }\n    }\n    return score;\n};\nclass RouterSegments {\n    constructor(path) {\n        this.path = path.slice();\n    }\n    next() {\n        if (this.path.length > 0) {\n            return this.path.shift();\n        }\n        return '';\n    }\n}\n\nconst readRedirects = (root) => {\n    return Array.from(root.children)\n        .filter(el => el.tagName === 'ION-ROUTE-REDIRECT')\n        .map(el => {\n        const to = readProp(el, 'to');\n        return {\n            from: parsePath(readProp(el, 'from')),\n            to: to == null ? undefined : parsePath(to),\n        };\n    });\n};\nconst readRoutes = (root) => {\n    return flattenRouterTree(readRouteNodes(root));\n};\nconst readRouteNodes = (root, node = root) => {\n    return Array.from(node.children)\n        .filter(el => el.tagName === 'ION-ROUTE' && el.component)\n        .map(el => {\n        const component = readProp(el, 'component');\n        if (component == null) {\n            throw new Error('component missing in ion-route');\n        }\n        return {\n            path: parsePath(readProp(el, 'url')),\n            id: component.toLowerCase(),\n            params: el.componentProps,\n            children: readRouteNodes(root, el)\n        };\n    });\n};\nconst readProp = (el, prop) => {\n    if (prop in el) {\n        return el[prop];\n    }\n    if (el.hasAttribute(prop)) {\n        return el.getAttribute(prop);\n    }\n    return null;\n};\nconst flattenRouterTree = (nodes) => {\n    const routes = [];\n    for (const node of nodes) {\n        flattenNode([], routes, node);\n    }\n    return routes;\n};\nconst flattenNode = (chain, routes, node) => {\n    const s = chain.slice();\n    s.push({\n        id: node.id,\n        path: node.path,\n        params: node.params\n    });\n    if (node.children.length === 0) {\n        routes.push(s);\n        return;\n    }\n    for (const sub of node.children) {\n        flattenNode(s, routes, sub);\n    }\n};\n\nclass Router {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.previousPath = null;\n        this.busy = false;\n        this.state = 0;\n        this.lastState = 0;\n        /**\n         * By default `ion-router` will match the routes at the root path (\"/\").\n         * That can be changed when\n         *\n         */\n        this.root = '/';\n        /**\n         * The router can work in two \"modes\":\n         * - With hash: `/index.html#/path/to/page`\n         * - Without hash: `/path/to/page`\n         *\n         * Using one or another might depend in the requirements of your app and/or where it's deployed.\n         *\n         * Usually \"hash-less\" navigation works better for SEO and it's more user friendly too, but it might\n         * requires additional server-side configuration in order to properly work.\n         *\n         * On the otherside hash-navigation is much easier to deploy, it even works over the file protocol.\n         *\n         * By default, this property is `true`, change to `false` to allow hash-less URLs.\n         */\n        this.useHash = true;\n        this.ionRouteWillChange = createEvent(this, \"ionRouteWillChange\", 7);\n        this.ionRouteDidChange = createEvent(this, \"ionRouteDidChange\", 7);\n    }\n    async componentWillLoad() {\n        console.debug('[ion-router] router will load');\n        await waitUntilNavNode();\n        console.debug('[ion-router] found nav');\n        await this.onRoutesChanged();\n    }\n    componentDidLoad() {\n        window.addEventListener('ionRouteRedirectChanged', debounce(this.onRedirectChanged.bind(this), 10));\n        window.addEventListener('ionRouteDataChanged', debounce(this.onRoutesChanged.bind(this), 100));\n    }\n    onPopState() {\n        const direction = this.historyDirection();\n        const path = this.getPath();\n        console.debug('[ion-router] URL changed -> update nav', path, direction);\n        return this.writeNavStateRoot(path, direction);\n    }\n    onBackButton(ev) {\n        ev.detail.register(0, processNextHandler => {\n            this.back();\n            processNextHandler();\n        });\n    }\n    /**\n     * Navigate to the specified URL.\n     *\n     * @param url The url to navigate to.\n     * @param direction The direction of the animation. Defaults to `\"forward\"`.\n     */\n    push(url, direction = 'forward', animation) {\n        if (url.startsWith('.')) {\n            url = (new URL(url, window.location.href)).pathname;\n        }\n        console.debug('[ion-router] URL pushed -> updating nav', url, direction);\n        const path = parsePath(url);\n        const queryString = url.split('?')[1];\n        this.setPath(path, direction, queryString);\n        return this.writeNavStateRoot(path, direction, animation);\n    }\n    /**\n     * Go back to previous page in the window.history.\n     */\n    back() {\n        window.history.back();\n        return Promise.resolve(this.waitPromise);\n    }\n    /** @internal */\n    async printDebug() {\n        console.debug('CURRENT PATH', this.getPath());\n        console.debug('PREVIOUS PATH', this.previousPath);\n        printRoutes(readRoutes(this.el));\n        printRedirects(readRedirects(this.el));\n    }\n    /** @internal */\n    async navChanged(direction) {\n        if (this.busy) {\n            console.warn('[ion-router] router is busy, navChanged was cancelled');\n            return false;\n        }\n        const { ids, outlet } = await readNavState(window.document.body);\n        const routes = readRoutes(this.el);\n        const chain = routerIDsToChain(ids, routes);\n        if (!chain) {\n            console.warn('[ion-router] no matching URL for ', ids.map(i => i.id));\n            return false;\n        }\n        const path = chainToPath(chain);\n        if (!path) {\n            console.warn('[ion-router] router could not match path because some required param is missing');\n            return false;\n        }\n        console.debug('[ion-router] nav changed -> update URL', ids, path);\n        this.setPath(path, direction);\n        await this.safeWriteNavState(outlet, chain, ROUTER_INTENT_NONE, path, null, ids.length);\n        return true;\n    }\n    onRedirectChanged() {\n        const path = this.getPath();\n        if (path && routeRedirect(path, readRedirects(this.el))) {\n            this.writeNavStateRoot(path, ROUTER_INTENT_NONE);\n        }\n    }\n    onRoutesChanged() {\n        return this.writeNavStateRoot(this.getPath(), ROUTER_INTENT_NONE);\n    }\n    historyDirection() {\n        const win = window;\n        if (win.history.state === null) {\n            this.state++;\n            win.history.replaceState(this.state, win.document.title, win.document.location && win.document.location.href);\n        }\n        const state = win.history.state;\n        const lastState = this.lastState;\n        this.lastState = state;\n        if (state > lastState || (state >= lastState && lastState > 0)) {\n            return ROUTER_INTENT_FORWARD;\n        }\n        else if (state < lastState) {\n            return ROUTER_INTENT_BACK;\n        }\n        else {\n            return ROUTER_INTENT_NONE;\n        }\n    }\n    async writeNavStateRoot(path, direction, animation) {\n        if (!path) {\n            console.error('[ion-router] URL is not part of the routing set');\n            return false;\n        }\n        // lookup redirect rule\n        const redirects = readRedirects(this.el);\n        const redirect = routeRedirect(path, redirects);\n        let redirectFrom = null;\n        if (redirect) {\n            this.setPath(redirect.to, direction);\n            redirectFrom = redirect.from;\n            path = redirect.to;\n        }\n        // lookup route chain\n        const routes = readRoutes(this.el);\n        const chain = routerPathToChain(path, routes);\n        if (!chain) {\n            console.error('[ion-router] the path does not match any route');\n            return false;\n        }\n        // write DOM give\n        return this.safeWriteNavState(document.body, chain, direction, path, redirectFrom, 0, animation);\n    }\n    async safeWriteNavState(node, chain, direction, path, redirectFrom, index = 0, animation) {\n        const unlock = await this.lock();\n        let changed = false;\n        try {\n            changed = await this.writeNavState(node, chain, direction, path, redirectFrom, index, animation);\n        }\n        catch (e) {\n            console.error(e);\n        }\n        unlock();\n        return changed;\n    }\n    async lock() {\n        const p = this.waitPromise;\n        let resolve;\n        this.waitPromise = new Promise(r => resolve = r);\n        if (p !== undefined) {\n            await p;\n        }\n        return resolve;\n    }\n    async writeNavState(node, chain, direction, path, redirectFrom, index = 0, animation) {\n        if (this.busy) {\n            console.warn('[ion-router] router is busy, transition was cancelled');\n            return false;\n        }\n        this.busy = true;\n        // generate route event and emit will change\n        const routeEvent = this.routeChangeEvent(path, redirectFrom);\n        if (routeEvent) {\n            this.ionRouteWillChange.emit(routeEvent);\n        }\n        const changed = await writeNavState(node, chain, direction, index, false, animation);\n        this.busy = false;\n        if (changed) {\n            console.debug('[ion-router] route changed', path);\n        }\n        // emit did change\n        if (routeEvent) {\n            this.ionRouteDidChange.emit(routeEvent);\n        }\n        return changed;\n    }\n    setPath(path, direction, queryString) {\n        this.state++;\n        writePath(window.history, this.root, this.useHash, path, direction, this.state, queryString);\n    }\n    getPath() {\n        return readPath(window.location, this.root, this.useHash);\n    }\n    routeChangeEvent(path, redirectFromPath) {\n        const from = this.previousPath;\n        const to = generatePath(path);\n        this.previousPath = to;\n        if (to === from) {\n            return null;\n        }\n        const redirectedFrom = redirectFromPath ? generatePath(redirectFromPath) : null;\n        return {\n            from,\n            redirectedFrom,\n            to,\n        };\n    }\n    get el() { return getElement(this); }\n}\n\nconst routerLinkCss = \":host{--background:transparent;--color:var(--ion-color-primary, #3880ff);background:var(--background);color:var(--color)}:host(.ion-color){color:var(--ion-color-base)}a{font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit}\";\n\nclass RouterLink {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        /**\n         * When using a router, it specifies the transition direction when navigating to\n         * another page using `href`.\n         */\n        this.routerDirection = 'forward';\n        this.onClick = (ev) => {\n            openURL(this.href, ev, this.routerDirection, this.routerAnimation);\n        };\n    }\n    render() {\n        const mode = getIonMode(this);\n        const attrs = {\n            href: this.href,\n            rel: this.rel,\n            target: this.target\n        };\n        return (h(Host, { onClick: this.onClick, class: Object.assign(Object.assign({}, createColorClasses(this.color)), { [mode]: true, 'ion-activatable': true }) }, h(\"a\", Object.assign({}, attrs), h(\"slot\", null))));\n    }\n}\nRouterLink.style = routerLinkCss;\n\nexport { Route as ion_route, RouteRedirect as ion_route_redirect, Router as ion_router, RouterLink as ion_router_link };\n"]}