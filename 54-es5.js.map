{"version":3,"sources":["webpack:///node_modules/@ionic/core/dist/esm/ion-route_4.entry.js"],"names":["Route","hostRef","url","ionRouteDataChanged","newValue","emit","oldValue","keys1","Object","keys","keys2","length","onUpdate","key","RouteRedirect","ionRouteRedirectChanged","ROUTER_INTENT_NONE","ROUTER_INTENT_FORWARD","ROUTER_INTENT_BACK","generatePath","segments","path","filter","s","join","chainToPath","chain","route","segment","param","params","slice","push","writePath","history","root","useHash","direction","state","parsePath","pushState","replaceState","removePrefix","prefix","i","readPath","loc","pathname","hash","split","map","trim","printRoutes","routes","console","group","forEach","r","ids","id","debug","groupEnd","printRedirects","redirects","redirect","to","from","writeNavState","index","changed","outlet","searchNavNode","componentOnReady","setRouteId","result","element","markVisible","error","readNavState","node","getRouteId","undefined","waitUntilNavNode","document","body","Promise","resolve","window","addEventListener","once","QUERY","matches","querySelector","matchesRedirect","input","expected","routeRedirect","find","matchesIDs","len","Math","min","toLowerCase","matchesPath","inputPath","RouterSegments","matchesDefault","allparams","data","next","mergeParams","a","b","assign","routerIDsToChain","chains","match","maxMatches","plainIDs","score","routerPathToChain","matchedChain","computePriority","level","pow","shift","readRedirects","Array","children","el","tagName","readProp","readRoutes","flattenRouterTree","readRouteNodes","component","Error","componentProps","prop","hasAttribute","getAttribute","nodes","flattenNode","sub","Router","previousPath","busy","lastState","ionRouteWillChange","ionRouteDidChange","onRoutesChanged","onRedirectChanged","bind","historyDirection","getPath","writeNavStateRoot","ev","detail","register","back","startsWith","URL","location","href","setPath","waitPromise","warn","safeWriteNavState","win","title","redirectFrom","lock","unlock","p","routeEvent","routeChangeEvent","redirectFromPath","redirectedFrom","RouterLink","routerDirection","onClick","mode","attrs","rel","target","class","color"],"mappings":"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","file":"54-es5.js","sourcesContent":["import { r as registerInstance, d as createEvent, e as getElement, c as getIonMode, h, H as Host } from './core-0a8d4d2e.js';\nimport './config-3c7f3790.js';\nimport { e as debounce } from './helpers-46f4a262.js';\nimport { o as openURL, c as createColorClasses } from './theme-18cbe2cc.js';\n\nconst Route = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        /**\n         * Relative path that needs to match in order for this route to apply.\n         *\n         * Accepts paths similar to expressjs so that you can define parameters\n         * in the url /foo/:bar where bar would be available in incoming props.\n         */\n        this.url = '';\n        this.ionRouteDataChanged = createEvent(this, \"ionRouteDataChanged\", 7);\n    }\n    onUpdate(newValue) {\n        this.ionRouteDataChanged.emit(newValue);\n    }\n    onComponentProps(newValue, oldValue) {\n        if (newValue === oldValue) {\n            return;\n        }\n        const keys1 = newValue ? Object.keys(newValue) : [];\n        const keys2 = oldValue ? Object.keys(oldValue) : [];\n        if (keys1.length !== keys2.length) {\n            this.onUpdate(newValue);\n            return;\n        }\n        for (const key of keys1) {\n            if (newValue[key] !== oldValue[key]) {\n                this.onUpdate(newValue);\n                return;\n            }\n        }\n    }\n    connectedCallback() {\n        this.ionRouteDataChanged.emit();\n    }\n    static get watchers() { return {\n        \"url\": [\"onUpdate\"],\n        \"component\": [\"onUpdate\"],\n        \"componentProps\": [\"onComponentProps\"]\n    }; }\n};\n\nconst RouteRedirect = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.ionRouteRedirectChanged = createEvent(this, \"ionRouteRedirectChanged\", 7);\n    }\n    propDidChange() {\n        this.ionRouteRedirectChanged.emit();\n    }\n    connectedCallback() {\n        this.ionRouteRedirectChanged.emit();\n    }\n    static get watchers() { return {\n        \"from\": [\"propDidChange\"],\n        \"to\": [\"propDidChange\"]\n    }; }\n};\n\nconst ROUTER_INTENT_NONE = 'root';\r\nconst ROUTER_INTENT_FORWARD = 'forward';\r\nconst ROUTER_INTENT_BACK = 'back';\n\nconst generatePath = (segments) => {\r\n    const path = segments\r\n        .filter(s => s.length > 0)\r\n        .join('/');\r\n    return '/' + path;\r\n};\r\nconst chainToPath = (chain) => {\r\n    const path = [];\r\n    for (const route of chain) {\r\n        for (const segment of route.path) {\r\n            if (segment[0] === ':') {\r\n                const param = route.params && route.params[segment.slice(1)];\r\n                if (!param) {\r\n                    return null;\r\n                }\r\n                path.push(param);\r\n            }\r\n            else if (segment !== '') {\r\n                path.push(segment);\r\n            }\r\n        }\r\n    }\r\n    return path;\r\n};\r\nconst writePath = (history, root, useHash, path, direction, state) => {\r\n    let url = generatePath([\r\n        ...parsePath(root),\r\n        ...path\r\n    ]);\r\n    if (useHash) {\r\n        url = '#' + url;\r\n    }\r\n    if (direction === ROUTER_INTENT_FORWARD) {\r\n        history.pushState(state, '', url);\r\n    }\r\n    else {\r\n        history.replaceState(state, '', url);\r\n    }\r\n};\r\nconst removePrefix = (prefix, path) => {\r\n    if (prefix.length > path.length) {\r\n        return null;\r\n    }\r\n    if (prefix.length <= 1 && prefix[0] === '') {\r\n        return path;\r\n    }\r\n    for (let i = 0; i < prefix.length; i++) {\r\n        if (prefix[i].length > 0 && prefix[i] !== path[i]) {\r\n            return null;\r\n        }\r\n    }\r\n    if (path.length === prefix.length) {\r\n        return [''];\r\n    }\r\n    return path.slice(prefix.length);\r\n};\r\nconst readPath = (loc, root, useHash) => {\r\n    let pathname = loc.pathname;\r\n    if (useHash) {\r\n        const hash = loc.hash;\r\n        pathname = (hash[0] === '#')\r\n            ? hash.slice(1)\r\n            : '';\r\n    }\r\n    const prefix = parsePath(root);\r\n    const path = parsePath(pathname);\r\n    return removePrefix(prefix, path);\r\n};\r\nconst parsePath = (path) => {\r\n    if (path == null) {\r\n        return [''];\r\n    }\r\n    const segments = path.split('/')\r\n        .map(s => s.trim())\r\n        .filter(s => s.length > 0);\r\n    if (segments.length === 0) {\r\n        return [''];\r\n    }\r\n    else {\r\n        return segments;\r\n    }\r\n};\n\nconst printRoutes = (routes) => {\r\n    console.group(`[ion-core] ROUTES[${routes.length}]`);\r\n    for (const chain of routes) {\r\n        const path = [];\r\n        chain.forEach(r => path.push(...r.path));\r\n        const ids = chain.map(r => r.id);\r\n        console.debug(`%c ${generatePath(path)}`, 'font-weight: bold; padding-left: 20px', '=>\\t', `(${ids.join(', ')})`);\r\n    }\r\n    console.groupEnd();\r\n};\r\nconst printRedirects = (redirects) => {\r\n    console.group(`[ion-core] REDIRECTS[${redirects.length}]`);\r\n    for (const redirect of redirects) {\r\n        if (redirect.to) {\r\n            console.debug('FROM: ', `$c ${generatePath(redirect.from)}`, 'font-weight: bold', ' TO: ', `$c ${generatePath(redirect.to)}`, 'font-weight: bold');\r\n        }\r\n    }\r\n    console.groupEnd();\r\n};\n\nconst writeNavState = async (root, chain, direction, index, changed = false) => {\r\n    try {\r\n        // find next navigation outlet in the DOM\r\n        const outlet = searchNavNode(root);\r\n        // make sure we can continue interacting the DOM, otherwise abort\r\n        if (index >= chain.length || !outlet) {\r\n            return changed;\r\n        }\r\n        await outlet.componentOnReady();\r\n        const route = chain[index];\r\n        const result = await outlet.setRouteId(route.id, route.params, direction);\r\n        // if the outlet changed the page, reset navigation to neutral (no direction)\r\n        // this means nested outlets will not animate\r\n        if (result.changed) {\r\n            direction = ROUTER_INTENT_NONE;\r\n            changed = true;\r\n        }\r\n        // recursively set nested outlets\r\n        changed = await writeNavState(result.element, chain, direction, index + 1, changed);\r\n        // once all nested outlets are visible let's make the parent visible too,\r\n        // using markVisible prevents flickering\r\n        if (result.markVisible) {\r\n            await result.markVisible();\r\n        }\r\n        return changed;\r\n    }\r\n    catch (e) {\r\n        console.error(e);\r\n        return false;\r\n    }\r\n};\r\nconst readNavState = async (root) => {\r\n    const ids = [];\r\n    let outlet;\r\n    let node = root;\r\n    // tslint:disable-next-line:no-constant-condition\r\n    while (true) {\r\n        outlet = searchNavNode(node);\r\n        if (outlet) {\r\n            const id = await outlet.getRouteId();\r\n            if (id) {\r\n                node = id.element;\r\n                id.element = undefined;\r\n                ids.push(id);\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n        }\r\n        else {\r\n            break;\r\n        }\r\n    }\r\n    return { ids, outlet };\r\n};\r\nconst waitUntilNavNode = () => {\r\n    if (searchNavNode(document.body)) {\r\n        return Promise.resolve();\r\n    }\r\n    return new Promise(resolve => {\r\n        window.addEventListener('ionNavWillLoad', resolve, { once: true });\r\n    });\r\n};\r\nconst QUERY = ':not([no-router]) ion-nav, :not([no-router]) ion-tabs, :not([no-router]) ion-router-outlet';\r\nconst searchNavNode = (root) => {\r\n    if (!root) {\r\n        return undefined;\r\n    }\r\n    if (root.matches(QUERY)) {\r\n        return root;\r\n    }\r\n    const outlet = root.querySelector(QUERY);\r\n    return outlet ? outlet : undefined;\r\n};\n\nconst matchesRedirect = (input, route) => {\r\n    const { from, to } = route;\r\n    if (to === undefined) {\r\n        return false;\r\n    }\r\n    if (from.length > input.length) {\r\n        return false;\r\n    }\r\n    for (let i = 0; i < from.length; i++) {\r\n        const expected = from[i];\r\n        if (expected === '*') {\r\n            return true;\r\n        }\r\n        if (expected !== input[i]) {\r\n            return false;\r\n        }\r\n    }\r\n    return from.length === input.length;\r\n};\r\nconst routeRedirect = (path, routes) => {\r\n    return routes.find(route => matchesRedirect(path, route));\r\n};\r\nconst matchesIDs = (ids, chain) => {\r\n    const len = Math.min(ids.length, chain.length);\r\n    let i = 0;\r\n    for (; i < len; i++) {\r\n        if (ids[i].toLowerCase() !== chain[i].id) {\r\n            break;\r\n        }\r\n    }\r\n    return i;\r\n};\r\nconst matchesPath = (inputPath, chain) => {\r\n    const segments = new RouterSegments(inputPath);\r\n    let matchesDefault = false;\r\n    let allparams;\r\n    for (let i = 0; i < chain.length; i++) {\r\n        const path = chain[i].path;\r\n        if (path[0] === '') {\r\n            matchesDefault = true;\r\n        }\r\n        else {\r\n            for (const segment of path) {\r\n                const data = segments.next();\r\n                // data param\r\n                if (segment[0] === ':') {\r\n                    if (data === '') {\r\n                        return null;\r\n                    }\r\n                    allparams = allparams || [];\r\n                    const params = allparams[i] || (allparams[i] = {});\r\n                    params[segment.slice(1)] = data;\r\n                }\r\n                else if (data !== segment) {\r\n                    return null;\r\n                }\r\n            }\r\n            matchesDefault = false;\r\n        }\r\n    }\r\n    const matches = (matchesDefault)\r\n        ? matchesDefault === (segments.next() === '')\r\n        : true;\r\n    if (!matches) {\r\n        return null;\r\n    }\r\n    if (allparams) {\r\n        return chain.map((route, i) => ({\r\n            id: route.id,\r\n            path: route.path,\r\n            params: mergeParams(route.params, allparams[i])\r\n        }));\r\n    }\r\n    return chain;\r\n};\r\nconst mergeParams = (a, b) => {\r\n    if (!a && b) {\r\n        return b;\r\n    }\r\n    else if (a && !b) {\r\n        return a;\r\n    }\r\n    else if (a && b) {\r\n        return Object.assign(Object.assign({}, a), b);\r\n    }\r\n    return undefined;\r\n};\r\nconst routerIDsToChain = (ids, chains) => {\r\n    let match = null;\r\n    let maxMatches = 0;\r\n    const plainIDs = ids.map(i => i.id);\r\n    for (const chain of chains) {\r\n        const score = matchesIDs(plainIDs, chain);\r\n        if (score > maxMatches) {\r\n            match = chain;\r\n            maxMatches = score;\r\n        }\r\n    }\r\n    if (match) {\r\n        return match.map((route, i) => ({\r\n            id: route.id,\r\n            path: route.path,\r\n            params: mergeParams(route.params, ids[i] && ids[i].params)\r\n        }));\r\n    }\r\n    return null;\r\n};\r\nconst routerPathToChain = (path, chains) => {\r\n    let match = null;\r\n    let matches = 0;\r\n    for (const chain of chains) {\r\n        const matchedChain = matchesPath(path, chain);\r\n        if (matchedChain !== null) {\r\n            const score = computePriority(matchedChain);\r\n            if (score > matches) {\r\n                matches = score;\r\n                match = matchedChain;\r\n            }\r\n        }\r\n    }\r\n    return match;\r\n};\r\nconst computePriority = (chain) => {\r\n    let score = 1;\r\n    let level = 1;\r\n    for (const route of chain) {\r\n        for (const path of route.path) {\r\n            if (path[0] === ':') {\r\n                score += Math.pow(1, level);\r\n            }\r\n            else if (path !== '') {\r\n                score += Math.pow(2, level);\r\n            }\r\n            level++;\r\n        }\r\n    }\r\n    return score;\r\n};\r\nclass RouterSegments {\r\n    constructor(path) {\r\n        this.path = path.slice();\r\n    }\r\n    next() {\r\n        if (this.path.length > 0) {\r\n            return this.path.shift();\r\n        }\r\n        return '';\r\n    }\r\n}\n\nconst readRedirects = (root) => {\r\n    return Array.from(root.children)\r\n        .filter(el => el.tagName === 'ION-ROUTE-REDIRECT')\r\n        .map(el => {\r\n        const to = readProp(el, 'to');\r\n        return {\r\n            from: parsePath(readProp(el, 'from')),\r\n            to: to == null ? undefined : parsePath(to),\r\n        };\r\n    });\r\n};\r\nconst readRoutes = (root) => {\r\n    return flattenRouterTree(readRouteNodes(root));\r\n};\r\nconst readRouteNodes = (root, node = root) => {\r\n    return Array.from(node.children)\r\n        .filter(el => el.tagName === 'ION-ROUTE' && el.component)\r\n        .map(el => {\r\n        const component = readProp(el, 'component');\r\n        if (component == null) {\r\n            throw new Error('component missing in ion-route');\r\n        }\r\n        return {\r\n            path: parsePath(readProp(el, 'url')),\r\n            id: component.toLowerCase(),\r\n            params: el.componentProps,\r\n            children: readRouteNodes(root, el)\r\n        };\r\n    });\r\n};\r\nconst readProp = (el, prop) => {\r\n    if (prop in el) {\r\n        return el[prop];\r\n    }\r\n    if (el.hasAttribute(prop)) {\r\n        return el.getAttribute(prop);\r\n    }\r\n    return null;\r\n};\r\nconst flattenRouterTree = (nodes) => {\r\n    const routes = [];\r\n    for (const node of nodes) {\r\n        flattenNode([], routes, node);\r\n    }\r\n    return routes;\r\n};\r\nconst flattenNode = (chain, routes, node) => {\r\n    const s = chain.slice();\r\n    s.push({\r\n        id: node.id,\r\n        path: node.path,\r\n        params: node.params\r\n    });\r\n    if (node.children.length === 0) {\r\n        routes.push(s);\r\n        return;\r\n    }\r\n    for (const sub of node.children) {\r\n        flattenNode(s, routes, sub);\r\n    }\r\n};\n\nconst Router = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.previousPath = null;\n        this.busy = false;\n        this.state = 0;\n        this.lastState = 0;\n        /**\n         * By default `ion-router` will match the routes at the root path (\"/\").\n         * That can be changed when\n         *\n         */\n        this.root = '/';\n        /**\n         * The router can work in two \"modes\":\n         * - With hash: `/index.html#/path/to/page`\n         * - Without hash: `/path/to/page`\n         *\n         * Using one or another might depend in the requirements of your app and/or where it's deployed.\n         *\n         * Usually \"hash-less\" navigation works better for SEO and it's more user friendly too, but it might\n         * requires additional server-side configuration in order to properly work.\n         *\n         * On the otherside hash-navigation is much easier to deploy, it even works over the file protocol.\n         *\n         * By default, this property is `true`, change to `false` to allow hash-less URLs.\n         */\n        this.useHash = true;\n        this.ionRouteWillChange = createEvent(this, \"ionRouteWillChange\", 7);\n        this.ionRouteDidChange = createEvent(this, \"ionRouteDidChange\", 7);\n    }\n    async componentWillLoad() {\n        console.debug('[ion-router] router will load');\n        await waitUntilNavNode();\n        console.debug('[ion-router] found nav');\n        await this.onRoutesChanged();\n    }\n    componentDidLoad() {\n        window.addEventListener('ionRouteRedirectChanged', debounce(this.onRedirectChanged.bind(this), 10));\n        window.addEventListener('ionRouteDataChanged', debounce(this.onRoutesChanged.bind(this), 100));\n    }\n    onPopState() {\n        const direction = this.historyDirection();\n        const path = this.getPath();\n        console.debug('[ion-router] URL changed -> update nav', path, direction);\n        return this.writeNavStateRoot(path, direction);\n    }\n    onBackButton(ev) {\n        ev.detail.register(0, () => this.back());\n    }\n    /**\n     * Navigate to the specified URL.\n     *\n     * @param url The url to navigate to.\n     * @param direction The direction of the animation. Defaults to `\"forward\"`.\n     */\n    push(url, direction = 'forward') {\n        if (url.startsWith('.')) {\n            url = (new URL(url, window.location.href)).pathname;\n        }\n        console.debug('[ion-router] URL pushed -> updating nav', url, direction);\n        const path = parsePath(url);\n        this.setPath(path, direction);\n        return this.writeNavStateRoot(path, direction);\n    }\n    /**\n     * Go back to previous page in the window.history.\n     */\n    back() {\n        window.history.back();\n        return Promise.resolve(this.waitPromise);\n    }\n    /** @internal */\n    async printDebug() {\n        console.debug('CURRENT PATH', this.getPath());\n        console.debug('PREVIOUS PATH', this.previousPath);\n        printRoutes(readRoutes(this.el));\n        printRedirects(readRedirects(this.el));\n    }\n    /** @internal */\n    async navChanged(direction) {\n        if (this.busy) {\n            console.warn('[ion-router] router is busy, navChanged was cancelled');\n            return false;\n        }\n        const { ids, outlet } = await readNavState(window.document.body);\n        const routes = readRoutes(this.el);\n        const chain = routerIDsToChain(ids, routes);\n        if (!chain) {\n            console.warn('[ion-router] no matching URL for ', ids.map(i => i.id));\n            return false;\n        }\n        const path = chainToPath(chain);\n        if (!path) {\n            console.warn('[ion-router] router could not match path because some required param is missing');\n            return false;\n        }\n        console.debug('[ion-router] nav changed -> update URL', ids, path);\n        this.setPath(path, direction);\n        await this.safeWriteNavState(outlet, chain, ROUTER_INTENT_NONE, path, null, ids.length);\n        return true;\n    }\n    onRedirectChanged() {\n        const path = this.getPath();\n        if (path && routeRedirect(path, readRedirects(this.el))) {\n            this.writeNavStateRoot(path, ROUTER_INTENT_NONE);\n        }\n    }\n    onRoutesChanged() {\n        return this.writeNavStateRoot(this.getPath(), ROUTER_INTENT_NONE);\n    }\n    historyDirection() {\n        const win = window;\n        if (win.history.state === null) {\n            this.state++;\n            win.history.replaceState(this.state, win.document.title, win.document.location && win.document.location.href);\n        }\n        const state = win.history.state;\n        const lastState = this.lastState;\n        this.lastState = state;\n        if (state > lastState) {\n            return ROUTER_INTENT_FORWARD;\n        }\n        else if (state < lastState) {\n            return ROUTER_INTENT_BACK;\n        }\n        else {\n            return ROUTER_INTENT_NONE;\n        }\n    }\n    async writeNavStateRoot(path, direction) {\n        if (!path) {\n            console.error('[ion-router] URL is not part of the routing set');\n            return false;\n        }\n        // lookup redirect rule\n        const redirects = readRedirects(this.el);\n        const redirect = routeRedirect(path, redirects);\n        let redirectFrom = null;\n        if (redirect) {\n            this.setPath(redirect.to, direction);\n            redirectFrom = redirect.from;\n            path = redirect.to;\n        }\n        // lookup route chain\n        const routes = readRoutes(this.el);\n        const chain = routerPathToChain(path, routes);\n        if (!chain) {\n            console.error('[ion-router] the path does not match any route');\n            return false;\n        }\n        // write DOM give\n        return this.safeWriteNavState(document.body, chain, direction, path, redirectFrom);\n    }\n    async safeWriteNavState(node, chain, direction, path, redirectFrom, index = 0) {\n        const unlock = await this.lock();\n        let changed = false;\n        try {\n            changed = await this.writeNavState(node, chain, direction, path, redirectFrom, index);\n        }\n        catch (e) {\n            console.error(e);\n        }\n        unlock();\n        return changed;\n    }\n    async lock() {\n        const p = this.waitPromise;\n        let resolve;\n        this.waitPromise = new Promise(r => resolve = r);\n        if (p !== undefined) {\n            await p;\n        }\n        return resolve;\n    }\n    async writeNavState(node, chain, direction, path, redirectFrom, index = 0) {\n        if (this.busy) {\n            console.warn('[ion-router] router is busy, transition was cancelled');\n            return false;\n        }\n        this.busy = true;\n        // generate route event and emit will change\n        const routeEvent = this.routeChangeEvent(path, redirectFrom);\n        if (routeEvent) {\n            this.ionRouteWillChange.emit(routeEvent);\n        }\n        const changed = await writeNavState(node, chain, direction, index);\n        this.busy = false;\n        if (changed) {\n            console.debug('[ion-router] route changed', path);\n        }\n        // emit did change\n        if (routeEvent) {\n            this.ionRouteDidChange.emit(routeEvent);\n        }\n        return changed;\n    }\n    setPath(path, direction) {\n        this.state++;\n        writePath(window.history, this.root, this.useHash, path, direction, this.state);\n    }\n    getPath() {\n        return readPath(window.location, this.root, this.useHash);\n    }\n    routeChangeEvent(path, redirectFromPath) {\n        const from = this.previousPath;\n        const to = generatePath(path);\n        this.previousPath = to;\n        if (to === from) {\n            return null;\n        }\n        const redirectedFrom = redirectFromPath ? generatePath(redirectFromPath) : null;\n        return {\n            from,\n            redirectedFrom,\n            to,\n        };\n    }\n    get el() { return getElement(this); }\n};\n\nconst RouterLink = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        /**\n         * When using a router, it specifies the transition direction when navigating to\n         * another page using `href`.\n         */\n        this.routerDirection = 'forward';\n        this.onClick = (ev) => {\n            openURL(this.href, ev, this.routerDirection);\n        };\n    }\n    render() {\n        const mode = getIonMode(this);\n        const attrs = {\n            href: this.href,\n            rel: this.rel,\n            target: this.target\n        };\n        return (h(Host, { onClick: this.onClick, class: Object.assign(Object.assign({}, createColorClasses(this.color)), { [mode]: true, 'ion-activatable': true }) }, h(\"a\", Object.assign({}, attrs), h(\"slot\", null))));\n    }\n    static get style() { return \":host{--background:transparent;--color:var(--ion-color-primary,#3880ff);background:var(--background);color:var(--color)}:host(.ion-color){color:var(--ion-color-base)}a{font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit}\"; }\n};\n\nexport { Route as ion_route, RouteRedirect as ion_route_redirect, Router as ion_router, RouterLink as ion_router_link };\n"]}