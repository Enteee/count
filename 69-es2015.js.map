{"version":3,"sources":["./node_modules/@ionic/core/dist/esm/ion-text.entry.js"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0E;AACb;AACC;;AAE9D,mCAAmC,4BAA4B;;AAE/D;AACA,iBAAiB,aAAa;AAC9B;AACA;AACA;AACA,QAAQ,4DAAgB;AACxB;AACA;AACA,qBAAqB,mEAAU;AAC/B,gBAAgB,4DAAC,CAAC,oDAAI,GAAG,sCAAsC,EAAE,4DAAkB,gBAAgB,eAAe,GAAG,EAAE,4DAAC;AACxH;AACA;AACA;;AAE4B","file":"69-es2015.js","sourcesContent":["import { r as registerInstance, h, H as Host } from './index-29df6f59.js';\nimport { b as getIonMode } from './ionic-global-08f4fb8a.js';\nimport { c as createColorClasses } from './theme-3f0b0c04.js';\n\nconst textCss = \":host(.ion-color){color:var(--ion-color-base)}\";\n\n/**\n * @virtualProp {\"ios\" | \"md\"} mode - The mode determines which platform styles to use.\n */\nclass Text {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n    }\n    render() {\n        const mode = getIonMode(this);\n        return (h(Host, { class: Object.assign(Object.assign({}, createColorClasses(this.color)), { [mode]: true }) }, h(\"slot\", null)));\n    }\n}\nText.style = textCss;\n\nexport { Text as ion_text };\n"],"sourceRoot":"webpack:///"}