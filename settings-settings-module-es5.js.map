{"version":3,"sources":["webpack:///src/app/settings/settings.module.ts","webpack:///src/app/settings/settings.page.html","webpack:///src/app/settings/settings.page.ts"],"names":["routes","path","component","SettingsPageModule","forChild","imports","providers","declarations","SettingsPage","route","appStateService","alertController","updateChannels","Object","keys","appState","snapshot","data","settingsForm","swipeCounting","vibrate","recordPosition","disableNotImplemented","updateChannel","setSwipeCounting","value","setVibrate","setRecordPosition","create","header","message","buttons","alert","present","setDisableNotImplemented","setUpdateChannel","update","changeSwipeCounting","changeVibrate","changeRecordPosition","changeDisableNotImplemented","changeUpdateChannel","selector","templateUrl","styleUrls"],"mappings":"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","file":"settings-settings-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule, AlertController } from '@ionic/angular';\n\nimport { NotImplementedModule } from '../not-implemented/not-implemented.module';\n\nimport { SettingsPage } from './settings.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SettingsPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n    NotImplementedModule,\n  ],\n  providers: [\n    AlertController,\n  ],\n  declarations: [\n    SettingsPage\n  ],\n})\nexport class SettingsPageModule {}\n","<ion-header>\n  <ion-toolbar>\n    <ion-buttons slot=\"start\">\n      <ion-menu-button></ion-menu-button>\n    </ion-buttons>\n    <ion-title>\n      <ion-icon name=\"settings\"></ion-icon>\n      Settings\n    </ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content>\n  <form\n    [formGroup]=\"settingsForm\"\n  >\n    <ion-list>\n      <app-not-implemented\n        description=\"Select language\"\n        issueId=\"12\"\n      >\n        <ion-item>\n          <ion-icon slot=\"start\" name=\"text\"></ion-icon>\n          <ion-label>Language</ion-label>\n          <ion-select slot=\"end\" placeholder=\"Select One\">\n            <ion-select-option value=\"english\">English</ion-select-option>\n            <ion-select-option value=\"german\">German</ion-select-option>\n            <ion-select-option value=\"french\">French</ion-select-option>\n          </ion-select>\n        </ion-item>\n      </app-not-implemented>\n\n      <app-not-implemented\n        description=\"Toggle dark mode\"\n        issueId=\"10\"\n      >\n        <ion-item>\n          <ion-icon slot=\"start\" name=\"moon\"></ion-icon>\n          <ion-label>Dark Mode</ion-label>\n          <ion-checkbox slot=\"end\">\n          </ion-checkbox>\n        </ion-item>\n      </app-not-implemented>\n\n      <app-not-implemented\n        description=\"Switch to left-handed mode\"\n        issueId=\"14\"\n      >\n        <ion-item>\n          <ion-icon slot=\"start\" name=\"hand-left\"></ion-icon>\n          <ion-label>Left-handed mode</ion-label>\n          <ion-checkbox slot=\"end\">\n          </ion-checkbox>\n        </ion-item>\n      </app-not-implemented>\n\n      <ion-item>\n        <ion-icon slot=\"start\" name=\"code-outline\"></ion-icon>\n        <ion-label>Swipe counting</ion-label>\n        <ion-checkbox\n          required\n          slot=\"end\"\n          formControlName=\"swipeCounting\"\n          [checked]=\"appState.swipeCounting\"\n          (ionChange)=\"changeSwipeCounting()\"\n        >\n        </ion-checkbox>\n      </ion-item>\n\n      <ion-item>\n        <ion-icon slot=\"start\" name=\"pulse\"></ion-icon>\n        <ion-label>Vibrate</ion-label>\n        <ion-checkbox\n          required\n          slot=\"end\"\n          formControlName=\"vibrate\"\n          [checked]=\"appState.vibrate\"\n          (ionChange)=\"changeVibrate()\"\n        >\n        </ion-checkbox>\n      </ion-item>\n\n      <ion-item>\n        <ion-icon slot=\"start\" name=\"pin\"></ion-icon>\n        <ion-label>Record position</ion-label>\n        <ion-checkbox\n          required\n          slot=\"end\"\n          formControlName=\"recordPosition\"\n          [checked]=\"appState.recordPosition\"\n          (ionChange)=\"changeRecordPosition()\"\n        >\n        </ion-checkbox>\n      </ion-item>\n\n      <app-not-implemented\n        description=\"Enable Advertisements / Disable Fuel\"\n        issueId=\"11\"\n      >\n        <ion-item>\n          <ion-icon slot=\"start\" name=\"cash\"></ion-icon>\n          <ion-label>Enable Advertisements</ion-label>\n          <ion-checkbox\n            slot=\"end\"\n          >\n          </ion-checkbox>\n        </ion-item>\n      </app-not-implemented>\n\n      <ion-item>\n        <ion-icon slot=\"start\" name=\"construct\"></ion-icon>\n        <ion-label>Disable not implemented</ion-label>\n\n        <!--\n          Exception: we use [checked] here, because\n          the status of this checkbox might be changed by a\n          not-implemented modal, from a not-implemented control\n          on this page.\n        -->\n        <ion-checkbox\n          required\n          slot=\"end\"\n          formControlName=\"disableNotImplemented\"\n          [checked]=\"appState.disableNotImplemented\"\n          (ionChange)=\"changeDisableNotImplemented()\"\n        >\n        </ion-checkbox>\n      </ion-item>\n\n      <ion-item>\n        <ion-icon slot=\"start\" name=\"cloud-download\"></ion-icon>\n        <ion-label>Update</ion-label>\n        <ion-select\n          formControlName=\"updateChannel\"\n          slot=\"end\"\n          placeholder=\"Select One\"\n          (ionChange)=\"changeUpdateChannel()\"\n        >\n          <ion-select-option\n            *ngFor=\"let updateChannel of updateChannels\"\n            [value]=\"updateChannel\"\n          >\n            {{updateChannel}}\n          </ion-select-option>\n        </ion-select>\n      </ion-item>\n\n      <app-not-implemented\n        description=\"Save and load backup\"\n        issueId=\"15\"\n      >\n        <ion-item>\n          <ion-icon slot=\"start\" name=\"download\"></ion-icon>\n          <ion-label>Backup</ion-label>\n          <ion-button\n            expand=\"full\"\n            color=\"success\"\n          >\n            Save\n          </ion-button>\n\n          <ion-button\n            expand=\"full\"\n            color=\"danger\"\n          >\n            Restore\n          </ion-button>\n        </ion-item>\n      </app-not-implemented>\n\n      <app-not-implemented\n        description=\"Trigger a factory reset\"\n        issueId=\"16\"\n      >\n        <ion-item-sliding>\n\n          <ion-item>\n            <ion-icon slot=\"start\" name=\"trash\"></ion-icon>\n            <ion-label>Factory reset</ion-label>\n            <ion-icon slot=\"end\" name=\"arrow-back\"></ion-icon>\n          </ion-item>\n          <ion-item-options side=\"end\">\n            <ion-item-option color=\"danger\">\n              <ion-icon slot=\"icon-only\" name=\"trash\"></ion-icon>\n            </ion-item-option>\n          </ion-item-options>\n\n        </ion-item-sliding>\n      </app-not-implemented>\n\n    </ion-list>\n  </form>\n</ion-content>\n","import { Component, OnInit } from '@angular/core';\nimport { AlertController } from '@ionic/angular';\nimport { ActivatedRoute } from '@angular/router';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\n\nimport { AppState, UpdateChannel } from '../models/app-state';\nimport { AppStateService } from '../services/app-state.service';\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.page.html',\n  styleUrls: ['./settings.page.scss'],\n})\nexport class SettingsPage implements OnInit {\n\n  settingsForm: FormGroup;\n  appState: AppState;\n  deployConfiguration: Promise<object>;\n\n  updateChannels = Object.keys(UpdateChannel);\n\n  constructor(\n    private route: ActivatedRoute,\n    private appStateService: AppStateService,\n    private alertController: AlertController,\n  ) { }\n\n  ngOnInit() {\n    this.appState = this.route.snapshot.data.appState as AppState;\n\n    this.settingsForm = new FormGroup({\n      swipeCounting: new FormControl(\n        this.appState.swipeCounting,\n        [\n        ]\n      ),\n      vibrate: new FormControl(\n        this.appState.vibrate,\n        [\n        ]\n      ),\n      recordPosition: new FormControl(\n        this.appState.recordPosition,\n        [\n        ]\n      ),\n      disableNotImplemented: new FormControl(\n        this.appState.disableNotImplemented,\n        [\n        ]\n      ),\n      updateChannel: new FormControl(\n        this.appState.updateChannel,\n        [\n        ]\n      ),\n    });\n  }\n\n  async changeSwipeCounting() {\n    await this.appStateService.setSwipeCounting(\n      this.settingsForm.value.swipeCounting\n    );\n  }\n\n  async changeVibrate() {\n    await this.appStateService.setVibrate(\n      this.settingsForm.value.vibrate\n    );\n  }\n\n  async changeRecordPosition() {\n    try {\n      await this.appStateService.setRecordPosition(\n        this.settingsForm.value.recordPosition\n      );\n    } catch (e) {\n      const alert = await this.alertController.create({\n        header: 'Failed to enable position recording',\n        message: e.message,\n        buttons: ['OK']\n      });\n      await alert.present();\n    }\n  }\n\n  async changeDisableNotImplemented() {\n    this.appStateService.setDisableNotImplemented(\n      this.settingsForm.value.disableNotImplemented\n    );\n  }\n\n  async changeUpdateChannel() {\n    await this.appStateService.setUpdateChannel(\n      this.settingsForm.value.updateChannel\n    );\n    await this.appStateService.update('auto');\n  }\n}\n"]}