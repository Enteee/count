{"version":3,"sources":["./src/app/components/plus-minus-counter/plus-minus-counter.component.html","./src/app/fullscreen-counter/fullscreen-counter.page.html","./src/app/components/components.module.ts","./src/app/components/plus-minus-counter/plus-minus-counter.component.scss","./src/app/components/plus-minus-counter/plus-minus-counter.component.ts","./src/app/fullscreen-counter/fullscreen-counter.page.scss","./src/app/fullscreen-counter/fullscreen-counter.page.ts","./src/app/services/counter.service.ts"],"names":[],"mappings":"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","file":"default~counter-analytics-counter-analytics-module~counters-counters-module-es2015.js","sourcesContent":["module.exports = \"<ion-item-sliding>\\n  <ion-item>\\n\\n    <ng-template [ngIf]=\\\"counter.minusCount < 0\\\">\\n      <ion-button\\n        size=\\\"large\\\"\\n        color=\\\"danger\\\"\\n        [disabled]=\\\"counter.locked\\\"\\n        (click)=\\\"countMinus()\\\"\\n      >\\n      <div [ngSwitch]=\\\"counter.minusCount\\\">\\n        <div *ngSwitchCase=\\\"-1\\\">\\n          <ion-icon name=\\\"remove\\\"></ion-icon>\\n        </div>\\n\\n        <div *ngSwitchDefault>\\n          {{counter.minusCount}}\\n        </div>\\n\\n      </div>\\n      </ion-button>\\n    </ng-template>\\n\\n    <ion-label\\n      class=\\\"ion-text-center\\\"\\n\\n      clickable\\n      [routerLink]=\\\"['/counter-detail', counter.id]\\\"\\n    >\\n      <h1>{{counter.title}}</h1>\\n      <h1>{{counter.count}}</h1>\\n    </ion-label>\\n\\n    <ng-template [ngIf]=\\\"counter.plusCount > 0\\\">\\n      <ion-button\\n        size=\\\"large\\\"\\n        color=\\\"success\\\"\\n        [disabled]=\\\"counter.locked\\\"\\n        (click)=\\\"countPlus()\\\"\\n      >\\n      <div [ngSwitch]=\\\"counter.plusCount\\\">\\n        <div *ngSwitchCase=\\\"1\\\">\\n          <ion-icon name=\\\"add\\\"></ion-icon>\\n        </div>\\n\\n        <div *ngSwitchDefault>\\n          +{{counter.plusCount}}\\n        </div>\\n\\n      </div>\\n      </ion-button>\\n    </ng-template>\\n\\n    <ion-reorder slot=\\\"end\\\"></ion-reorder>\\n\\n  </ion-item>\\n\\n  <ion-item-options\\n    side=\\\"start\\\"\\n    *ngIf=\\\"counter.minusCount < 0\\\"\\n  >\\n    <ion-item-option\\n      color=\\\"danger\\\"\\n      [routerLink]=\\\"['/fullscreen-counter', 'minus', counter.id]\\\"\\n    >\\n      <ion-icon slot=\\\"icon-only\\\" name=\\\"expand\\\"></ion-icon>\\n    </ion-item-option>\\n  </ion-item-options>\\n\\n  <ion-item-options\\n    side=\\\"end\\\"\\n    *ngIf=\\\"counter.plusCount > 0\\\"\\n  >\\n    <ion-item-option\\n      color=\\\"success\\\"\\n      [routerLink]=\\\"['/fullscreen-counter', 'plus', counter.id]\\\"\\n    >\\n      <ion-icon slot=\\\"icon-only\\\" name=\\\"expand\\\"></ion-icon>\\n    </ion-item-option>\\n  </ion-item-options>\\n</ion-item-sliding>\\n\"","module.exports = \"<ion-content>\\n<ion-button\\n  class=\\\"full-screen\\\"\\n  color=\\\"{{color}}\\\"\\n  (click)=\\\"count()\\\"\\n>\\n  <ion-label class=\\\"ion-text-center\\\">\\n\\n    <div [ngSwitch]=\\\"type\\\">\\n      <h1\\n        *ngIf=\\\"type == 'plus'\\\"\\n      >\\n        +{{counter.plusCount}}\\n      </h1>\\n\\n      <h1\\n        *ngIf=\\\"type == 'minus'\\\"\\n      >\\n        {{counter.minusCount}}\\n      </h1>\\n    </div>\\n\\n    <h1>{{counter.title}}</h1>\\n    <h1>{{counter.count}}</h1>\\n\\n  </ion-label>\\n\\n</ion-button>\\n\\n</ion-content>\\n\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { IonicModule } from '@ionic/angular';\n\nimport { NotImplementedModule } from '../not-implemented/not-implemented.module';\n\nimport { PlusMinusCounterComponent } from './plus-minus-counter/plus-minus-counter.component';\nimport { DayOfWeekHistogramComponent } from './day-of-week-histogram/day-of-week-histogram.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    IonicModule,\n    NotImplementedModule,\n  ],\n  declarations: [\n    PlusMinusCounterComponent,\n    DayOfWeekHistogramComponent,\n  ],\n  exports: [\n    PlusMinusCounterComponent,\n    DayOfWeekHistogramComponent,\n  ],\n  entryComponents: [\n    DayOfWeekHistogramComponent,\n  ],\n  providers: [\n  ]\n})\nexport class ComponentsModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcGx1cy1taW51cy1jb3VudGVyL3BsdXMtbWludXMtY291bnRlci5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { Counter } from '../../models/counter';\nimport { CounterService } from '../../services/counter.service';\n\nimport { AppState } from '../../models/app-state';\nimport { AppStateService } from '../../services/app-state.service';\n\nimport { FullScreenCounterType } from '../../fullscreen-counter/fullscreen-counter.page';\n\n@Component({\n  selector: 'app-plus-minus-counter',\n  templateUrl: './plus-minus-counter.component.html',\n  styleUrls: ['./plus-minus-counter.component.scss'],\n})\nexport class PlusMinusCounterComponent implements OnInit {\n\n  readonly FULL_SCREEN_COUNTER_DELAY = 700;\n  readonly FullScreenCounterType = FullScreenCounterType;\n\n  @Input() counter: Counter;\n\n  constructor(\n    private router: Router,\n    private counterService: CounterService,\n    private appStateService: AppStateService,\n  ) {}\n\n  ngOnInit() {}\n\n  async countPlus() {\n    await this.counterService.count(\n      this.counter,\n      this.counter.plusCount,\n    );\n  }\n\n  async countMinus() {\n    await this.counterService.count(\n      this.counter,\n      this.counter.minusCount,\n    );\n  }\n\n  async openFullScreenCounter(\n    type: FullScreenCounterType,\n  ) {\n    this.router.navigate([\n      '/fullscreen-counter',\n      type,\n      this.counter.id,\n    ]);\n  }\n}\n","module.exports = \".full-screen {\\n  height: 100%;\\n  width: 100%;\\n  margin: 0;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3J1bm5lci93b3JrL2NvdW50L2NvdW50L3NyYy9hcHAvZnVsbHNjcmVlbi1jb3VudGVyL2Z1bGxzY3JlZW4tY291bnRlci5wYWdlLnNjc3MiLCJzcmMvYXBwL2Z1bGxzY3JlZW4tY291bnRlci9mdWxsc2NyZWVuLWNvdW50ZXIucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsWUFBQTtFQUNBLFdBQUE7RUFDQSxTQUFBO0FDQ0YiLCJmaWxlIjoic3JjL2FwcC9mdWxsc2NyZWVuLWNvdW50ZXIvZnVsbHNjcmVlbi1jb3VudGVyLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5mdWxsLXNjcmVlbiB7XG4gIGhlaWdodDogMTAwJTtcbiAgd2lkdGg6IDEwMCU7XG4gIG1hcmdpbjogMDtcbn1cbiIsIi5mdWxsLXNjcmVlbiB7XG4gIGhlaWdodDogMTAwJTtcbiAgd2lkdGg6IDEwMCU7XG4gIG1hcmdpbjogMDtcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Router } from '@angular/router';\n\nimport { Counter } from '../models/counter';\nimport { CounterService } from '../services/counter.service';\n\nexport enum FullScreenCounterType {\n  plus = 'plus',\n  minus = 'minus',\n}\n\n@Component({\n  selector: 'app-fullscreen-counter',\n  templateUrl: './fullscreen-counter.page.html',\n  styleUrls: ['./fullscreen-counter.page.scss'],\n})\nexport class FullscreenCounterPage implements OnInit {\n\n  readonly CLOSE_DELAY = 700;\n\n  type: FullScreenCounterType;\n  counter: Counter;\n  color: string;\n\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private counterService: CounterService,\n  ) {}\n\n  ngOnInit() {\n    this.type = FullScreenCounterType[\n      this.route.snapshot.paramMap.get('type')\n    ];\n    this.counter = this.route.snapshot.data.counter;\n    switch (this.type) {\n      case FullScreenCounterType.plus:\n        this.color = 'success';\n        break;\n      case FullScreenCounterType.minus:\n        this.color = 'danger';\n        break;\n    }\n  }\n\n  async close() {\n    this.router.navigate([\n      '/counters'\n    ]);\n  }\n\n  async count() {\n    await this.counterService.count(\n      this.counter,\n      this.type === FullScreenCounterType.plus ?\n        this.counter.plusCount\n        : this.counter.minusCount\n    );\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Geolocation } from '@ionic-native/geolocation/ngx';\nimport { Vibration } from '@ionic-native/vibration/ngx';\n\nimport { Counter } from '../models/counter';\nimport { CounterRepositoryService } from '../models/counter-repository.service';\n\nimport { CountEvent, CountEventType } from '../models/count-event';\nimport { CountEventRepositoryService } from '../models/count-event-repository.service';\n\nimport { Position } from '../models/count-event';\nimport { PositionService } from './position.service';\n\nimport { AppStateService } from './app-state.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CounterService {\n\n  static readonly VIBRATION_PATTERN_POSITIVE = [30];\n  static readonly VIBRATION_PATTERN_NEGATIVE = [30, 30, 30];\n\n  constructor(\n    private counterRepositoryService: CounterRepositoryService,\n    private countEventRepositoryService: CountEventRepositoryService,\n    private positionService: PositionService,\n    private appStateService: AppStateService,\n    private vibration: Vibration,\n  ) {}\n\n  get allSortBySortOrder(): Array<Counter> {\n    return this.counterRepositoryService.allSortBySortOrder;\n  }\n\n  async addCounter() {\n    const newCounter = new Counter();\n    // add counter to bottom\n    newCounter.sortOrder = this.counterRepositoryService.all.length + 1;\n    await this.counterRepositoryService.save(newCounter);\n    return newCounter;\n  }\n\n  async delete(counter: Counter) {\n    // first delete the counter: this is so that the ui element disappers\n    // quicker which should be create better user experience.\n    await this.counterRepositoryService.delete(counter);\n\n    // then, delete all events of this counter\n    await Promise.all(\n      this.countEventRepositoryService.getByCounter(counter).map(\n        (i) => this.countEventRepositoryService.delete(i)\n      )\n    );\n  }\n\n  async count(\n    counter: Counter,\n    delta: number,\n  ) {\n    counter.count += delta;\n\n    // vibrate\n    if (\n      this.appStateService.appState.vibrate\n      && counter.vibrate\n    ) {\n      this.vibration.vibrate(\n        (delta > 0) ?\n          CounterService.VIBRATION_PATTERN_POSITIVE :\n          CounterService.VIBRATION_PATTERN_NEGATIVE\n      );\n    }\n\n    // apply positive and negative wraparounds\n    if (\n      counter.positiveWrapAroundActive\n      && counter.count > counter.positiveWrapAround\n    ) {\n      counter.count = counter.count % counter.positiveWrapAround;\n    }\n\n    if (\n      counter.negativeWrapAroundActive\n      && counter.count < counter.negativeWrapAround\n    ) {\n      counter.count = counter.count % counter.negativeWrapAround;\n    }\n\n    let position = null;\n    try {\n      position = await this.positionService.getPosition();\n    } catch (e) {\n      // user does not allow posiiton recording or something unexpected happened\n      await this.appStateService.setRecordPosition(false);\n    }\n\n    await Promise.all([\n      this.counterRepositoryService.save(counter),\n      this.countEventRepositoryService.save(\n        new CountEvent(\n          counter.id,\n          delta,\n          position,\n        )\n      )\n    ]);\n  }\n\n  async reset(\n    counter: Counter,\n  ) {\n    counter.count = 0;\n    await Promise.all([\n      this.counterRepositoryService.save(\n        counter\n      ),\n      this.countEventRepositoryService.save(\n        new CountEvent(\n          counter.id,\n          0,\n          {} as any,\n          CountEventType.Reset,\n        )\n      ),\n    ]);\n  }\n\n  async setLocked(\n    counter: Counter,\n    setLocked: boolean,\n  ) {\n    counter.locked = setLocked;\n    await this.counterRepositoryService.save(\n      counter\n    );\n  }\n\n  async reorder(\n    from: number,\n    to: number,\n  ) {\n    const counters = this.counterRepositoryService.allSortBySortOrder;\n    // move element in array\n    counters.splice(to, 0,\n      counters.splice(from, 1)[0]\n    );\n    // save in new order\n    await Promise.all(\n      counters.map(\n        async (counter, i) => {\n          counter.sortOrder = i;\n          await this.counterRepositoryService.save(counter);\n        }\n      )\n    );\n  }\n\n}\n"],"sourceRoot":""}