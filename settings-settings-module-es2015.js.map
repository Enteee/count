{"version":3,"sources":["./src/app/settings/settings.page.html","./src/app/settings/settings.module.ts","./src/app/settings/settings.page.scss","./src/app/settings/settings.page.ts"],"names":[],"mappings":";;;;;;;;;AAAA,i4HAAi4H,eAAe,o0C;;;;;;;;;;;;;;;;;;;;;;;ACAv2H;AACM;AACM;AACE;AAEO;AAEmB;AAElC;AAE/C,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,2DAAY;KACxB;CACF,CAAC;AAiBF,IAAa,kBAAkB,GAA/B,MAAa,kBAAkB;CAAG;AAArB,kBAAkB;IAf9B,8DAAQ,CAAC;QACR,OAAO,EAAE;YACP,4DAAY;YACZ,kEAAmB;YACnB,0DAAW;YACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;YAC7B,4FAAoB;SACrB;QACD,SAAS,EAAE;YACT,8DAAe;SAChB;QACD,YAAY,EAAE;YACZ,2DAAY;SACb;KACF,CAAC;GACW,kBAAkB,CAAG;AAAH;;;;;;;;;;;;ACjC/B,+DAA+D,2I;;;;;;;;;;;;;;;;;;;;;;ACAb;AACD;AACA;AACmB;AAEN;AACE;AAOhE,IAAa,YAAY,GAAzB,MAAa,YAAY;IAQvB,YACU,KAAqB,EACrB,eAAgC,EAChC,eAAgC;QAFhC,UAAK,GAAL,KAAK,CAAgB;QACrB,oBAAe,GAAf,eAAe,CAAiB;QAChC,oBAAe,GAAf,eAAe,CAAiB;QAL1C,mBAAc,GAAG,MAAM,CAAC,IAAI,CAAC,+DAAa,CAAC,CAAC;IAMxC,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAoB,CAAC;QAE9D,IAAI,CAAC,YAAY,GAAG,IAAI,wDAAS,CAAC;YAChC,OAAO,EAAE,IAAI,0DAAW,CACtB,IAAI,CAAC,QAAQ,CAAC,OAAO,EACrB,EACC,CACF;YACD,cAAc,EAAE,IAAI,0DAAW,CAC7B,IAAI,CAAC,QAAQ,CAAC,cAAc,EAC5B,EACC,CACF;YACD,qBAAqB,EAAE,IAAI,0DAAW,CACpC,IAAI,CAAC,QAAQ,CAAC,qBAAqB,EACnC,EACC,CACF;YACD,aAAa,EAAE,IAAI,0DAAW,CAC5B,IAAI,CAAC,QAAQ,CAAC,aAAa,EAC3B,EACC,CACF;SACF,CAAC,CAAC;IACL,CAAC;IAEK,aAAa;;YACjB,MAAM,IAAI,CAAC,eAAe,CAAC,UAAU,CACnC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,OAAO,CAChC,CAAC;QACJ,CAAC;KAAA;IAEK,oBAAoB;;YACxB,IAAI;gBACF,MAAM,IAAI,CAAC,eAAe,CAAC,iBAAiB,CAC1C,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,cAAc,CACvC,CAAC;aACH;YAAC,OAAO,CAAC,EAAE;gBACV,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;oBAC9C,MAAM,EAAE,qCAAqC;oBAC7C,OAAO,EAAE,CAAC,CAAC,OAAO;oBAClB,OAAO,EAAE,CAAC,IAAI,CAAC;iBAChB,CAAC,CAAC;gBACH,MAAM,KAAK,CAAC,OAAO,EAAE,CAAC;aACvB;QACH,CAAC;KAAA;IAEK,2BAA2B;;YAC/B,IAAI,CAAC,eAAe,CAAC,wBAAwB,CAC3C,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,qBAAqB,CAC9C,CAAC;QACJ,CAAC;KAAA;IAEK,mBAAmB;;YACvB,MAAM,IAAI,CAAC,eAAe,CAAC,gBAAgB,CACzC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,aAAa,CACtC,CAAC;YACF,MAAM,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QAC5C,CAAC;KAAA;CACF;;YAjEkB,8DAAc;YACJ,2EAAe;YACf,8DAAe;;AAX/B,YAAY;IALxB,+DAAS,CAAC;QACT,QAAQ,EAAE,cAAc;QACxB,gJAAmC;;KAEpC,CAAC;2EAUiB,8DAAc;QACJ,2EAAe;QACf,8DAAe;GAX/B,YAAY,CA0ExB;AA1EwB","file":"settings-settings-module-es2015.js","sourcesContent":["module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title>\\n      <ion-icon name=\\\"settings\\\"></ion-icon>\\n      Settings\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <form\\n    [formGroup]=\\\"settingsForm\\\"\\n  >\\n    <ion-list>\\n      <app-not-implemented\\n        description=\\\"Select language\\\"\\n        issueId=\\\"12\\\"\\n      >\\n        <ion-item>\\n          <ion-icon slot=\\\"start\\\" name=\\\"text\\\"></ion-icon>\\n          <ion-label>Language</ion-label>\\n          <ion-select slot=\\\"end\\\" placeholder=\\\"Select One\\\">\\n            <ion-select-option value=\\\"english\\\">English</ion-select-option>\\n            <ion-select-option value=\\\"german\\\">German</ion-select-option>\\n            <ion-select-option value=\\\"french\\\">French</ion-select-option>\\n          </ion-select>\\n        </ion-item>\\n      </app-not-implemented>\\n\\n      <app-not-implemented\\n        description=\\\"Toggle dark mode\\\"\\n        issueId=\\\"10\\\"\\n      >\\n        <ion-item>\\n          <ion-icon slot=\\\"start\\\" name=\\\"moon\\\"></ion-icon>\\n          <ion-label>Dark Mode</ion-label>\\n          <ion-checkbox slot=\\\"end\\\">\\n          </ion-checkbox>\\n        </ion-item>\\n      </app-not-implemented>\\n\\n      <app-not-implemented\\n        description=\\\"Switch to left-handed mode\\\"\\n        issueId=\\\"14\\\"\\n      >\\n        <ion-item>\\n          <ion-icon slot=\\\"start\\\" name=\\\"hand\\\"></ion-icon>\\n          <ion-label>Left-handed mode</ion-label>\\n          <ion-checkbox slot=\\\"end\\\">\\n          </ion-checkbox>\\n        </ion-item>\\n      </app-not-implemented>\\n\\n      <ion-item>\\n        <ion-icon slot=\\\"start\\\" name=\\\"pulse\\\"></ion-icon>\\n        <ion-label>Vibrate</ion-label>\\n        <ion-checkbox\\n          required\\n          slot=\\\"end\\\"\\n          formControlName=\\\"vibrate\\\"\\n          [checked]=\\\"appState.vibrate\\\"\\n          (ionChange)=\\\"changeVibrate()\\\"\\n        >\\n        </ion-checkbox>\\n      </ion-item>\\n\\n      <ion-item>\\n        <ion-icon slot=\\\"start\\\" name=\\\"pin\\\"></ion-icon>\\n        <ion-label>Record position</ion-label>\\n        <ion-checkbox\\n          required\\n          slot=\\\"end\\\"\\n          formControlName=\\\"recordPosition\\\"\\n          [checked]=\\\"appState.recordPosition\\\"\\n          (ionChange)=\\\"changeRecordPosition()\\\"\\n        >\\n        </ion-checkbox>\\n      </ion-item>\\n\\n      <app-not-implemented\\n        description=\\\"Enable Advertisements / Disable Fuel\\\"\\n        issueId=\\\"11\\\"\\n      >\\n        <ion-item>\\n          <ion-icon slot=\\\"start\\\" name=\\\"cash\\\"></ion-icon>\\n          <ion-label>Enable Advertisements</ion-label>\\n          <ion-checkbox\\n            slot=\\\"end\\\"\\n          >\\n          </ion-checkbox>\\n        </ion-item>\\n      </app-not-implemented>\\n\\n      <ion-item>\\n        <ion-icon slot=\\\"start\\\" name=\\\"construct\\\"></ion-icon>\\n        <ion-label>Disable not implemented</ion-label>\\n\\n        <!--\\n          Exception: we use [checked] here, because\\n          the status of this checkbox might be changed by a\\n          not-implemented modal, from a not-implemented control\\n          on this page.\\n        -->\\n        <ion-checkbox\\n          required\\n          slot=\\\"end\\\"\\n          formControlName=\\\"disableNotImplemented\\\"\\n          [checked]=\\\"appState.disableNotImplemented\\\"\\n          (ionChange)=\\\"changeDisableNotImplemented()\\\"\\n        >\\n        </ion-checkbox>\\n      </ion-item>\\n\\n      <ion-item>\\n        <ion-icon slot=\\\"start\\\" name=\\\"cloud-download\\\"></ion-icon>\\n        <ion-label>Update</ion-label>\\n        <ion-select\\n          formControlName=\\\"updateChannel\\\"\\n          slot=\\\"end\\\"\\n          placeholder=\\\"Select One\\\"\\n          (ionChange)=\\\"changeUpdateChannel()\\\"\\n        >\\n          <ion-select-option\\n            *ngFor=\\\"let updateChannel of updateChannels\\\"\\n            [value]=\\\"updateChannel\\\"\\n          >\\n            {{updateChannel}}\\n          </ion-select-option>\\n        </ion-select>\\n      </ion-item>\\n\\n      <app-not-implemented\\n        description=\\\"Save and load backup\\\"\\n        issueId=\\\"15\\\"\\n      >\\n        <ion-item>\\n          <ion-icon slot=\\\"start\\\" name=\\\"download\\\"></ion-icon>\\n          <ion-label>Backup</ion-label>\\n          <ion-button\\n            expand=\\\"full\\\"\\n            color=\\\"success\\\"\\n          >\\n            Save\\n          </ion-button>\\n\\n          <ion-button\\n            expand=\\\"full\\\"\\n            color=\\\"danger\\\"\\n          >\\n            Restore\\n          </ion-button>\\n        </ion-item>\\n      </app-not-implemented>\\n\\n      <app-not-implemented\\n        description=\\\"Trigger a factory reset\\\"\\n        issueId=\\\"16\\\"\\n      >\\n        <ion-item-sliding>\\n\\n          <ion-item>\\n            <ion-icon slot=\\\"start\\\" name=\\\"trash\\\"></ion-icon>\\n            <ion-label>Factory reset</ion-label>\\n            <ion-icon slot=\\\"end\\\" name=\\\"arrow-back\\\"></ion-icon>\\n          </ion-item>\\n          <ion-item-options side=\\\"end\\\">\\n            <ion-item-option color=\\\"danger\\\">\\n              <ion-icon slot=\\\"icon-only\\\" name=\\\"trash\\\"></ion-icon>\\n            </ion-item-option>\\n          </ion-item-options>\\n\\n        </ion-item-sliding>\\n      </app-not-implemented>\\n\\n    </ion-list>\\n  </form>\\n</ion-content>\\n\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule, AlertController } from '@ionic/angular';\n\nimport { NotImplementedModule } from '../not-implemented/not-implemented.module';\n\nimport { SettingsPage } from './settings.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SettingsPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n    NotImplementedModule,\n  ],\n  providers: [\n    AlertController,\n  ],\n  declarations: [\n    SettingsPage\n  ],\n})\nexport class SettingsPageModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NldHRpbmdzL3NldHRpbmdzLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { AlertController } from '@ionic/angular';\nimport { ActivatedRoute } from '@angular/router';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\n\nimport { AppState, UpdateChannel } from '../models/app-state';\nimport { AppStateService } from '../services/app-state.service';\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.page.html',\n  styleUrls: ['./settings.page.scss'],\n})\nexport class SettingsPage implements OnInit {\n\n  settingsForm: FormGroup;\n  appState: AppState;\n  deployConfiguration: Promise<object>;\n\n  updateChannels = Object.keys(UpdateChannel);\n\n  constructor(\n    private route: ActivatedRoute,\n    private appStateService: AppStateService,\n    private alertController: AlertController,\n  ) { }\n\n  ngOnInit() {\n    this.appState = this.route.snapshot.data.appState as AppState;\n\n    this.settingsForm = new FormGroup({\n      vibrate: new FormControl(\n        this.appState.vibrate,\n        [\n        ]\n      ),\n      recordPosition: new FormControl(\n        this.appState.recordPosition,\n        [\n        ]\n      ),\n      disableNotImplemented: new FormControl(\n        this.appState.disableNotImplemented,\n        [\n        ]\n      ),\n      updateChannel: new FormControl(\n        this.appState.updateChannel,\n        [\n        ]\n      ),\n    });\n  }\n\n  async changeVibrate() {\n    await this.appStateService.setVibrate(\n      this.settingsForm.value.vibrate\n    );\n  }\n\n  async changeRecordPosition() {\n    try {\n      await this.appStateService.setRecordPosition(\n        this.settingsForm.value.recordPosition\n      );\n    } catch (e) {\n      const alert = await this.alertController.create({\n        header: 'Failed to enable position recording',\n        message: e.message,\n        buttons: ['OK']\n      });\n      await alert.present();\n    }\n  }\n\n  async changeDisableNotImplemented() {\n    this.appStateService.setDisableNotImplemented(\n      this.settingsForm.value.disableNotImplemented\n    );\n  }\n\n  async changeUpdateChannel() {\n    await this.appStateService.setUpdateChannel(\n      this.settingsForm.value.updateChannel\n    );\n    await this.appStateService.update('auto');\n  }\n}\n"],"sourceRoot":""}