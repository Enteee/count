name: Count CI

on: [push, pull_request]

jobs:

  test:

    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
    - uses: actions/checkout@v2

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - name: npm install
      run: npm install
      env:
        NODE_ENV: # don't set to production: also install devDependencies

    - name: npm lint
      run: npm run lint

    - name: npm build
      run: npm run build --if-present

    - name: npm test
      run: npm run test-headless

    - name: Coveralls
      uses: coverallsapp/github-action@master
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}

  build:

    runs-on: ubuntu-latest
    timeout-minutes: 30

    strategy:
      matrix:
        # node-version: [8.x, 10.x, 12.x]
        node-version: [12.x]
        java-version: [1.8]
        build-args: [ "" , "--prod --release" ]
        patch: [ "", "patches/store-release.patch" ]

    steps:
    - uses: actions/checkout@v2

    - name: patch
      run: |
        if [ -f "${{ matrix.patch }}" ]; then
          git apply "${{ matrix.patch }}"
          git diff
        fi

    - name: Define Artifact Name
      id: artifact_name
      run: |
        build_args="${{ matrix.build-args }}"
        build_args="${build_args:-noargs}"
        build_args="${build_args//-}"
        build_args="${build_args// /-}"

        patch="${{ matrix.patch }}"
        patch="${patch:-nopatch}"
        patch="${patch##*/}"
        patch="${patch%.patch}"

        export ARTIFACT_NAME="count-${build_args}-${patch}-node${{ matrix.node-version }}-jdk${{ matrix.java-version }}"
        echo "Building Artifact: ${ARTIFACT_NAME}"
        echo ::set-output name=ARTIFACT_NAME::${ARTIFACT_NAME}

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - name: npm install
      run: npm install
      env:
        NODE_ENV: # don't set to production: also install devDependencies

    - name: Use JDK ${{ matrix.java-version }}
      uses: actions/setup-java@v1
      with:
        java-version: ${{ matrix.java-version }}

    - name: npx ionic cordova build
      run: |
        npx ionic \
          cordova build \
            android ${{ matrix.build-args }}
      env:
        CI: true

    - name: Finalize APK
      env:
        STOREPASS: ${{ secrets.ACTIONS_KEYSTORE_PW }}
      run: |
        find \
          platforms/ \
          -name '*.apk' \
          -print0 \
        | xargs -0 -n1 -I{} \
          ./apk_finalize.sh \
            {} \
            "${{ steps.artifact_name.outputs.ARTIFACT_NAME }}.apk"

    - name: Upload Release Artifact
      uses: actions/upload-artifact@v2
      with:
        name: "${{ steps.artifact_name.outputs.ARTIFACT_NAME }}"
        path: "${{ steps.artifact_name.outputs.ARTIFACT_NAME }}.apk"

  finish:
    needs: build

    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:

    - name: Branch name
      id: branch_name
      run: |
        echo ::set-output name=SOURCE_NAME::${GITHUB_REF#refs/*/}
        echo ::set-output name=SOURCE_BRANCH::${GITHUB_REF#refs/heads/}
        echo ::set-output name=SOURCE_TAG::${GITHUB_REF#refs/tags/}

    - name: Download Release Artifact
      uses: actions/download-artifact@v2
      with:
        path: release/

    - name: Upload APK to Play Console
      if: startsWith(github.ref, 'refs/tags/v')
      uses: r0adkll/upload-google-play@v1
      with:
        serviceAccountJsonPlainText: ${{ secrets.ACTIONS_GOOGLE_PLAY_SERVICE_ACCOUNT }}
        packageName: ch.duckpond.count
        releaseFile: release/count-prod-release-store-release-node12.x-jdk1.8/count-prod-release-store-release-node12.x-jdk1.8.apk
        track: internal

    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/v')
      uses: meeDamian/github-release@2.0
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        name: Release ${{ steps.branch_name.outputs.SOURCE_TAG }}
        gzip: folders
        files: >
          count-${{ steps.branch_name.outputs.SOURCE_TAG }}.apk:release/count-prod-release-nopatch-node12.x-jdk1.8/count-prod-release-nopatch-node12.x-jdk1.8.apk
          count-${{ steps.branch_name.outputs.SOURCE_TAG }}-playstore.apk:release/count-prod-release-store-release-node12.x-jdk1.8/count-prod-release-store-release-node12.x-jdk1.8.apk
          all-artifacts-${{ steps.branch_name.outputs.SOURCE_TAG }}:release/
        draft: true
