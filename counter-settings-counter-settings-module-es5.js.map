{"version":3,"sources":["./src/app/counter-detail/counter-settings/counter-settings.page.html","./src/app/counter-detail/counter-settings/counter-settings.module.ts","./src/app/counter-detail/counter-settings/counter-settings.page.scss","./src/app/counter-detail/counter-settings/counter-settings.page.ts","./src/app/guards/unsaved-changes/unsaved-changes.guard.ts","./src/app/services/counter.service.ts"],"names":[],"mappings":"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","file":"counter-settings-counter-settings-module-es5.js","sourcesContent":["module.exports = \"<ion-content>\\n  <form\\n    [formGroup]=\\\"counterSettingsForm\\\"\\n    (ngSubmit)=\\\"submit()\\\"\\n    (ionChange)=\\\"submit()\\\"\\n  >\\n      <ion-list>\\n\\n          <ion-list-header>Title</ion-list-header>\\n          <ion-item>\\n            <ion-input\\n              required\\n              formControlName=\\\"title\\\"\\n              type=\\\"text\\\"\\n              placeholder=\\\"my Counter\\\"\\n              class=\\\"title-input\\\"\\n            ></ion-input>\\n          </ion-item>\\n\\n          <ion-list-header>Plus Count</ion-list-header>\\n          <ion-item>\\n\\n            <ion-icon\\n              slot=\\\"start\\\"\\n              name=\\\"add\\\"\\n              (click)=\\\"increment('plusCount')\\\"\\n            ></ion-icon>\\n\\n            <ion-input\\n              required\\n              formControlName=\\\"plusCount\\\"\\n              type=\\\"number\\\"\\n              placeholder=\\\"0\\\"\\n              (ionChange)=\\\"clamp('plusCount')\\\"\\n            >\\n            </ion-input>\\n\\n          </ion-item>\\n\\n          <ion-list-header>Minus Count</ion-list-header>\\n          <ion-item>\\n\\n            <ion-icon\\n              slot=\\\"start\\\"\\n              name=\\\"remove\\\"\\n              (click)=\\\"increment('minusCount')\\\"\\n            ></ion-icon>\\n\\n            <ion-input\\n              required\\n              formControlName=\\\"minusCount\\\"\\n              type=\\\"number\\\"\\n              placeholder=\\\"0\\\"\\n              (ionChange)=\\\"clamp('minusCount')\\\"\\n            >\\n            </ion-input>\\n          </ion-item>\\n\\n          <ion-list-header>Positive Wraparound</ion-list-header>\\n          <ion-item>\\n\\n            <ion-icon\\n              slot=\\\"start\\\"\\n              name=\\\"add\\\"\\n              (click)=\\\"increment('positiveWrapAround')\\\"\\n            >\\n            </ion-icon>\\n\\n            <ion-input\\n              required\\n              formControlName=\\\"positiveWrapAround\\\"\\n              type=\\\"number\\\"\\n              placeholder=\\\"0\\\"\\n              (ionChange)=\\\"\\n                clamp('positiveWrapAround', 1);\\n                check('positiveWrapAroundActive');\\n              \\\"\\n            >\\n            </ion-input>\\n\\n            <ion-checkbox\\n              slot=\\\"end\\\"\\n              formControlName=\\\"positiveWrapAroundActive\\\"\\n            >\\n            </ion-checkbox>\\n\\n          </ion-item>\\n\\n          <ion-list-header>Negative Wraparound</ion-list-header>\\n          <ion-item>\\n\\n            <ion-icon\\n              slot=\\\"start\\\"\\n              name=\\\"remove\\\"\\n              (click)=\\\"increment('negativeWrapAround')\\\"\\n            >\\n            </ion-icon>\\n\\n            <ion-input\\n              required\\n              formControlName=\\\"negativeWrapAround\\\"\\n              type=\\\"number\\\"\\n              placeholder=\\\"0\\\"\\n              (ionChange)=\\\"\\n                clamp('negativeWrapAround', 1);\\n                check('negativeWrapAroundActive');\\n              \\\"\\n            >\\n            </ion-input>\\n\\n            <ion-checkbox\\n              slot=\\\"end\\\"\\n              formControlName=\\\"negativeWrapAroundActive\\\"\\n            >\\n            </ion-checkbox>\\n\\n          </ion-item>\\n\\n          <ion-item\\n            [hidden]=\\\"!appState.vibrate\\\"\\n            class=\\\"vibrate-checkbox\\\"\\n          >\\n            <ion-icon slot=\\\"start\\\" name=\\\"pulse\\\"></ion-icon>\\n            <ion-label>Vibrate</ion-label>\\n            <ion-checkbox\\n              slot=\\\"end\\\"\\n              formControlName=\\\"vibrate\\\"\\n            >\\n            </ion-checkbox>\\n          </ion-item>\\n\\n          <ion-item>\\n            <ion-icon slot=\\\"start\\\" name=\\\"lock\\\"></ion-icon>\\n            <ion-label>Locked</ion-label>\\n            <ion-checkbox\\n              slot=\\\"end\\\"\\n              formControlName=\\\"locked\\\"\\n            >\\n            </ion-checkbox>\\n          </ion-item>\\n\\n          <ion-item-sliding>\\n\\n            <ion-item>\\n              <ion-icon slot=\\\"start\\\" name=\\\"trash\\\"></ion-icon>\\n              <ion-label>Delete</ion-label>\\n              <ion-icon slot=\\\"end\\\" name=\\\"arrow-back\\\"></ion-icon>\\n            </ion-item>\\n            <ion-item-options side=\\\"end\\\">\\n              <ion-item-option\\n                color=\\\"danger\\\"\\n                (click)=\\\"deleteCounter()\\\"\\n              >\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"trash\\\"></ion-icon>\\n              </ion-item-option>\\n            </ion-item-options>\\n\\n          </ion-item-sliding>\\n\\n      </ion-list>\\n\\n      <ion-grid>\\n\\n        <ion-row>\\n          <ion-col>\\n            <ion-button\\n              size=\\\"large\\\"\\n              expand=\\\"full\\\"\\n              color=\\\"medium\\\"\\n              appNotImplemented description=\\\"Convert to binary counter\\\" issueId=\\\"13\\\" on=\\\"click\\\"\\n            >\\n              <ion-icon name=\\\"sync\\\"></ion-icon>\\n              Make binary\\n            </ion-button>\\n          </ion-col>\\n        </ion-row>\\n\\n        <ion-row>\\n          <ion-col>\\n\\n            <ion-button\\n              size=\\\"large\\\"\\n              expand=\\\"full\\\"\\n              appNotImplemented description=\\\"Add counter widget to home screen\\\" issueId=\\\"2\\\" on=\\\"click\\\"\\n            >\\n              <ion-icon name=\\\"phone-portrait\\\"></ion-icon>\\n              To Home Screen\\n            </ion-button>\\n\\n          </ion-col>\\n        </ion-row>\\n\\n        <ion-row>\\n          <ion-col>\\n            <ion-button\\n              size=\\\"large\\\"\\n              expand=\\\"full\\\"\\n              color=\\\"warning\\\"\\n              (click)=\\\"reset()\\\"\\n            >\\n              <ion-icon name=\\\"refresh\\\"></ion-icon>\\n              Reset\\n            </ion-button>\\n          </ion-col>\\n        </ion-row>\\n\\n      </ion-grid>\\n\\n  </form>\\n</ion-content>\\n\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { NotImplementedModule } from '../../not-implemented/not-implemented.module';\n\nimport { UnsavedChangesGuard } from '../../guards/unsaved-changes/unsaved-changes.guard';\n\n\nimport { CounterSettingsPage } from './counter-settings.page';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CounterSettingsPage,\n    canDeactivate: [\n      UnsavedChangesGuard,\n    ],\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n    NotImplementedModule,\n  ],\n  declarations: [CounterSettingsPage]\n})\nexport class CounterSettingsPageModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvdW50ZXItZGV0YWlsL2NvdW50ZXItc2V0dGluZ3MvY291bnRlci1zZXR0aW5ncy5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\n\nimport { HasUnsavedChanges } from '../../guards/unsaved-changes/unsaved-changes.guard';\n\nimport { Counter } from '../../models/counter';\nimport { CounterRepositoryService } from '../../models/counter-repository.service';\nimport { CounterService } from '../../services/counter.service';\n\nimport { AppState } from '../../models/app-state';\nimport { AppStateService } from '../../services/app-state.service';\n\ntype ClampFunction = 'max' | 'min';\n\n@Component({\n  selector: 'app-counter-settings',\n  templateUrl: './counter-settings.page.html',\n  styleUrls: ['./counter-settings.page.scss'],\n})\nexport class CounterSettingsPage implements OnInit, HasUnsavedChanges {\n\n  counter: Counter;\n  appState: AppState;\n  counterSettingsForm: FormGroup;\n\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private counterRepositoryService: CounterRepositoryService,\n    private counterService: CounterService,\n    private appStateService: AppStateService,\n  ) {}\n\n  ngOnInit() {\n    this.counter = this.route.snapshot.data.counter;\n    this.appState = this.appStateService.appState;\n\n    // enable disable input boxed based on checkbox\n    // TODO: this should become a component\n    const positiveWrapAround = new FormControl(\n      this.counter.positiveWrapAround,\n      [\n        Validators.min(1)\n      ]\n    );\n    const positiveWrapAroundActive = new FormControl(\n      this.counter.positiveWrapAroundActive,\n      [\n      ]\n    );\n    const negativeWrapAround = new FormControl(\n      -this.counter.negativeWrapAround,\n      [\n        Validators.min(1)\n      ]\n    );\n    const negativeWrapAroundActive = new FormControl(\n      this.counter.negativeWrapAroundActive,\n      [\n      ]\n    );\n\n    this.counterSettingsForm = new FormGroup({\n      title : new FormControl(\n        this.counter.title,\n        [\n        ]\n      ),\n      plusCount : new FormControl(\n        this.counter.plusCount,\n        [\n          Validators.min(0)\n        ]\n      ),\n      minusCount : new FormControl(\n        -this.counter.minusCount,\n        [\n          Validators.min(0)\n        ]\n      ),\n      positiveWrapAround,\n      positiveWrapAroundActive,\n      negativeWrapAround,\n      negativeWrapAroundActive,\n      vibrate : new FormControl(\n        this.counter.vibrate,\n      ),\n      locked : new FormControl(\n        this.counter.locked,\n      ),\n    });\n  }\n\n  async submit() {\n\n    // only submit if valid\n    if (!this.counterSettingsForm.valid) {\n      return;\n    }\n\n    this.counterSettingsForm.value.minusCount = -this.counterSettingsForm.value.minusCount;\n    this.counterSettingsForm.value.negativeWrapAround = -this.counterSettingsForm.value.negativeWrapAround;\n\n    await this.counterRepositoryService.save(\n      Object.assign(\n        this.counter,\n        this.counterSettingsForm.value\n      )\n    );\n  }\n\n  hasUnsavedChanges(): boolean {\n    return !this.counterSettingsForm.valid;\n  }\n\n  async reset() {\n    await this.counterService.reset(this.counter);\n    this.router.navigate([\n      '/counters',\n    ]);\n  }\n\n  check(\n    formControlName: string,\n  ) {\n    this.counterSettingsForm.patchValue({\n      [formControlName]: true,\n    });\n  }\n\n  increment(\n    formControlName: string,\n  ) {\n    let value = this.counterSettingsForm.get(formControlName).value;\n    if (value === null) {\n      value = -1;\n    }\n    this.counterSettingsForm.patchValue({\n      [formControlName]: value + 1,\n    });\n  }\n\n\n  clamp(\n    formControlName: string,\n    clampValue: number = 0,\n    clampFunction = ('max' as ClampFunction),\n  ) {\n    const value = this.counterSettingsForm.get(formControlName).value;\n    if (value !== null) {\n      this.counterSettingsForm.patchValue({\n        [formControlName]: Math[clampFunction](clampValue, value)\n      });\n    }\n  }\n\n  async deleteCounter() {\n    // We want to make give the user the impression that this\n    // operation is very quick, so we first navigate away.\n    this.router.navigate([\n      '/counters',\n    ]);\n    await this.counterService.delete(this.counter);\n  }\n\n}\n\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, CanDeactivate } from '@angular/router';\nimport { AlertController } from '@ionic/angular';\nimport { Observable } from 'rxjs';\n\nexport interface HasUnsavedChanges {\n  hasUnsavedChanges: () => Observable<boolean> | Promise<boolean> | boolean;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UnsavedChangesGuard implements CanDeactivate<HasUnsavedChanges> {\n  constructor(public alertController: AlertController) {}\n\n  async canDeactivate(component: HasUnsavedChanges,\n                      route: ActivatedRouteSnapshot,\n                      state: RouterStateSnapshot) {\n\n    if (!component.hasUnsavedChanges()) {\n      return true;\n    }\n\n    return await this.canDiscard();\n  }\n\n  /**\n   * Ask the user if they want to discard unsaved changes\n   */\n  canDiscard(): Promise<boolean> {\n    return new Promise(async (resolve, reject) => {\n      const alert = await this.alertController.create({\n          header: 'Unsaved Changes',\n          message: 'You are trying to leave a page which has unsaved changes',\n          buttons: [\n            {\n              text: 'Leave',\n              handler: _ => resolve(true)\n            },\n            {\n              text: 'Stay',\n              handler: _ => resolve(false)\n            }\n          ],\n      });\n      await alert.present();\n    });\n  }\n\n}\n\n","import { Injectable } from '@angular/core';\n\nimport { Geolocation } from '@ionic-native/geolocation/ngx';\nimport { Vibration } from '@ionic-native/vibration/ngx';\n\nimport { Counter } from '../models/counter';\nimport { CounterRepositoryService } from '../models/counter-repository.service';\n\nimport { CountEvent, CountEventType } from '../models/count-event';\nimport { CountEventRepositoryService } from '../models/count-event-repository.service';\n\nimport { Position } from '../models/count-event';\nimport { PositionService } from './position.service';\n\nimport { AppStateService } from './app-state.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CounterService {\n\n  static readonly VIBRATION_PATTERN_POSITIVE = [30];\n  static readonly VIBRATION_PATTERN_NEGATIVE = [30, 30, 30];\n\n  constructor(\n    private counterRepositoryService: CounterRepositoryService,\n    private countEventRepositoryService: CountEventRepositoryService,\n    private positionService: PositionService,\n    private appStateService: AppStateService,\n    private vibration: Vibration,\n  ) {}\n\n  get allSortBySortOrder(): Array<Counter> {\n    return this.counterRepositoryService.allSortBySortOrder;\n  }\n\n  async addCounter() {\n    const newCounter = new Counter();\n    newCounter.sortOrder = this.counterRepositoryService.all.length + 1;\n    await this.counterRepositoryService.save(newCounter);\n  }\n\n  async delete(counter: Counter) {\n    // first delete the counter: this is so that the ui element disappers\n    // quicker which should be create better user experience.\n    await this.counterRepositoryService.delete(counter);\n\n    // then, delete all events of this counter\n    await Promise.all(\n      this.countEventRepositoryService.getByCounter(counter).map(\n        (i) => this.countEventRepositoryService.delete(i)\n      )\n    );\n  }\n\n  async count(\n    counter: Counter,\n    delta: number,\n  ) {\n    counter.count += delta;\n\n    // vibrate\n    if (\n      this.appStateService.appState.vibrate\n      && counter.vibrate\n    ) {\n      this.vibration.vibrate(\n        (delta > 0) ?\n          CounterService.VIBRATION_PATTERN_POSITIVE :\n          CounterService.VIBRATION_PATTERN_NEGATIVE\n      );\n    }\n\n    // apply positive and negative wraparounds\n    if (\n      counter.positiveWrapAroundActive\n      && counter.count > counter.positiveWrapAround\n    ) {\n      counter.count = counter.count % counter.positiveWrapAround;\n    }\n\n    if (\n      counter.negativeWrapAroundActive\n      && counter.count < counter.negativeWrapAround\n    ) {\n      counter.count = counter.count % counter.negativeWrapAround;\n    }\n\n    let position = null;\n    try {\n      position = await this.positionService.getPosition();\n    } catch (e) {\n      // user does not allow posiiton recording or something unexpected happened\n      await this.appStateService.setRecordPosition(false);\n    }\n\n    await Promise.all([\n      this.counterRepositoryService.save(counter),\n      this.countEventRepositoryService.save(\n        new CountEvent(\n          counter.id,\n          delta,\n          position,\n        )\n      )\n    ]);\n  }\n\n  async reset(\n    counter: Counter,\n  ) {\n    counter.count = 0;\n    await Promise.all([\n      this.counterRepositoryService.save(\n        counter\n      ),\n      this.countEventRepositoryService.save(\n        new CountEvent(\n          counter.id,\n          0,\n          {} as any,\n          CountEventType.Reset,\n        )\n      ),\n    ]);\n  }\n\n  async setLocked(\n    counter: Counter,\n    setLocked: boolean,\n  ) {\n    counter.locked = setLocked;\n    await this.counterRepositoryService.save(\n      counter\n    );\n  }\n\n  async reorder(\n    from: number,\n    to: number,\n  ) {\n    const counters = this.counterRepositoryService.allSortBySortOrder;\n    // move element in array\n    counters.splice(to, 0,\n      counters.splice(from, 1)[0]\n    );\n    // save in new order\n    await Promise.all(\n      counters.map(\n        async (counter, i) => {\n          counter.sortOrder = i;\n          await this.counterRepositoryService.save(counter);\n        }\n      )\n    );\n  }\n\n}\n"],"sourceRoot":""}