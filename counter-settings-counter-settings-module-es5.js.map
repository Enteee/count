{"version":3,"sources":["webpack:///src/app/counter-detail/counter-settings/counter-settings.module.ts","webpack:///src/app/counter-detail/counter-settings/counter-settings.page.ts","webpack:///src/app/counter-detail/counter-settings/counter-settings.page.html","webpack:///src/app/guards/unsaved-changes/unsaved-changes.guard.ts","webpack:///src/app/services/counter.service.ts"],"names":["routes","path","component","canDeactivate","CounterSettingsPageModule","forChild","imports","declarations","CounterSettingsPage","router","route","counterRepositoryService","counterService","appStateService","counter","snapshot","data","appState","positiveWrapAround","min","positiveWrapAroundActive","negativeWrapAround","negativeWrapAroundActive","counterSettingsForm","title","plusCount","minusCount","vibrate","locked","focusTitle","paramMap","get","setTimeout","titleElement","setFocus","patchValue","valid","value","save","Object","assign","reset","navigate","formControlName","clampValue","clampFunction","Math","delete","submit","increment","clamp","deleteCounter","selector","templateUrl","styleUrls","static","UnsavedChangesGuard","alertController","state","hasUnsavedChanges","canDiscard","Promise","resolve","reject","create","header","message","buttons","text","handler","_","alert","present","providedIn","CounterService","countEventRepositoryService","positionService","vibration","newCounter","sortOrder","all","length","getByCounter","map","i","delta","count","VIBRATION_PATTERN_POSITIVE","VIBRATION_PATTERN_NEGATIVE","position","getPosition","setRecordPosition","id","Reset","setLocked","from","to","counters","allSortBySortOrder","splice","randomDate","start","end","Date","getTime","random","round","Change"],"mappings":"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","file":"counter-settings-counter-settings-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { NotImplementedModule } from '../../not-implemented/not-implemented.module';\n\nimport { UnsavedChangesGuard } from '../../guards/unsaved-changes/unsaved-changes.guard';\n\n\nimport { CounterSettingsPage } from './counter-settings.page';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CounterSettingsPage,\n    canDeactivate: [\n      UnsavedChangesGuard,\n    ],\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n    NotImplementedModule,\n  ],\n  declarations: [CounterSettingsPage]\n})\nexport class CounterSettingsPageModule {}\n","import { Component, OnInit, AfterViewInit, ViewChild, ElementRef } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\n\nimport { HasUnsavedChanges } from '../../guards/unsaved-changes/unsaved-changes.guard';\n\nimport { Counter } from '../../models/counter';\nimport { CounterRepositoryService } from '../../models/counter-repository.service';\nimport { CounterService } from '../../services/counter.service';\n\nimport { AppState } from '../../models/app-state';\nimport { AppStateService } from '../../services/app-state.service';\n\ntype ClampFunction = 'max' | 'min';\n\n@Component({\n  selector: 'app-counter-settings',\n  templateUrl: './counter-settings.page.html',\n  styleUrls: ['./counter-settings.page.scss'],\n})\nexport class CounterSettingsPage implements OnInit, AfterViewInit, HasUnsavedChanges {\n\n  counter: Counter;\n  appState: AppState;\n  counterSettingsForm: FormGroup;\n  @ViewChild('titleInput', {static: true}) titleElement;\n\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private counterRepositoryService: CounterRepositoryService,\n    private counterService: CounterService,\n    private appStateService: AppStateService,\n  ) {}\n\n  ngOnInit() {\n    this.counter = this.route.snapshot.data.counter;\n    this.appState = this.appStateService.appState;\n\n    // enable disable input boxed based on checkbox\n    // TODO: this should become a component\n    const positiveWrapAround = new FormControl(\n      this.counter.positiveWrapAround,\n      [\n        Validators.min(1)\n      ]\n    );\n    const positiveWrapAroundActive = new FormControl(\n      this.counter.positiveWrapAroundActive,\n      [\n      ]\n    );\n    const negativeWrapAround = new FormControl(\n      -this.counter.negativeWrapAround,\n      [\n        Validators.min(1)\n      ]\n    );\n    const negativeWrapAroundActive = new FormControl(\n      this.counter.negativeWrapAroundActive,\n      [\n      ]\n    );\n\n    this.counterSettingsForm = new FormGroup({\n      title : new FormControl(\n        this.counter.title,\n        [\n        ]\n      ),\n      plusCount : new FormControl(\n        this.counter.plusCount,\n        [\n          Validators.min(0)\n        ]\n      ),\n      minusCount : new FormControl(\n        -this.counter.minusCount,\n        [\n          Validators.min(0)\n        ]\n      ),\n      positiveWrapAround,\n      positiveWrapAroundActive,\n      negativeWrapAround,\n      negativeWrapAroundActive,\n      vibrate : new FormControl(\n        this.counter.vibrate,\n      ),\n      locked : new FormControl(\n        this.counter.locked,\n      ),\n    });\n\n  }\n\n  async ngAfterViewInit() {\n    const focusTitle = this.route.snapshot.paramMap.get('focusTitle');\n    if (focusTitle) {\n      /*\n       * TODO: Wohaaa this is ugly, but seems to be the only working solution..\n       * cmon angular, implement this focus on element ref thing already!\n       *\n       * Discussion on ionic discourse:\n       * https://forum.ionicframework.com/t/setting-focus-to-an-input-in-ionic/62789/56\n       * Angular pull request:\n       * https://github.com/angular/angular/issues/31133\n       */\n      setTimeout(async () => {\n        await this.titleElement.setFocus();\n        this.counterSettingsForm.patchValue({\n          title: '',\n        });\n      }, 200);\n    }\n  }\n\n  async submit() {\n\n    // only submit if valid\n    if (!this.counterSettingsForm.valid) {\n      return;\n    }\n\n    this.counterSettingsForm.value.minusCount = -this.counterSettingsForm.value.minusCount;\n    this.counterSettingsForm.value.negativeWrapAround = -this.counterSettingsForm.value.negativeWrapAround;\n\n    await this.counterRepositoryService.save(\n      Object.assign(\n        this.counter,\n        this.counterSettingsForm.value\n      )\n    );\n  }\n\n  hasUnsavedChanges(): boolean {\n    return !this.counterSettingsForm.valid;\n  }\n\n  async reset() {\n    await this.counterService.reset(this.counter);\n    this.router.navigate([\n      '/counters',\n    ]);\n  }\n\n  check(\n    formControlName: string,\n  ) {\n    this.counterSettingsForm.patchValue({\n      [formControlName]: true,\n    });\n  }\n\n  increment(\n    formControlName: string,\n  ) {\n    let value = this.counterSettingsForm.get(formControlName).value;\n    if (value === null) {\n      value = -1;\n    }\n    this.counterSettingsForm.patchValue({\n      [formControlName]: value + 1,\n    });\n  }\n\n\n  clamp(\n    formControlName: string,\n    clampValue: number = 0,\n    clampFunction = ('max' as ClampFunction),\n  ) {\n    const value = this.counterSettingsForm.get(formControlName).value;\n    if (value !== null) {\n      this.counterSettingsForm.patchValue({\n        [formControlName]: Math[clampFunction](clampValue, value)\n      });\n    }\n  }\n\n  async deleteCounter() {\n    // We want to make give the user the impression that this\n    // operation is very quick, so we first navigate away.\n    this.router.navigate([\n      '/counters',\n    ]);\n    await this.counterService.delete(this.counter);\n  }\n\n}\n\n","<ion-content>\n  <form\n    [formGroup]=\"counterSettingsForm\"\n    (ngSubmit)=\"submit()\"\n    (ionChange)=\"submit()\"\n  >\n      <ion-list>\n\n          <ion-list-header>\n            <ion-label>Title</ion-label>\n          </ion-list-header>\n          <ion-item>\n            <ion-input\n              required\n              formControlName=\"title\"\n              type=\"text\"\n              placeholder=\"my Counter\"\n              class=\"title-input\"\n              #titleInput\n            ></ion-input>\n          </ion-item>\n\n          <ion-list-header>\n            <ion-label>Plus Count</ion-label>\n          </ion-list-header>\n          <ion-item>\n\n            <ion-icon\n              slot=\"start\"\n              name=\"add\"\n              (click)=\"increment('plusCount')\"\n            ></ion-icon>\n\n            <ion-input\n              required\n              formControlName=\"plusCount\"\n              type=\"number\"\n              placeholder=\"0\"\n              (ionChange)=\"clamp('plusCount')\"\n            >\n            </ion-input>\n\n          </ion-item>\n\n          <ion-list-header>\n            <ion-label>Minus Count</ion-label>\n          </ion-list-header>\n          <ion-item>\n\n            <ion-icon\n              slot=\"start\"\n              name=\"remove\"\n              (click)=\"increment('minusCount')\"\n            ></ion-icon>\n\n            <ion-input\n              required\n              formControlName=\"minusCount\"\n              type=\"number\"\n              placeholder=\"0\"\n              (ionChange)=\"clamp('minusCount')\"\n            >\n            </ion-input>\n          </ion-item>\n\n          <ion-list-header>\n            <ion-label>Positive Wraparound</ion-label>\n          </ion-list-header>\n          <ion-item>\n\n            <ion-icon\n              slot=\"start\"\n              name=\"add\"\n              (click)=\"increment('positiveWrapAround')\"\n            >\n            </ion-icon>\n\n            <ion-input\n              required\n              formControlName=\"positiveWrapAround\"\n              type=\"number\"\n              placeholder=\"0\"\n              (ionChange)=\"\n                clamp('positiveWrapAround', 1);\n                check('positiveWrapAroundActive');\n              \"\n            >\n            </ion-input>\n\n            <ion-checkbox\n              slot=\"end\"\n              formControlName=\"positiveWrapAroundActive\"\n            >\n            </ion-checkbox>\n\n          </ion-item>\n\n          <ion-list-header>\n            <ion-label>Negative Wraparound</ion-label>\n          </ion-list-header>\n          <ion-item>\n\n            <ion-icon\n              slot=\"start\"\n              name=\"remove\"\n              (click)=\"increment('negativeWrapAround')\"\n            >\n            </ion-icon>\n\n            <ion-input\n              required\n              formControlName=\"negativeWrapAround\"\n              type=\"number\"\n              placeholder=\"0\"\n              (ionChange)=\"\n                clamp('negativeWrapAround', 1);\n                check('negativeWrapAroundActive');\n              \"\n            >\n            </ion-input>\n\n            <ion-checkbox\n              slot=\"end\"\n              formControlName=\"negativeWrapAroundActive\"\n            >\n            </ion-checkbox>\n\n          </ion-item>\n\n          <ion-item\n            [hidden]=\"!appState.vibrate\"\n            class=\"vibrate-checkbox\"\n          >\n            <ion-icon slot=\"start\" name=\"pulse\"></ion-icon>\n            <ion-label>Vibrate</ion-label>\n            <ion-checkbox\n              slot=\"end\"\n              formControlName=\"vibrate\"\n            >\n            </ion-checkbox>\n          </ion-item>\n\n          <ion-item>\n            <ion-icon\n              slot=\"start\"\n              name=\"{{ (counter.locked) ? 'lock-closed-outline' : 'lock-open-outline' }}\"\n            ></ion-icon>\n            <ion-label>Locked</ion-label>\n            <ion-checkbox\n              slot=\"end\"\n              formControlName=\"locked\"\n            >\n            </ion-checkbox>\n          </ion-item>\n\n          <ion-item-sliding>\n\n            <ion-item>\n              <ion-icon slot=\"start\" name=\"trash\"></ion-icon>\n              <ion-label>Delete</ion-label>\n              <ion-icon slot=\"end\" name=\"arrow-back\"></ion-icon>\n            </ion-item>\n            <ion-item-options side=\"end\">\n              <ion-item-option\n                color=\"danger\"\n                (click)=\"deleteCounter()\"\n              >\n                <ion-icon slot=\"icon-only\" name=\"trash\"></ion-icon>\n              </ion-item-option>\n            </ion-item-options>\n\n          </ion-item-sliding>\n\n      </ion-list>\n\n      <ion-grid>\n\n        <ion-row>\n          <ion-col>\n            <ion-button\n              size=\"large\"\n              expand=\"full\"\n              color=\"medium\"\n              appNotImplemented description=\"Convert to binary counter\" issueId=\"13\" on=\"click\"\n            >\n              <ion-icon name=\"sync\"></ion-icon>\n              Make binary\n            </ion-button>\n          </ion-col>\n        </ion-row>\n\n        <ion-row>\n          <ion-col>\n\n            <ion-button\n              size=\"large\"\n              expand=\"full\"\n              appNotImplemented description=\"Add counter widget to home screen\" issueId=\"2\" on=\"click\"\n            >\n              <ion-icon name=\"phone-portrait\"></ion-icon>\n              To Home Screen\n            </ion-button>\n\n          </ion-col>\n        </ion-row>\n\n        <ion-row>\n          <ion-col>\n            <ion-button\n              size=\"large\"\n              expand=\"full\"\n              color=\"warning\"\n              (click)=\"reset()\"\n            >\n              <ion-icon name=\"refresh\"></ion-icon>\n              Reset\n            </ion-button>\n          </ion-col>\n        </ion-row>\n\n      </ion-grid>\n\n  </form>\n</ion-content>\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, CanDeactivate } from '@angular/router';\nimport { AlertController } from '@ionic/angular';\nimport { Observable } from 'rxjs';\n\nexport interface HasUnsavedChanges {\n  hasUnsavedChanges: () => Observable<boolean> | Promise<boolean> | boolean;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UnsavedChangesGuard implements CanDeactivate<HasUnsavedChanges> {\n  constructor(public alertController: AlertController) {}\n\n  async canDeactivate(component: HasUnsavedChanges,\n                      route: ActivatedRouteSnapshot,\n                      state: RouterStateSnapshot) {\n\n    if (!component.hasUnsavedChanges()) {\n      return true;\n    }\n\n    return await this.canDiscard();\n  }\n\n  /**\n   * Ask the user if they want to discard unsaved changes\n   */\n  canDiscard(): Promise<boolean> {\n    return new Promise(async (resolve, reject) => {\n      const alert = await this.alertController.create({\n          header: 'Unsaved Changes',\n          message: 'You are trying to leave a page which has unsaved changes',\n          buttons: [\n            {\n              text: 'Leave',\n              handler: _ => resolve(true)\n            },\n            {\n              text: 'Stay',\n              handler: _ => resolve(false)\n            }\n          ],\n      });\n      await alert.present();\n    });\n  }\n\n}\n\n","import { Injectable } from '@angular/core';\n\nimport { Geolocation } from '@ionic-native/geolocation/ngx';\nimport { Vibration } from '@ionic-native/vibration/ngx';\n\nimport { Counter } from '../models/counter';\nimport { CounterRepositoryService } from '../models/counter-repository.service';\n\nimport { CountEvent, CountEventType } from '../models/count-event';\nimport { CountEventRepositoryService } from '../models/count-event-repository.service';\n\nimport { Position } from '../models/count-event';\nimport { PositionService } from './position.service';\n\nimport { AppStateService } from './app-state.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CounterService {\n\n  static readonly VIBRATION_PATTERN_POSITIVE = [30];\n  static readonly VIBRATION_PATTERN_NEGATIVE = [30, 30, 30];\n\n  constructor(\n    private counterRepositoryService: CounterRepositoryService,\n    private countEventRepositoryService: CountEventRepositoryService,\n    private positionService: PositionService,\n    private appStateService: AppStateService,\n    private vibration: Vibration,\n  ) {}\n\n  get allSortBySortOrder(): Array<Counter> {\n    return this.counterRepositoryService.allSortBySortOrder;\n  }\n\n  async addCounter() {\n    const newCounter = new Counter();\n    // add counter to bottom\n    newCounter.sortOrder = this.counterRepositoryService.all.length + 1;\n    await this.counterRepositoryService.save(newCounter);\n    return newCounter;\n  }\n\n  async delete(counter: Counter) {\n    // first delete the counter: this is so that the ui element disappers\n    // quicker which should be create better user experience.\n    await this.counterRepositoryService.delete(counter);\n\n    // then, delete all events of this counter\n    await Promise.all(\n      this.countEventRepositoryService.getByCounter(counter).map(\n        (i) => this.countEventRepositoryService.delete(i)\n      )\n    );\n  }\n\n  async count(\n    counter: Counter,\n    delta: number,\n  ) {\n    counter.count += delta;\n\n    // vibrate\n    if (\n      this.appStateService.appState.vibrate\n      && counter.vibrate\n    ) {\n      this.vibration.vibrate(\n        (delta > 0) ?\n          CounterService.VIBRATION_PATTERN_POSITIVE :\n          CounterService.VIBRATION_PATTERN_NEGATIVE\n      );\n    }\n\n    // apply positive and negative wraparounds\n    if (\n      counter.positiveWrapAroundActive\n      && counter.count > counter.positiveWrapAround\n    ) {\n      counter.count = counter.count % counter.positiveWrapAround;\n    }\n\n    if (\n      counter.negativeWrapAroundActive\n      && counter.count < counter.negativeWrapAround\n    ) {\n      counter.count = counter.count % counter.negativeWrapAround;\n    }\n\n    let position = null;\n    try {\n      position = await this.positionService.getPosition();\n    } catch (e) {\n      // user does not allow posiiton recording or something unexpected happened\n      await this.appStateService.setRecordPosition(false);\n    }\n\n    await Promise.all([\n      this.counterRepositoryService.save(counter),\n      this.countEventRepositoryService.save(\n        new CountEvent(\n          counter.id,\n          delta,\n          position,\n        )\n      )\n    ]);\n  }\n\n  async reset(\n    counter: Counter,\n  ) {\n    counter.count = 0;\n    await Promise.all([\n      this.counterRepositoryService.save(\n        counter\n      ),\n      this.countEventRepositoryService.save(\n        new CountEvent(\n          counter.id,\n          0,\n          {} as any,\n          CountEventType.Reset,\n        )\n      ),\n    ]);\n  }\n\n  async setLocked(\n    counter: Counter,\n    setLocked: boolean,\n  ) {\n    counter.locked = setLocked;\n    await this.counterRepositoryService.save(\n      counter\n    );\n  }\n\n  async reorder(\n    from: number,\n    to: number,\n  ) {\n    const counters = this.counterRepositoryService.allSortBySortOrder;\n    // move element in array\n    counters.splice(to, 0,\n      counters.splice(from, 1)[0]\n    );\n    // save in new order\n    await Promise.all(\n      counters.map(\n        async (counter, i) => {\n          counter.sortOrder = i;\n          await this.counterRepositoryService.save(counter);\n        }\n      )\n    );\n  }\n\n  /**\n   * For development purposes only\n   */\n  async addRandomCountEvent(\n    counter: Counter,\n  ) {\n    const delta = Math.round(Math.random() * 10 % 10 - 5);\n    counter.count += delta;\n\n    function randomDate(start, end) {\n      return new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));\n    }\n\n\n    await Promise.all([\n      this.counterRepositoryService.save(counter),\n      this.countEventRepositoryService.save(\n        new CountEvent(\n          counter.id,\n          delta,\n          null,\n          CountEventType.Change,\n          randomDate(new Date(2012, 0, 1), new Date()),\n        )\n      )\n    ]);\n  }\n\n}\n"]}