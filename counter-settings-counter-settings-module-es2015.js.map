{"version":3,"sources":["./src/app/counter-detail/counter-settings/counter-settings.module.ts","./src/app/counter-detail/counter-settings/counter-settings.page.ts","./src/app/counter-detail/counter-settings/counter-settings.page.html","./src/app/guards/unsaved-changes/unsaved-changes.guard.ts","./src/app/services/counter.service.ts"],"names":[],"mappings":"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","file":"counter-settings-counter-settings-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { NotImplementedModule } from '../../not-implemented/not-implemented.module';\n\nimport { UnsavedChangesGuard } from '../../guards/unsaved-changes/unsaved-changes.guard';\n\n\nimport { CounterSettingsPage } from './counter-settings.page';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CounterSettingsPage,\n    canDeactivate: [\n      UnsavedChangesGuard,\n    ],\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n    NotImplementedModule,\n  ],\n  declarations: [CounterSettingsPage]\n})\nexport class CounterSettingsPageModule {}\n","import { Component, OnInit, AfterViewInit, ViewChild, ElementRef } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\n\nimport { HasUnsavedChanges } from '../../guards/unsaved-changes/unsaved-changes.guard';\n\nimport { Counter } from '../../models/counter';\nimport { CounterRepositoryService } from '../../models/counter-repository.service';\nimport { CounterService } from '../../services/counter.service';\n\nimport { AppState } from '../../models/app-state';\nimport { AppStateService } from '../../services/app-state.service';\n\ntype ClampFunction = 'max' | 'min';\n\n@Component({\n  selector: 'app-counter-settings',\n  templateUrl: './counter-settings.page.html',\n  styleUrls: ['./counter-settings.page.scss'],\n})\nexport class CounterSettingsPage implements OnInit, AfterViewInit, HasUnsavedChanges {\n\n  counter: Counter;\n  appState: AppState;\n  counterSettingsForm: FormGroup;\n  @ViewChild('titleInput', {static: true}) titleElement;\n\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private counterRepositoryService: CounterRepositoryService,\n    private counterService: CounterService,\n    private appStateService: AppStateService,\n  ) {}\n\n  ngOnInit() {\n    this.counter = this.route.snapshot.data.counter;\n    this.appState = this.appStateService.appState;\n\n    // enable disable input boxed based on checkbox\n    // TODO: this should become a component\n    const positiveWrapAround = new FormControl(\n      this.counter.positiveWrapAround,\n      [\n        Validators.min(1)\n      ]\n    );\n    const positiveWrapAroundActive = new FormControl(\n      this.counter.positiveWrapAroundActive,\n      [\n      ]\n    );\n    const negativeWrapAround = new FormControl(\n      -this.counter.negativeWrapAround,\n      [\n        Validators.min(1)\n      ]\n    );\n    const negativeWrapAroundActive = new FormControl(\n      this.counter.negativeWrapAroundActive,\n      [\n      ]\n    );\n\n    this.counterSettingsForm = new FormGroup({\n      title : new FormControl(\n        this.counter.title,\n        [\n        ]\n      ),\n      plusCount : new FormControl(\n        this.counter.plusCount,\n        [\n          Validators.min(0)\n        ]\n      ),\n      minusCount : new FormControl(\n        -this.counter.minusCount,\n        [\n          Validators.min(0)\n        ]\n      ),\n      positiveWrapAround,\n      positiveWrapAroundActive,\n      negativeWrapAround,\n      negativeWrapAroundActive,\n      vibrate : new FormControl(\n        this.counter.vibrate,\n      ),\n      locked : new FormControl(\n        this.counter.locked,\n      ),\n    });\n\n  }\n\n  async ngAfterViewInit() {\n    const focusTitle = this.route.snapshot.paramMap.get('focusTitle');\n    if (focusTitle) {\n      /*\n       * TODO: Wohaaa this is ugly, but seems to be the only working solution..\n       * cmon angular, implement this focus on element ref thing already!\n       *\n       * Discussion on ionic discourse:\n       * https://forum.ionicframework.com/t/setting-focus-to-an-input-in-ionic/62789/56\n       * Angular pull request:\n       * https://github.com/angular/angular/issues/31133\n       */\n      setTimeout(async () => {\n        await this.titleElement.setFocus();\n        this.counterSettingsForm.patchValue({\n          title: '',\n        });\n      }, 200);\n    }\n  }\n\n  async submit() {\n\n    // only submit if valid\n    if (!this.counterSettingsForm.valid) {\n      return;\n    }\n\n    this.counterSettingsForm.value.minusCount = -this.counterSettingsForm.value.minusCount;\n    this.counterSettingsForm.value.negativeWrapAround = -this.counterSettingsForm.value.negativeWrapAround;\n\n    await this.counterRepositoryService.save(\n      Object.assign(\n        this.counter,\n        this.counterSettingsForm.value\n      )\n    );\n  }\n\n  hasUnsavedChanges(): boolean {\n    return !this.counterSettingsForm.valid;\n  }\n\n  check(\n    formControlName: string,\n  ) {\n    this.counterSettingsForm.patchValue({\n      [formControlName]: true,\n    });\n  }\n\n  increment(\n    formControlName: string,\n  ) {\n    let value = this.counterSettingsForm.get(formControlName).value;\n    if (value === null) {\n      value = -1;\n    }\n    this.counterSettingsForm.patchValue({\n      [formControlName]: value + 1,\n    });\n  }\n\n\n  clamp(\n    formControlName: string,\n    clampValue: number = 0,\n    clampFunction = ('max' as ClampFunction),\n  ) {\n    const value = this.counterSettingsForm.get(formControlName).value;\n    if (value !== null) {\n      this.counterSettingsForm.patchValue({\n        [formControlName]: Math[clampFunction](clampValue, value)\n      });\n    }\n  }\n\n}\n\n","<ion-content>\n  <form\n    [formGroup]=\"counterSettingsForm\"\n    (ngSubmit)=\"submit()\"\n    (ionChange)=\"submit()\"\n  >\n      <ion-list>\n\n          <ion-list-header>\n            <ion-label>Title</ion-label>\n          </ion-list-header>\n          <ion-item>\n            <ion-input\n              required\n              formControlName=\"title\"\n              type=\"text\"\n              placeholder=\"my Counter\"\n              class=\"title-input\"\n              #titleInput\n            ></ion-input>\n          </ion-item>\n\n          <ion-list-header>\n            <ion-label>Plus Count</ion-label>\n          </ion-list-header>\n          <ion-item>\n\n            <ion-icon\n              slot=\"start\"\n              name=\"add\"\n              (click)=\"increment('plusCount')\"\n            ></ion-icon>\n\n            <ion-input\n              required\n              formControlName=\"plusCount\"\n              type=\"number\"\n              placeholder=\"0\"\n              (ionChange)=\"clamp('plusCount')\"\n            >\n            </ion-input>\n\n          </ion-item>\n\n          <ion-list-header>\n            <ion-label>Minus Count</ion-label>\n          </ion-list-header>\n          <ion-item>\n\n            <ion-icon\n              slot=\"start\"\n              name=\"remove\"\n              (click)=\"increment('minusCount')\"\n            ></ion-icon>\n\n            <ion-input\n              required\n              formControlName=\"minusCount\"\n              type=\"number\"\n              placeholder=\"0\"\n              (ionChange)=\"clamp('minusCount')\"\n            >\n            </ion-input>\n          </ion-item>\n\n          <ion-list-header>\n            <ion-label>Positive Wraparound</ion-label>\n          </ion-list-header>\n          <ion-item>\n\n            <ion-icon\n              slot=\"start\"\n              name=\"add\"\n              (click)=\"increment('positiveWrapAround')\"\n            >\n            </ion-icon>\n\n            <ion-input\n              required\n              formControlName=\"positiveWrapAround\"\n              type=\"number\"\n              placeholder=\"0\"\n              (ionChange)=\"\n                clamp('positiveWrapAround', 1);\n                check('positiveWrapAroundActive');\n              \"\n            >\n            </ion-input>\n\n            <ion-checkbox\n              slot=\"end\"\n              formControlName=\"positiveWrapAroundActive\"\n            >\n            </ion-checkbox>\n\n          </ion-item>\n\n          <ion-list-header>\n            <ion-label>Negative Wraparound</ion-label>\n          </ion-list-header>\n          <ion-item>\n\n            <ion-icon\n              slot=\"start\"\n              name=\"remove\"\n              (click)=\"increment('negativeWrapAround')\"\n            >\n            </ion-icon>\n\n            <ion-input\n              required\n              formControlName=\"negativeWrapAround\"\n              type=\"number\"\n              placeholder=\"0\"\n              (ionChange)=\"\n                clamp('negativeWrapAround', 1);\n                check('negativeWrapAroundActive');\n              \"\n            >\n            </ion-input>\n\n            <ion-checkbox\n              slot=\"end\"\n              formControlName=\"negativeWrapAroundActive\"\n            >\n            </ion-checkbox>\n\n          </ion-item>\n\n          <ion-item\n            [hidden]=\"!appState.vibrate\"\n            class=\"vibrate-checkbox\"\n          >\n            <ion-icon slot=\"start\" name=\"pulse\"></ion-icon>\n            <ion-label>Vibrate</ion-label>\n            <ion-checkbox\n              slot=\"end\"\n              formControlName=\"vibrate\"\n            >\n            </ion-checkbox>\n          </ion-item>\n\n          <ion-item>\n            <ion-icon\n              slot=\"start\"\n              name=\"{{ (counter.locked) ? 'lock-closed-outline' : 'lock-open-outline' }}\"\n            ></ion-icon>\n            <ion-label>Locked</ion-label>\n            <ion-checkbox\n              slot=\"end\"\n              formControlName=\"locked\"\n            >\n            </ion-checkbox>\n          </ion-item>\n\n      </ion-list>\n\n      <ion-button\n        size=\"large\"\n        expand=\"full\"\n        appNotImplemented description=\"Add counter widget to home screen\" issueId=\"2\" on=\"click\"\n      >\n        <ion-icon name=\"phone-portrait\"></ion-icon>\n        To Home Screen\n      </ion-button>\n\n  </form>\n</ion-content>\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, CanDeactivate } from '@angular/router';\nimport { AlertController } from '@ionic/angular';\nimport { Observable } from 'rxjs';\n\nexport interface HasUnsavedChanges {\n  hasUnsavedChanges: () => Observable<boolean> | Promise<boolean> | boolean;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UnsavedChangesGuard implements CanDeactivate<HasUnsavedChanges> {\n  constructor(public alertController: AlertController) {}\n\n  async canDeactivate(component: HasUnsavedChanges,\n                      route: ActivatedRouteSnapshot,\n                      state: RouterStateSnapshot) {\n\n    if (!component.hasUnsavedChanges()) {\n      return true;\n    }\n\n    return await this.canDiscard();\n  }\n\n  /**\n   * Ask the user if they want to discard unsaved changes\n   */\n  canDiscard(): Promise<boolean> {\n    return new Promise(async (resolve, reject) => {\n      const alert = await this.alertController.create({\n          header: 'Unsaved Changes',\n          message: 'You are trying to leave a page which has unsaved changes',\n          buttons: [\n            {\n              text: 'Leave',\n              handler: _ => resolve(true)\n            },\n            {\n              text: 'Stay',\n              handler: _ => resolve(false)\n            }\n          ],\n      });\n      await alert.present();\n    });\n  }\n\n}\n\n","import { Injectable } from '@angular/core';\n\nimport { Geolocation } from '@ionic-native/geolocation/ngx';\nimport { Vibration } from '@ionic-native/vibration/ngx';\n\nimport { Counter } from '../models/counter';\nimport { CounterRepositoryService } from '../models/counter-repository.service';\n\nimport { CountEvent, CountEventType } from '../models/count-event';\nimport { CountEventRepositoryService } from '../models/count-event-repository.service';\n\nimport { Position } from '../models/count-event';\nimport { PositionService } from './position.service';\n\nimport { AppStateService } from './app-state.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CounterService {\n\n  static readonly VIBRATION_PATTERN_POSITIVE = [30];\n  static readonly VIBRATION_PATTERN_NEGATIVE = [30, 30, 30];\n\n  constructor(\n    private counterRepositoryService: CounterRepositoryService,\n    private countEventRepositoryService: CountEventRepositoryService,\n    private positionService: PositionService,\n    private appStateService: AppStateService,\n    private vibration: Vibration,\n  ) {}\n\n  get allSortBySortOrder(): Array<Counter> {\n    return this.counterRepositoryService.allSortBySortOrder;\n  }\n\n  async addCounter() {\n    const newCounter = new Counter();\n    // add counter to bottom\n    newCounter.sortOrder = this.counterRepositoryService.all.length + 1;\n    await this.counterRepositoryService.save(newCounter);\n    return newCounter;\n  }\n\n  async delete(counter: Counter) {\n    // first delete the counter: this is so that the ui element disappers\n    // quicker which should be create better user experience.\n    await this.counterRepositoryService.delete(counter);\n\n    // then, delete all events of this counter\n    await Promise.all(\n      this.countEventRepositoryService.getByCounter(counter).map(\n        (i) => this.countEventRepositoryService.delete(i)\n      )\n    );\n  }\n\n  async count(\n    counter: Counter,\n    delta: number,\n  ) {\n    counter.count += delta;\n\n    // vibrate\n    if (\n      this.appStateService.appState.vibrate\n      && counter.vibrate\n    ) {\n      this.vibration.vibrate(\n        (delta > 0) ?\n          CounterService.VIBRATION_PATTERN_POSITIVE :\n          CounterService.VIBRATION_PATTERN_NEGATIVE\n      );\n    }\n\n    // apply positive and negative wraparounds\n    if (\n      counter.positiveWrapAroundActive\n      && counter.count > counter.positiveWrapAround\n    ) {\n      counter.count = counter.count % counter.positiveWrapAround;\n    }\n\n    if (\n      counter.negativeWrapAroundActive\n      && counter.count < counter.negativeWrapAround\n    ) {\n      counter.count = counter.count % counter.negativeWrapAround;\n    }\n\n    let position = null;\n    try {\n      position = await this.positionService.getPosition();\n    } catch (e) {\n      // user does not allow posiiton recording or something unexpected happened\n      await this.appStateService.setRecordPosition(false);\n    }\n\n    await Promise.all([\n      this.counterRepositoryService.save(counter),\n      this.countEventRepositoryService.save(\n        new CountEvent(\n          counter.id,\n          delta,\n          position,\n        )\n      )\n    ]);\n  }\n\n  async reset(\n    counter: Counter,\n  ) {\n    counter.count = 0;\n    await Promise.all([\n      this.counterRepositoryService.save(\n        counter\n      ),\n      this.countEventRepositoryService.save(\n        new CountEvent(\n          counter.id,\n          0,\n          {} as any,\n          CountEventType.Reset,\n        )\n      ),\n    ]);\n  }\n\n  async setLocked(\n    counter: Counter,\n    setLocked: boolean,\n  ) {\n    counter.locked = setLocked;\n    await this.counterRepositoryService.save(\n      counter\n    );\n  }\n\n  async reorder(\n    from: number,\n    to: number,\n  ) {\n    const counters = this.counterRepositoryService.allSortBySortOrder;\n    // move element in array\n    counters.splice(to, 0,\n      counters.splice(from, 1)[0]\n    );\n    // save in new order\n    await Promise.all(\n      counters.map(\n        async (counter, i) => {\n          counter.sortOrder = i;\n          await this.counterRepositoryService.save(counter);\n        }\n      )\n    );\n  }\n\n  /**\n   * For development purposes only\n   */\n  async addRandomCountEvent(\n    counter: Counter,\n  ) {\n    const delta = Math.round(Math.random() * 10 % 10 - 5);\n    counter.count += delta;\n\n    function randomDate(start, end) {\n      return new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));\n    }\n\n\n    await Promise.all([\n      this.counterRepositoryService.save(counter),\n      this.countEventRepositoryService.save(\n        new CountEvent(\n          counter.id,\n          delta,\n          null,\n          CountEventType.Change,\n          randomDate(new Date(2012, 0, 1), new Date()),\n        )\n      )\n    ]);\n  }\n\n}\n"],"sourceRoot":"webpack:///"}