{"version":3,"sources":["./node_modules/@ionic/core/dist/esm/ios.transition-179652bb.js"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA4B;AACE;AACC;AACgC;AAC9B;AAC4B;;AAE7D;AACA;AACA,qCAAqC,QAAQ;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,wBAAwB,UAAU,uBAAuB;AACrH;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,kDAAkD,qBAAqB,IAAI,uBAAuB,oBAAoB;AAC/H,SAAS,kDAAkD,mBAAmB,IAAI,uBAAuB;AACzG;AACA;AACA,SAAS,kDAAkD,mBAAmB,IAAI,uBAAuB,kBAAkB;AAC3H,SAAS,0BAA0B;AACnC,SAAS,kDAAkD,qBAAqB,IAAI,uBAAuB;AAC3G;AACA;AACA;AACA,SAAS,kDAAkD,eAAe,IAAI,uBAAuB,oBAAoB;AACzH,SAAS,kDAAkD,eAAe,IAAI,uBAAuB;AACrG;AACA;AACA,SAAS,kDAAkD,eAAe,IAAI,uBAAuB,kBAAkB;AACvH,SAAS,oDAAoD,eAAe,IAAI,uBAAuB,oBAAoB;AAC3H,SAAS,kDAAkD,eAAe,IAAI,uBAAuB;AACrG;AACA;AACA,4CAA4C,gEAAe;AAC3D,4CAA4C,gEAAe;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,cAAc;AAC7C,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,+BAA+B,cAAc;AAC7C,KAAK;AACL;AACA;AACA;AACA;AACA,sDAAsD,mBAAmB,UAAU,kBAAkB;AACrG;AACA;AACA;AACA,SAAS,kDAAkD,gBAAgB,IAAI,sBAAsB,qBAAqB;AAC1H,SAAS,0BAA0B;AACnC,SAAS,qDAAqD,sBAAsB;AACpF;AACA;AACA,SAAS,wDAAwD,sBAAsB,kBAAkB;AACzG,SAAS,0BAA0B;AACnC,SAAS,kDAAkD,gBAAgB,IAAI,sBAAsB;AACrG;AACA;AACA;AACA,sCAAsC,gEAAe;AACrD;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,SAAS;AACxC;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,gEAAe;AAC7C,yCAAyC,gEAAe;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,gEAAe;AACrD;AACA;AACA;AACA;AACA,qIAAqI;AACrI;AACA;AACA,2DAA2D;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,SAAS,kBAAkB,OAAO;AACrF;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,UAAU,kBAAkB,OAAO;AACtF;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,gEAAe;AAChE,gDAAgD,gEAAe;AAC/D,iDAAiD,gEAAe;AAChE;AACA;AACA,mCAAmC,iCAAiC;AACpE,kCAAkC,2BAA2B;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,oBAAoB;AACnC;AACA,oCAAoC,gEAAe;AACnD;AACA;AACA,kCAAkC,gEAAe;AACjD,mFAAmF;AACnF,2CAA2C,gEAAe;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,yCAAyC,gEAAe;AACxD;AACA,sCAAsC,gEAAe;AACrD,yGAAyG;AACzG,uCAAuC,gEAAe;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,SAAS,kBAAkB,OAAO;AAC7F;AACA;AACA,uEAAuE,SAAS,kBAAkB,OAAO;AACzG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,UAAU,kBAAkB,OAAO;AAC9F;AACA;AACA,uEAAuE,UAAU,kBAAkB,OAAO;AAC1G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,gEAAe;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,mCAAmC,gEAAe;AAClD;AACA,wDAAwD;AACxD;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,OAAO;AAC9D,oCAAoC,4DAAiB;AACrD;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,uDAAuD,OAAO,kBAAkB,SAAS;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,gEAAe;AACnE,mDAAmD,gEAAe;AAClE,oDAAoD,gEAAe;AACnE;AACA;AACA,uCAAuC,iCAAiC;AACxE,sCAAsC,2BAA2B;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,gEAAe;AACtD;AACA,qCAAqC,gEAAe;AACpD,qFAAqF;AACrF,8CAA8C,gEAAe;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,4CAA4C,gEAAe;AAC3D;AACA;AACA;AACA;AACA,yCAAyC,gEAAe;AACxD,2GAA2G;AAC3G,0CAA0C,gEAAe;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D,OAAO;AACtE;AACA;AACA,0EAA0E,OAAO;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,gEAAe;AAClE;AACA;AACA,+DAA+D,OAAO,kBAAkB,4BAA4B;AACpH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D,OAAO,kBAAkB,SAAS;AACjG;AACA;AACA;AACA;AACA,2DAA2D,OAAO,kBAAkB,SAAS;AAC7F;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;;AAE0C","file":"ios-transition-179652bb-js-es2015.js","sourcesContent":["import './core-0a8d4d2e.js';\nimport './config-3c7f3790.js';\nimport './helpers-46f4a262.js';\nimport { c as createAnimation } from './animation-56279521.js';\nimport './constants-3c3e1099.js';\nimport { g as getIonPageElement } from './index-4e2fa3c6.js';\n\nconst DURATION = 540;\r\nconst getClonedElement = (tagName) => {\r\n    return document.querySelector(`${tagName}.ion-cloned-element`);\r\n};\r\nconst shadow = (el) => {\r\n    return el.shadowRoot || el;\r\n};\r\nconst getLargeTitle = (refEl) => {\r\n    const tabs = (refEl.tagName === 'ION-TABS') ? refEl : refEl.querySelector('ion-tabs');\r\n    const query = 'ion-header:not(.header-collapse-condense-inactive) ion-title[size=large]';\r\n    if (tabs != null) {\r\n        const activeTab = tabs.querySelector('ion-tab:not(.tab-hidden), .ion-page:not(.ion-page-hidden)');\r\n        return activeTab.querySelector(query);\r\n    }\r\n    return refEl.querySelector(query);\r\n};\r\nconst getBackButton = (refEl, backDirection) => {\r\n    const tabs = (refEl.tagName === 'ION-TABS') ? refEl : refEl.querySelector('ion-tabs');\r\n    let buttonsList = [];\r\n    if (tabs != null) {\r\n        const activeTab = tabs.querySelector('ion-tab:not(.tab-hidden), .ion-page:not(.ion-page-hidden)');\r\n        buttonsList = activeTab.querySelectorAll('ion-buttons');\r\n    }\r\n    else {\r\n        buttonsList = refEl.querySelectorAll('ion-buttons');\r\n    }\r\n    for (const buttons of buttonsList) {\r\n        const parentHeader = buttons.closest('ion-header');\r\n        const activeHeader = parentHeader && !parentHeader.classList.contains('header-collapse-condense-inactive');\r\n        const backButton = buttons.querySelector('ion-back-button');\r\n        const buttonsCollapse = buttons.classList.contains('buttons-collapse');\r\n        const startSlot = buttons.slot === 'start' || buttons.slot === '';\r\n        if (backButton !== null && startSlot && ((buttonsCollapse && activeHeader && backDirection) || !buttonsCollapse)) {\r\n            return backButton;\r\n        }\r\n    }\r\n    return null;\r\n};\r\nconst createLargeTitleTransition = (rootAnimation, rtl, backDirection, enteringEl, leavingEl) => {\r\n    const enteringBackButton = getBackButton(enteringEl, backDirection);\r\n    const leavingLargeTitle = getLargeTitle(leavingEl);\r\n    const enteringLargeTitle = getLargeTitle(enteringEl);\r\n    const leavingBackButton = getBackButton(leavingEl, backDirection);\r\n    const shouldAnimationForward = enteringBackButton !== null && leavingLargeTitle !== null && !backDirection;\r\n    const shouldAnimationBackward = enteringLargeTitle !== null && leavingBackButton !== null && backDirection;\r\n    if (shouldAnimationForward) {\r\n        const leavingLargeTitleBox = leavingLargeTitle.getBoundingClientRect();\r\n        const enteringBackButtonBox = enteringBackButton.getBoundingClientRect();\r\n        animateLargeTitle(rootAnimation, rtl, backDirection, leavingLargeTitle, leavingLargeTitleBox, enteringBackButtonBox);\r\n        animateBackButton(rootAnimation, rtl, backDirection, enteringBackButton, leavingLargeTitleBox, enteringBackButtonBox);\r\n    }\r\n    else if (shouldAnimationBackward) {\r\n        const enteringLargeTitleBox = enteringLargeTitle.getBoundingClientRect();\r\n        const leavingBackButtonBox = leavingBackButton.getBoundingClientRect();\r\n        animateLargeTitle(rootAnimation, rtl, backDirection, enteringLargeTitle, enteringLargeTitleBox, leavingBackButtonBox);\r\n        animateBackButton(rootAnimation, rtl, backDirection, leavingBackButton, enteringLargeTitleBox, leavingBackButtonBox);\r\n    }\r\n    return {\r\n        forward: shouldAnimationForward,\r\n        backward: shouldAnimationBackward\r\n    };\r\n};\r\nconst animateBackButton = (rootAnimation, rtl, backDirection, backButtonEl, largeTitleBox, backButtonBox) => {\r\n    const BACK_BUTTON_START_OFFSET = (rtl) ? `calc(100% - ${backButtonBox.right + 4}px)` : `${backButtonBox.left - 4}px`;\r\n    const START_TEXT_TRANSLATE = (rtl) ? '7px' : '-7px';\r\n    const END_TEXT_TRANSLATE = (rtl) ? '-4px' : '4px';\r\n    const ICON_TRANSLATE = (rtl) ? '-4px' : '4px';\r\n    const TEXT_ORIGIN_X = (rtl) ? 'right' : 'left';\r\n    const ICON_ORIGIN_X = (rtl) ? 'left' : 'right';\r\n    const FORWARD_TEXT_KEYFRAMES = [\r\n        { offset: 0, opacity: 0, transform: `translate3d(${START_TEXT_TRANSLATE}, ${largeTitleBox.top - 40}px, 0) scale(2.1)` },\r\n        { offset: 1, opacity: 1, transform: `translate3d(${END_TEXT_TRANSLATE}, ${backButtonBox.top - 46}px, 0) scale(1)` }\r\n    ];\r\n    const BACKWARD_TEXT_KEYFRAMES = [\r\n        { offset: 0, opacity: 1, transform: `translate3d(${END_TEXT_TRANSLATE}, ${backButtonBox.top - 46}px, 0) scale(1)` },\r\n        { offset: 0.6, opacity: 0 },\r\n        { offset: 1, opacity: 0, transform: `translate3d(${START_TEXT_TRANSLATE}, ${largeTitleBox.top - 40}px, 0) scale(2.1)` }\r\n    ];\r\n    const TEXT_KEYFRAMES = (backDirection) ? BACKWARD_TEXT_KEYFRAMES : FORWARD_TEXT_KEYFRAMES;\r\n    const FORWARD_ICON_KEYFRAMES = [\r\n        { offset: 0, opacity: 0, transform: `translate3d(${ICON_TRANSLATE}, ${backButtonBox.top - 41}px, 0) scale(0.6)` },\r\n        { offset: 1, opacity: 1, transform: `translate3d(${ICON_TRANSLATE}, ${backButtonBox.top - 46}px, 0) scale(1)` }\r\n    ];\r\n    const BACKWARD_ICON_KEYFRAMES = [\r\n        { offset: 0, opacity: 1, transform: `translate3d(${ICON_TRANSLATE}, ${backButtonBox.top - 46}px, 0) scale(1)` },\r\n        { offset: 0.2, opacity: 0, transform: `translate3d(${ICON_TRANSLATE}, ${backButtonBox.top - 41}px, 0) scale(0.6)` },\r\n        { offset: 1, opacity: 0, transform: `translate3d(${ICON_TRANSLATE}, ${backButtonBox.top - 41}px, 0) scale(0.6)` }\r\n    ];\r\n    const ICON_KEYFRAMES = (backDirection) ? BACKWARD_ICON_KEYFRAMES : FORWARD_ICON_KEYFRAMES;\r\n    const enteringBackButtonTextAnimation = createAnimation();\r\n    const enteringBackButtonIconAnimation = createAnimation();\r\n    const clonedBackButtonEl = getClonedElement('ion-back-button');\r\n    const backButtonTextEl = shadow(clonedBackButtonEl).querySelector('.button-text');\r\n    const backButtonIconEl = shadow(clonedBackButtonEl).querySelector('ion-icon');\r\n    clonedBackButtonEl.text = backButtonEl.text;\r\n    clonedBackButtonEl.mode = backButtonEl.mode;\r\n    clonedBackButtonEl.icon = backButtonEl.icon;\r\n    clonedBackButtonEl.color = backButtonEl.color;\r\n    clonedBackButtonEl.disabled = backButtonEl.disabled;\r\n    clonedBackButtonEl.style.setProperty('display', 'block');\r\n    clonedBackButtonEl.style.setProperty('position', 'fixed');\r\n    enteringBackButtonIconAnimation.addElement(backButtonIconEl);\r\n    enteringBackButtonTextAnimation.addElement(backButtonTextEl);\r\n    enteringBackButtonTextAnimation\r\n        .beforeStyles({\r\n        'transform-origin': `${TEXT_ORIGIN_X} center`\r\n    })\r\n        .beforeAddWrite(() => {\r\n        backButtonEl.style.setProperty('display', 'none');\r\n        clonedBackButtonEl.style.setProperty(TEXT_ORIGIN_X, BACK_BUTTON_START_OFFSET);\r\n    })\r\n        .afterAddWrite(() => {\r\n        backButtonEl.style.setProperty('display', '');\r\n        clonedBackButtonEl.style.setProperty('display', 'none');\r\n        clonedBackButtonEl.style.removeProperty(TEXT_ORIGIN_X);\r\n    })\r\n        .keyframes(TEXT_KEYFRAMES);\r\n    enteringBackButtonIconAnimation\r\n        .beforeStyles({\r\n        'transform-origin': `${ICON_ORIGIN_X} center`\r\n    })\r\n        .keyframes(ICON_KEYFRAMES);\r\n    rootAnimation.addAnimation([enteringBackButtonTextAnimation, enteringBackButtonIconAnimation]);\r\n};\r\nconst animateLargeTitle = (rootAnimation, rtl, backDirection, largeTitleEl, largeTitleBox, backButtonBox) => {\r\n    const TITLE_START_OFFSET = (rtl) ? `calc(100% - ${largeTitleEl.right}px)` : `${largeTitleEl.left}px`;\r\n    const START_TRANSLATE = (rtl) ? '-18px' : '18px';\r\n    const ORIGIN_X = (rtl) ? 'right' : 'left';\r\n    const BACKWARDS_KEYFRAMES = [\r\n        { offset: 0, opacity: 0, transform: `translate3d(${START_TRANSLATE}, ${backButtonBox.top - 4}px, 0) scale(0.49)` },\r\n        { offset: 0.1, opacity: 0 },\r\n        { offset: 1, opacity: 1, transform: `translate3d(0, ${largeTitleBox.top - 2}px, 0) scale(1)` }\r\n    ];\r\n    const FORWARDS_KEYFRAMES = [\r\n        { offset: 0, opacity: 0.99, transform: `translate3d(0, ${largeTitleBox.top - 2}px, 0) scale(1)` },\r\n        { offset: 0.6, opacity: 0 },\r\n        { offset: 1, opacity: 0, transform: `translate3d(${START_TRANSLATE}, ${backButtonBox.top - 4}px, 0) scale(0.5)` }\r\n    ];\r\n    const KEYFRAMES = (backDirection) ? BACKWARDS_KEYFRAMES : FORWARDS_KEYFRAMES;\r\n    const clonedTitleEl = getClonedElement('ion-title');\r\n    const clonedLargeTitleAnimation = createAnimation();\r\n    clonedTitleEl.innerText = largeTitleEl.innerText;\r\n    clonedTitleEl.size = largeTitleEl.size;\r\n    clonedTitleEl.color = largeTitleEl.color;\r\n    clonedLargeTitleAnimation.addElement(clonedTitleEl);\r\n    clonedLargeTitleAnimation\r\n        .beforeStyles({\r\n        'transform-origin': `${ORIGIN_X} center`,\r\n        'height': '46px',\r\n        'display': '',\r\n        'position': 'relative',\r\n        [ORIGIN_X]: TITLE_START_OFFSET\r\n    })\r\n        .beforeAddWrite(() => {\r\n        largeTitleEl.style.setProperty('display', 'none');\r\n    })\r\n        .afterAddWrite(() => {\r\n        largeTitleEl.style.setProperty('display', '');\r\n        clonedTitleEl.style.setProperty('display', 'none');\r\n    })\r\n        .keyframes(KEYFRAMES);\r\n    rootAnimation.addAnimation(clonedLargeTitleAnimation);\r\n};\r\nconst iosTransitionAnimation = (navEl, opts) => {\r\n    try {\r\n        const EASING = 'cubic-bezier(0.32,0.72,0,1)';\r\n        const OPACITY = 'opacity';\r\n        const TRANSFORM = 'transform';\r\n        const CENTER = '0%';\r\n        const OFF_OPACITY = 0.8;\r\n        const isRTL = navEl.ownerDocument.dir === 'rtl';\r\n        const OFF_RIGHT = isRTL ? '-99.5%' : '99.5%';\r\n        const OFF_LEFT = isRTL ? '33%' : '-33%';\r\n        const enteringEl = opts.enteringEl;\r\n        const leavingEl = opts.leavingEl;\r\n        const backDirection = (opts.direction === 'back');\r\n        const contentEl = enteringEl.querySelector(':scope > ion-content');\r\n        const headerEls = enteringEl.querySelectorAll(':scope > ion-header > *:not(ion-toolbar), :scope > ion-footer > *');\r\n        const enteringToolBarEls = enteringEl.querySelectorAll(':scope > ion-header > ion-toolbar');\r\n        const rootAnimation = createAnimation();\r\n        const enteringContentAnimation = createAnimation();\r\n        rootAnimation\r\n            .addElement(enteringEl)\r\n            .duration(opts.duration || DURATION)\r\n            .easing(opts.easing || EASING)\r\n            .fill('both')\r\n            .beforeRemoveClass('ion-page-invisible');\r\n        if (leavingEl && navEl) {\r\n            const navDecorAnimation = createAnimation();\r\n            navDecorAnimation.addElement(navEl);\r\n            rootAnimation.addAnimation(navDecorAnimation);\r\n        }\r\n        if (!contentEl && enteringToolBarEls.length === 0 && headerEls.length === 0) {\r\n            enteringContentAnimation.addElement(enteringEl.querySelector(':scope > .ion-page, :scope > ion-nav, :scope > ion-tabs')); // REVIEW\r\n        }\r\n        else {\r\n            enteringContentAnimation.addElement(contentEl); // REVIEW\r\n            enteringContentAnimation.addElement(headerEls);\r\n        }\r\n        rootAnimation.addAnimation(enteringContentAnimation);\r\n        if (backDirection) {\r\n            enteringContentAnimation\r\n                .beforeClearStyles([OPACITY])\r\n                .fromTo('transform', `translateX(${OFF_LEFT})`, `translateX(${CENTER})`)\r\n                .fromTo(OPACITY, OFF_OPACITY, 1);\r\n        }\r\n        else {\r\n            // entering content, forward direction\r\n            enteringContentAnimation\r\n                .beforeClearStyles([OPACITY])\r\n                .fromTo('transform', `translateX(${OFF_RIGHT})`, `translateX(${CENTER})`);\r\n        }\r\n        if (contentEl) {\r\n            const enteringTransitionEffectEl = shadow(contentEl).querySelector('.transition-effect');\r\n            if (enteringTransitionEffectEl) {\r\n                const enteringTransitionCoverEl = enteringTransitionEffectEl.querySelector('.transition-cover');\r\n                const enteringTransitionShadowEl = enteringTransitionEffectEl.querySelector('.transition-shadow');\r\n                const enteringTransitionEffect = createAnimation();\r\n                const enteringTransitionCover = createAnimation();\r\n                const enteringTransitionShadow = createAnimation();\r\n                enteringTransitionEffect\r\n                    .addElement(enteringTransitionEffectEl)\r\n                    .beforeStyles({ opacity: '1', display: 'block' })\r\n                    .afterStyles({ opacity: '', display: '' });\r\n                enteringTransitionCover\r\n                    .addElement(enteringTransitionCoverEl) // REVIEW\r\n                    .beforeClearStyles([OPACITY])\r\n                    .fromTo(OPACITY, 0, 0.1);\r\n                enteringTransitionShadow\r\n                    .addElement(enteringTransitionShadowEl) // REVIEW\r\n                    .beforeClearStyles([OPACITY])\r\n                    .fromTo(OPACITY, 0.03, 0.70);\r\n                enteringTransitionEffect.addAnimation([enteringTransitionCover, enteringTransitionShadow]);\r\n                enteringContentAnimation.addAnimation([enteringTransitionEffect]);\r\n            }\r\n        }\r\n        const enteringContentHasLargeTitle = enteringEl.querySelector('ion-header.header-collapse-condense');\r\n        const { forward, backward } = createLargeTitleTransition(rootAnimation, isRTL, backDirection, enteringEl, leavingEl);\r\n        enteringToolBarEls.forEach(enteringToolBarEl => {\r\n            const enteringToolBar = createAnimation();\r\n            enteringToolBar.addElement(enteringToolBarEl);\r\n            rootAnimation.addAnimation(enteringToolBar);\r\n            const enteringTitle = createAnimation();\r\n            enteringTitle.addElement(enteringToolBarEl.querySelector('ion-title')); // REVIEW\r\n            const enteringToolBarButtons = createAnimation();\r\n            const buttons = Array.from(enteringToolBarEl.querySelectorAll('ion-buttons,[menuToggle]'));\r\n            const parentHeader = enteringToolBarEl.closest('ion-header');\r\n            const inactiveHeader = parentHeader && parentHeader.classList.contains('header-collapse-condense-inactive');\r\n            let buttonsToAnimate;\r\n            if (backDirection) {\r\n                buttonsToAnimate = buttons.filter(button => {\r\n                    const isCollapseButton = button.classList.contains('buttons-collapse');\r\n                    return (isCollapseButton && !inactiveHeader) || !isCollapseButton;\r\n                });\r\n            }\r\n            else {\r\n                buttonsToAnimate = buttons.filter(button => !button.classList.contains('buttons-collapse'));\r\n            }\r\n            enteringToolBarButtons.addElement(buttonsToAnimate);\r\n            const enteringToolBarItems = createAnimation();\r\n            enteringToolBarItems.addElement(enteringToolBarEl.querySelectorAll(':scope > *:not(ion-title):not(ion-buttons):not([menuToggle])'));\r\n            const enteringToolBarBg = createAnimation();\r\n            enteringToolBarBg.addElement(shadow(enteringToolBarEl).querySelector('.toolbar-background')); // REVIEW\r\n            const enteringBackButton = createAnimation();\r\n            const backButtonEl = enteringToolBarEl.querySelector('ion-back-button');\r\n            if (backButtonEl) {\r\n                enteringBackButton.addElement(backButtonEl);\r\n            }\r\n            enteringToolBar.addAnimation([enteringTitle, enteringToolBarButtons, enteringToolBarItems, enteringToolBarBg, enteringBackButton]);\r\n            enteringToolBarButtons.fromTo(OPACITY, 0.01, 1);\r\n            enteringToolBarItems.fromTo(OPACITY, 0.01, 1);\r\n            if (backDirection) {\r\n                if (!inactiveHeader) {\r\n                    enteringTitle\r\n                        .fromTo('transform', `translateX(${OFF_LEFT})`, `translateX(${CENTER})`)\r\n                        .fromTo(OPACITY, 0.01, 1);\r\n                }\r\n                enteringToolBarItems.fromTo('transform', `translateX(${OFF_LEFT})`, `translateX(${CENTER})`);\r\n                // back direction, entering page has a back button\r\n                enteringBackButton.fromTo(OPACITY, 0.01, 1);\r\n            }\r\n            else {\r\n                // entering toolbar, forward direction\r\n                if (!enteringContentHasLargeTitle) {\r\n                    enteringTitle\r\n                        .fromTo('transform', `translateX(${OFF_RIGHT})`, `translateX(${CENTER})`)\r\n                        .fromTo(OPACITY, 0.01, 1);\r\n                }\r\n                enteringToolBarItems.fromTo('transform', `translateX(${OFF_RIGHT})`, `translateX(${CENTER})`);\r\n                enteringToolBarBg.beforeClearStyles([OPACITY, 'transform']);\r\n                const translucentHeader = parentHeader === null || parentHeader === void 0 ? void 0 : parentHeader.translucent;\r\n                if (!translucentHeader) {\r\n                    enteringToolBarBg.fromTo(OPACITY, 0.01, 1);\r\n                }\r\n                else {\r\n                    enteringToolBarBg.fromTo('transform', (isRTL ? 'translateX(-100%)' : 'translateX(100%)'), 'translateX(0px)');\r\n                }\r\n                // forward direction, entering page has a back button\r\n                if (!forward) {\r\n                    enteringBackButton.fromTo(OPACITY, 0.01, 1);\r\n                }\r\n                if (backButtonEl && !forward) {\r\n                    const enteringBackBtnText = createAnimation();\r\n                    enteringBackBtnText\r\n                        .addElement(shadow(backButtonEl).querySelector('.button-text')) // REVIEW\r\n                        .fromTo(`transform`, (isRTL ? 'translateX(-100px)' : 'translateX(100px)'), 'translateX(0px)');\r\n                    enteringToolBar.addAnimation(enteringBackBtnText);\r\n                }\r\n            }\r\n        });\r\n        // setup leaving view\r\n        if (leavingEl) {\r\n            const leavingContent = createAnimation();\r\n            const leavingContentEl = leavingEl.querySelector(':scope > ion-content');\r\n            leavingContent.addElement(leavingContentEl); // REVIEW\r\n            leavingContent.addElement(leavingEl.querySelectorAll(':scope > ion-header > *:not(ion-toolbar), :scope > ion-footer > *'));\r\n            rootAnimation.addAnimation(leavingContent);\r\n            if (backDirection) {\r\n                // leaving content, back direction\r\n                leavingContent\r\n                    .beforeClearStyles([OPACITY])\r\n                    .fromTo('transform', `translateX(${CENTER})`, (isRTL ? 'translateX(-100%)' : 'translateX(100%)'));\r\n                const leavingPage = getIonPageElement(leavingEl);\r\n                rootAnimation.afterAddWrite(() => {\r\n                    if (rootAnimation.getDirection() === 'normal') {\r\n                        leavingPage.style.setProperty('display', 'none');\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                // leaving content, forward direction\r\n                leavingContent\r\n                    .fromTo('transform', `translateX(${CENTER})`, `translateX(${OFF_LEFT})`)\r\n                    .fromTo(OPACITY, 1, OFF_OPACITY);\r\n            }\r\n            if (leavingContentEl) {\r\n                const leavingTransitionEffectEl = shadow(leavingContentEl).querySelector('.transition-effect');\r\n                if (leavingTransitionEffectEl) {\r\n                    const leavingTransitionCoverEl = leavingTransitionEffectEl.querySelector('.transition-cover');\r\n                    const leavingTransitionShadowEl = leavingTransitionEffectEl.querySelector('.transition-shadow');\r\n                    const leavingTransitionEffect = createAnimation();\r\n                    const leavingTransitionCover = createAnimation();\r\n                    const leavingTransitionShadow = createAnimation();\r\n                    leavingTransitionEffect\r\n                        .addElement(leavingTransitionEffectEl)\r\n                        .beforeStyles({ opacity: '1', display: 'block' })\r\n                        .afterStyles({ opacity: '', display: '' });\r\n                    leavingTransitionCover\r\n                        .addElement(leavingTransitionCoverEl) // REVIEW\r\n                        .beforeClearStyles([OPACITY])\r\n                        .fromTo(OPACITY, 0.1, 0);\r\n                    leavingTransitionShadow\r\n                        .addElement(leavingTransitionShadowEl) // REVIEW\r\n                        .beforeClearStyles([OPACITY])\r\n                        .fromTo(OPACITY, 0.70, 0.03);\r\n                    leavingTransitionEffect.addAnimation([leavingTransitionCover, leavingTransitionShadow]);\r\n                    leavingContent.addAnimation([leavingTransitionEffect]);\r\n                }\r\n            }\r\n            const leavingToolBarEls = leavingEl.querySelectorAll(':scope > ion-header > ion-toolbar');\r\n            leavingToolBarEls.forEach(leavingToolBarEl => {\r\n                const leavingToolBar = createAnimation();\r\n                leavingToolBar.addElement(leavingToolBarEl);\r\n                const leavingTitle = createAnimation();\r\n                leavingTitle.addElement(leavingToolBarEl.querySelector('ion-title')); // REVIEW\r\n                const leavingToolBarButtons = createAnimation();\r\n                const buttons = leavingToolBarEl.querySelectorAll('ion-buttons,[menuToggle]');\r\n                const parentHeader = leavingToolBarEl.closest('ion-header');\r\n                const inactiveHeader = parentHeader && parentHeader.classList.contains('header-collapse-condense-inactive');\r\n                const buttonsToAnimate = Array.from(buttons).filter(button => {\r\n                    const isCollapseButton = button.classList.contains('buttons-collapse');\r\n                    return (isCollapseButton && !inactiveHeader) || !isCollapseButton;\r\n                });\r\n                leavingToolBarButtons.addElement(buttonsToAnimate);\r\n                const leavingToolBarItems = createAnimation();\r\n                const leavingToolBarItemEls = leavingToolBarEl.querySelectorAll(':scope > *:not(ion-title):not(ion-buttons):not([menuToggle])');\r\n                if (leavingToolBarItemEls.length > 0) {\r\n                    leavingToolBarItems.addElement(leavingToolBarItemEls);\r\n                }\r\n                const leavingToolBarBg = createAnimation();\r\n                leavingToolBarBg.addElement(shadow(leavingToolBarEl).querySelector('.toolbar-background')); // REVIEW\r\n                const leavingBackButton = createAnimation();\r\n                const backButtonEl = leavingToolBarEl.querySelector('ion-back-button');\r\n                if (backButtonEl) {\r\n                    leavingBackButton.addElement(backButtonEl);\r\n                }\r\n                leavingToolBar.addAnimation([leavingTitle, leavingToolBarButtons, leavingToolBarItems, leavingBackButton, leavingToolBarBg]);\r\n                rootAnimation.addAnimation(leavingToolBar);\r\n                // fade out leaving toolbar items\r\n                leavingBackButton.fromTo(OPACITY, 0.99, 0);\r\n                leavingToolBarButtons.fromTo(OPACITY, 0.99, 0);\r\n                leavingToolBarItems.fromTo(OPACITY, 0.99, 0);\r\n                if (backDirection) {\r\n                    if (!inactiveHeader) {\r\n                        // leaving toolbar, back direction\r\n                        leavingTitle\r\n                            .fromTo('transform', `translateX(${CENTER})`, (isRTL ? 'translateX(-100%)' : 'translateX(100%)'))\r\n                            .fromTo(OPACITY, 0.99, 0);\r\n                    }\r\n                    leavingToolBarItems.fromTo('transform', `translateX(${CENTER})`, (isRTL ? 'translateX(-100%)' : 'translateX(100%)'));\r\n                    leavingToolBarBg.beforeClearStyles([OPACITY, 'transform']);\r\n                    // leaving toolbar, back direction, and there's no entering toolbar\r\n                    // should just slide out, no fading out\r\n                    const translucentHeader = parentHeader === null || parentHeader === void 0 ? void 0 : parentHeader.translucent;\r\n                    if (!translucentHeader) {\r\n                        leavingToolBarBg.fromTo(OPACITY, 0.99, 0);\r\n                    }\r\n                    else {\r\n                        leavingToolBarBg.fromTo('transform', 'translateX(0px)', (isRTL ? 'translateX(-100%)' : 'translateX(100%)'));\r\n                    }\r\n                    if (backButtonEl && !backward) {\r\n                        const leavingBackBtnText = createAnimation();\r\n                        leavingBackBtnText\r\n                            .addElement(shadow(backButtonEl).querySelector('.button-text')) // REVIEW\r\n                            .fromTo('transform', `translateX(${CENTER})`, `translateX(${(isRTL ? -124 : 124) + 'px'})`);\r\n                        leavingToolBar.addAnimation(leavingBackBtnText);\r\n                    }\r\n                }\r\n                else {\r\n                    // leaving toolbar, forward direction\r\n                    if (!inactiveHeader) {\r\n                        leavingTitle\r\n                            .fromTo('transform', `translateX(${CENTER})`, `translateX(${OFF_LEFT})`)\r\n                            .fromTo(OPACITY, 0.99, 0)\r\n                            .afterClearStyles([TRANSFORM, OPACITY]);\r\n                    }\r\n                    leavingToolBarItems\r\n                        .fromTo('transform', `translateX(${CENTER})`, `translateX(${OFF_LEFT})`)\r\n                        .afterClearStyles([TRANSFORM, OPACITY]);\r\n                    leavingBackButton.afterClearStyles([OPACITY]);\r\n                    leavingTitle.afterClearStyles([OPACITY]);\r\n                    leavingToolBarButtons.afterClearStyles([OPACITY]);\r\n                }\r\n            });\r\n        }\r\n        return rootAnimation;\r\n    }\r\n    catch (err) {\r\n        throw err;\r\n    }\r\n};\n\nexport { iosTransitionAnimation, shadow };\n"],"sourceRoot":"webpack:///"}